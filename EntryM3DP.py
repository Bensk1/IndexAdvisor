import numpy as np
import pickle

import Model.Model3DQNFixCount as model
import Model.Model3DQNFixStorage as model2
import Utility.PostgreSQL as pg

import os
import sys

module_path = os.path.abspath(os.path.join('../rl_index_selection'))
if module_path not in sys.path:
    sys.path.append(module_path)

# from index_selection_evaluation.selection import Workload

WORKLOAD_SHORT = "job"


def One_Run_DQN(is_fixcount, conf, __x, is_dnn, is_ps, is_double, a, storage_budget_bytes, frequencies, query_ids):
    conf['NAME'] = 'MA_9' + str(__x)
    print('=====load workload=====')

    # TPCH
    # wl = [["select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from lineitem where l_shipdate <= date '1998-12-01' - interval '68' day group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus ;"], ["select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'FURNITURE' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < date '1995-03-17' and l_shipdate > date '1995-03-17' group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate ;"], ["select o_orderpriority, count(*) as order_count from orders where o_orderdate >= date '1995-07-01' and o_orderdate < date '1995-07-01' + interval '3' month and exists ( select * from lineitem where l_orderkey = o_orderkey and l_commitdate < l_receiptdate ) group by o_orderpriority order by o_orderpriority ;"], ["select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'AMERICA' and o_orderdate >= date '1993-01-01' and o_orderdate < date '1993-01-01' + interval '1' year group by n_name order by revenue desc ;"], ["select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= date '1993-01-01' and l_shipdate < date '1993-01-01' + interval '1' year and l_discount between 0.07 - 0.01 and 0.07 + 0.01 and l_quantity < 25 ;"], ["select supp_nation, cust_nation, l_year, sum(volume) as revenue from ( select n1.n_name as supp_nation, n2.n_name as cust_nation, extract(year from l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume from supplier, lineitem, orders, customer, nation n1, nation n2 where s_suppkey = l_suppkey and o_orderkey = l_orderkey and c_custkey = o_custkey and s_nationkey = n1.n_nationkey and c_nationkey = n2.n_nationkey and ( (n1.n_name = 'MOZAMBIQUE' and n2.n_name = 'UNITED KINGDOM') or (n1.n_name = 'UNITED KINGDOM' and n2.n_name = 'MOZAMBIQUE') ) and l_shipdate between date '1995-01-01' and date '1996-12-31' ) as shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year ;"], ["select o_year, sum(case when nation = 'MOZAMBIQUE' then volume else 0 end) / sum(volume) as mkt_share from ( select extract(year from o_orderdate) as o_year, l_extendedprice * (1 - l_discount) as volume, n2.n_name as nation from part, supplier, lineitem, orders, customer, nation n1, nation n2, region where p_partkey = l_partkey and s_suppkey = l_suppkey and l_orderkey = o_orderkey and o_custkey = c_custkey and c_nationkey = n1.n_nationkey and n1.n_regionkey = r_regionkey and r_name = 'AFRICA' and s_nationkey = n2.n_nationkey and o_orderdate between date '1995-01-01' and date '1996-12-31' and p_type = 'PROMO POLISHED TIN' ) as all_nations group by o_year order by o_year ;"], ["select nation, o_year, sum(amount) as sum_profit from ( select n_name as nation, extract(year from o_orderdate) as o_year, l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount from part, supplier, lineitem, partsupp, orders, nation where s_suppkey = l_suppkey and ps_suppkey = l_suppkey and ps_partkey = l_partkey and p_partkey = l_partkey and o_orderkey = l_orderkey and s_nationkey = n_nationkey and p_name like '%thistle%' ) as profit group by nation, o_year order by nation, o_year desc ;"], ["select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= date '1993-11-01' and o_orderdate < date '1993-11-01' + interval '3' month and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc ;"], ["select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'JAPAN' group by ps_partkey having sum(ps_supplycost * ps_availqty) > ( select sum(ps_supplycost * ps_availqty) * 0.0000100000 from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'JAPAN' ) order by value desc ;"], ["select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority <> '1-URGENT' and o_orderpriority <> '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('FOB', 'REG AIR') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= date '1993-01-01' and l_receiptdate < date '1993-01-01' + interval '1' year group by l_shipmode order by l_shipmode ;"], ["select c_count, count(*) as custdist from ( select c_custkey, count(o_orderkey) c_count from customer left outer join orders on c_custkey = o_custkey and o_comment not like '%special%packages%' group by c_custkey ) as alias123  group by c_count order by custdist desc, c_count desc ;"], ["select 100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice * (1 - l_discount) else 0 end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= date '1993-04-01' and l_shipdate < date '1993-04-01' + interval '1' month ;"], ["create view revenue0 (supplier_no, total_revenue) as select l_suppkey, sum(l_extendedprice * (1 - l_discount)) from lineitem where l_shipdate >= date '1995-07-01' and l_shipdate < date '1995-07-01' + interval '3' month group by l_suppkey;   select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue0 where s_suppkey = supplier_no and total_revenue = ( select max(total_revenue) from revenue0 ) order by s_suppkey;  drop view revenue0 ; "], ["select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand <> 'Brand#41' and p_type not like 'MEDIUM BURNISHED%' and p_size in (4, 22, 35, 31, 47, 44, 30, 11) and ps_suppkey not in ( select s_suppkey from supplier where s_comment like '%Customer%Complaints%' ) group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size ;"], ['select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > 313 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate ;'], ["select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where ( p_partkey = l_partkey and p_brand = 'Brand#13' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity >= 6 and l_quantity <= 6 + 10 and p_size between 1 and 5 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#43' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity >= 11 and l_quantity <= 11 + 10 and p_size between 1 and 10 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#55' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity >= 27 and l_quantity <= 27 + 10 and p_size between 1 and 15 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) ;"], ["select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from lineitem l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey <> l1.l_suppkey ) and not exists ( select * from lineitem l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey <> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate ) and s_nationkey = n_nationkey and n_name = 'PERU' group by s_name order by numwait desc, s_name ;"], ["select cntrycode, count(*) as numcust, sum(c_acctbal) as totacctbal from ( select substring(c_phone from 1 for 2) as cntrycode, c_acctbal from customer where substring(c_phone from 1 for 2) in ('24', '33', '31', '10', '15', '28', '23') and c_acctbal > ( select avg(c_acctbal) from customer where c_acctbal > 0.00 and substring(c_phone from 1 for 2) in ('24', '33', '31', '10', '15', '28', '23') ) and not exists ( select * from orders where o_custkey = c_custkey ) ) as custsale group by cntrycode order by cntrycode ;"]]
    # TPCH (all 22 to account for query_ids approach)
    wl = None
    if WORKLOAD_SHORT == "tpch":
        wl = [["  select l_returnflag, l_linestatus, sum(l_quantity) as sum_qty, sum(l_extendedprice) as sum_base_price, sum(l_extendedprice * (1 - l_discount)) as sum_disc_price, sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge, avg(l_quantity) as avg_qty, avg(l_extendedprice) as avg_price, avg(l_discount) as avg_disc, count(*) as count_order from lineitem where l_shipdate <= date '1998-12-01' - interval '68' day group by l_returnflag, l_linestatus order by l_returnflag, l_linestatus ; "], ["  select s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment from part, supplier, partsupp, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and p_size = 38 and p_type like '%STEEL' and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' and ps_supplycost = ( select min(ps_supplycost) from partsupp, supplier, nation, region where p_partkey = ps_partkey and s_suppkey = ps_suppkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA' ) order by s_acctbal desc, n_name, s_name, p_partkey limit 100; "], ["  select l_orderkey, sum(l_extendedprice * (1 - l_discount)) as revenue, o_orderdate, o_shippriority from customer, orders, lineitem where c_mktsegment = 'FURNITURE' and c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate < date '1995-03-17' and l_shipdate > date '1995-03-17' group by l_orderkey, o_orderdate, o_shippriority order by revenue desc, o_orderdate limit 10; "], ["  select o_orderpriority, count(*) as order_count from orders where o_orderdate >= date '1995-07-01' and o_orderdate < date '1995-07-01' + interval '3' month and exists ( select * from lineitem where l_orderkey = o_orderkey and l_commitdate < l_receiptdate ) group by o_orderpriority order by o_orderpriority ; "], ["  select n_name, sum(l_extendedprice * (1 - l_discount)) as revenue from customer, orders, lineitem, supplier, nation, region where c_custkey = o_custkey and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'AMERICA' and o_orderdate >= date '1993-01-01' and o_orderdate < date '1993-01-01' + interval '1' year group by n_name order by revenue desc ; "], ["  select sum(l_extendedprice * l_discount) as revenue from lineitem where l_shipdate >= date '1993-01-01' and l_shipdate < date '1993-01-01' + interval '1' year and l_discount between 0.07 - 0.01 and 0.07 + 0.01 and l_quantity < 25 ; "], ["  select supp_nation, cust_nation, l_year, sum(volume) as revenue from ( select n1.n_name as supp_nation, n2.n_name as cust_nation, extract(year from l_shipdate) as l_year, l_extendedprice * (1 - l_discount) as volume from supplier, lineitem, orders, customer, nation n1, nation n2 where s_suppkey = l_suppkey and o_orderkey = l_orderkey and c_custkey = o_custkey and s_nationkey = n1.n_nationkey and c_nationkey = n2.n_nationkey and ( (n1.n_name = 'MOZAMBIQUE' and n2.n_name = 'UNITED KINGDOM') or (n1.n_name = 'UNITED KINGDOM' and n2.n_name = 'MOZAMBIQUE') ) and l_shipdate between date '1995-01-01' and date '1996-12-31' ) as shipping group by supp_nation, cust_nation, l_year order by supp_nation, cust_nation, l_year ; "], ["  select o_year, sum(case when nation = 'MOZAMBIQUE' then volume else 0 end) / sum(volume) as mkt_share from ( select extract(year from o_orderdate) as o_year, l_extendedprice * (1 - l_discount) as volume, n2.n_name as nation from part, supplier, lineitem, orders, customer, nation n1, nation n2, region where p_partkey = l_partkey and s_suppkey = l_suppkey and l_orderkey = o_orderkey and o_custkey = c_custkey and c_nationkey = n1.n_nationkey and n1.n_regionkey = r_regionkey and r_name = 'AFRICA' and s_nationkey = n2.n_nationkey and o_orderdate between date '1995-01-01' and date '1996-12-31' and p_type = 'PROMO POLISHED TIN' ) as all_nations group by o_year order by o_year ; "], ["  select nation, o_year, sum(amount) as sum_profit from ( select n_name as nation, extract(year from o_orderdate) as o_year, l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount from part, supplier, lineitem, partsupp, orders, nation where s_suppkey = l_suppkey and ps_suppkey = l_suppkey and ps_partkey = l_partkey and p_partkey = l_partkey and o_orderkey = l_orderkey and s_nationkey = n_nationkey and p_name like '%thistle%' ) as profit group by nation, o_year order by nation, o_year desc ; "], ["  select c_custkey, c_name, sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal, n_name, c_address, c_phone, c_comment from customer, orders, lineitem, nation where c_custkey = o_custkey and l_orderkey = o_orderkey and o_orderdate >= date '1993-11-01' and o_orderdate < date '1993-11-01' + interval '3' month and l_returnflag = 'R' and c_nationkey = n_nationkey group by c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment order by revenue desc limit 20; "], ["  select ps_partkey, sum(ps_supplycost * ps_availqty) as value from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'JAPAN' group by ps_partkey having sum(ps_supplycost * ps_availqty) > ( select sum(ps_supplycost * ps_availqty) * 0.0000100000 from partsupp, supplier, nation where ps_suppkey = s_suppkey and s_nationkey = n_nationkey and n_name = 'JAPAN' ) order by value desc ; "], ["  select l_shipmode, sum(case when o_orderpriority = '1-URGENT' or o_orderpriority = '2-HIGH' then 1 else 0 end) as high_line_count, sum(case when o_orderpriority <> '1-URGENT' and o_orderpriority <> '2-HIGH' then 1 else 0 end) as low_line_count from orders, lineitem where o_orderkey = l_orderkey and l_shipmode in ('FOB', 'REG AIR') and l_commitdate < l_receiptdate and l_shipdate < l_commitdate and l_receiptdate >= date '1993-01-01' and l_receiptdate < date '1993-01-01' + interval '1' year group by l_shipmode order by l_shipmode ; "], ["  select c_count, count(*) as custdist from ( select c_custkey, count(o_orderkey) c_count from customer left outer join orders on c_custkey = o_custkey and o_comment not like '%special%packages%' group by c_custkey ) as alias123  group by c_count order by custdist desc, c_count desc ; "], ["  select 100.00 * sum(case when p_type like 'PROMO%' then l_extendedprice * (1 - l_discount) else 0 end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue from lineitem, part where l_partkey = p_partkey and l_shipdate >= date '1993-04-01' and l_shipdate < date '1993-04-01' + interval '1' month ; "], [" create view revenue0 (supplier_no, total_revenue) as select l_suppkey, sum(l_extendedprice * (1 - l_discount)) from lineitem where l_shipdate >= date '1995-07-01' and l_shipdate < date '1995-07-01' + interval '3' month group by l_suppkey;   select s_suppkey, s_name, s_address, s_phone, total_revenue from supplier, revenue0 where s_suppkey = supplier_no and total_revenue = ( select max(total_revenue) from revenue0 ) order by s_suppkey;  drop view revenue0 ; "], ["  select p_brand, p_type, p_size, count(distinct ps_suppkey) as supplier_cnt from partsupp, part where p_partkey = ps_partkey and p_brand <> 'Brand#41' and p_type not like 'MEDIUM BURNISHED%' and p_size in (4, 22, 35, 31, 47, 44, 30, 11) and ps_suppkey not in ( select s_suppkey from supplier where s_comment like '%Customer%Complaints%' ) group by p_brand, p_type, p_size order by supplier_cnt desc, p_brand, p_type, p_size ; "], ["  select sum(l_extendedprice) / 7.0 as avg_yearly from lineitem, part where p_partkey = l_partkey and p_brand = 'Brand#12' and p_container = 'SM BAG' and l_quantity < ( select 0.2 * avg(l_quantity) from lineitem where l_partkey = p_partkey ) ; "], ["  select c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity) from customer, orders, lineitem where o_orderkey in ( select l_orderkey from lineitem group by l_orderkey having sum(l_quantity) > 313 ) and c_custkey = o_custkey and o_orderkey = l_orderkey group by c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice order by o_totalprice desc, o_orderdate limit 100; "], ["  select sum(l_extendedprice* (1 - l_discount)) as revenue from lineitem, part where ( p_partkey = l_partkey and p_brand = 'Brand#13' and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity >= 6 and l_quantity <= 6 + 10 and p_size between 1 and 5 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#43' and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity >= 11 and l_quantity <= 11 + 10 and p_size between 1 and 10 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) or ( p_partkey = l_partkey and p_brand = 'Brand#55' and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity >= 27 and l_quantity <= 27 + 10 and p_size between 1 and 15 and l_shipmode in ('AIR', 'AIR REG') and l_shipinstruct = 'DELIVER IN PERSON' ) ; "], ["  select s_name, s_address from supplier, nation where s_suppkey in ( select ps_suppkey from partsupp where ps_partkey in ( select p_partkey from part where p_name like 'ivory%' ) and ps_availqty > ( select 0.5 * sum(l_quantity) from lineitem where l_partkey = ps_partkey and l_suppkey = ps_suppkey and l_shipdate >= date '1996-01-01' and l_shipdate < date '1996-01-01' + interval '1' year ) ) and s_nationkey = n_nationkey and n_name = 'KENYA' order by s_name ; "], ["  select s_name, count(*) as numwait from supplier, lineitem l1, orders, nation where s_suppkey = l1.l_suppkey and o_orderkey = l1.l_orderkey and o_orderstatus = 'F' and l1.l_receiptdate > l1.l_commitdate and exists ( select * from lineitem l2 where l2.l_orderkey = l1.l_orderkey and l2.l_suppkey <> l1.l_suppkey ) and not exists ( select * from lineitem l3 where l3.l_orderkey = l1.l_orderkey and l3.l_suppkey <> l1.l_suppkey and l3.l_receiptdate > l3.l_commitdate ) and s_nationkey = n_nationkey and n_name = 'PERU' group by s_name order by numwait desc, s_name limit 100; "], ["  select cntrycode, count(*) as numcust, sum(c_acctbal) as totacctbal from ( select substring(c_phone from 1 for 2) as cntrycode, c_acctbal from customer where substring(c_phone from 1 for 2) in ('24', '33', '31', '10', '15', '28', '23') and c_acctbal > ( select avg(c_acctbal) from customer where c_acctbal > 0.00 and substring(c_phone from 1 for 2) in ('24', '33', '31', '10', '15', '28', '23') ) and not exists ( select * from orders where o_custkey = c_custkey ) ) as custsale group by cntrycode order by cntrycode ; "], ]
    # TPCDS
    if WORKLOAD_SHORT == "tpcds":
        wl = [["with customer_total_return as (select sr_customer_sk as ctr_customer_sk ,sr_store_sk as ctr_store_sk ,sum(SR_RETURN_AMT) as ctr_total_return from store_returns ,date_dim where sr_returned_date_sk = d_date_sk and d_year =2000 group by sr_customer_sk ,sr_store_sk)  select  c_customer_id from customer_total_return ctr1 ,store ,customer where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2 from customer_total_return ctr2 where ctr1.ctr_store_sk = ctr2.ctr_store_sk) and s_store_sk = ctr1.ctr_store_sk and s_state = 'SD' and ctr1.ctr_customer_sk = c_customer_sk order by c_customer_id limit 100;  "], ["with wscs as  (select sold_date_sk         ,sales_price   from (select ws_sold_date_sk sold_date_sk               ,ws_ext_sales_price sales_price         from web_sales          union all         select cs_sold_date_sk sold_date_sk               ,cs_ext_sales_price sales_price         from catalog_sales) as alias123 ),  wswscs as   (select d_week_seq,         sum(case when (d_day_name='Sunday') then sales_price else null end) sun_sales,         sum(case when (d_day_name='Monday') then sales_price else null end) mon_sales,         sum(case when (d_day_name='Tuesday') then sales_price else  null end) tue_sales,         sum(case when (d_day_name='Wednesday') then sales_price else null end) wed_sales,         sum(case when (d_day_name='Thursday') then sales_price else null end) thu_sales,         sum(case when (d_day_name='Friday') then sales_price else null end) fri_sales,         sum(case when (d_day_name='Saturday') then sales_price else null end) sat_sales  from wscs      ,date_dim  where d_date_sk = sold_date_sk  group by d_week_seq)  select d_week_seq1        ,round(sun_sales1/sun_sales2,2)        ,round(mon_sales1/mon_sales2,2)        ,round(tue_sales1/tue_sales2,2)        ,round(wed_sales1/wed_sales2,2)        ,round(thu_sales1/thu_sales2,2)        ,round(fri_sales1/fri_sales2,2)        ,round(sat_sales1/sat_sales2,2)  from  (select wswscs.d_week_seq d_week_seq1         ,sun_sales sun_sales1         ,mon_sales mon_sales1         ,tue_sales tue_sales1         ,wed_sales wed_sales1         ,thu_sales thu_sales1         ,fri_sales fri_sales1         ,sat_sales sat_sales1   from wswscs,date_dim    where date_dim.d_week_seq = wswscs.d_week_seq and         d_year = 2001) y,  (select wswscs.d_week_seq d_week_seq2         ,sun_sales sun_sales2         ,mon_sales mon_sales2         ,tue_sales tue_sales2         ,wed_sales wed_sales2         ,thu_sales thu_sales2         ,fri_sales fri_sales2         ,sat_sales sat_sales2   from wswscs       ,date_dim    where date_dim.d_week_seq = wswscs.d_week_seq and         d_year = 2001+1) z  where d_week_seq1=d_week_seq2-53  order by d_week_seq1;  "], ["select  dt.d_year         ,item.i_brand_id brand_id         ,item.i_brand brand        ,sum(ss_ext_sales_price) sum_agg  from  date_dim dt        ,store_sales       ,item  where dt.d_date_sk = store_sales.ss_sold_date_sk    and store_sales.ss_item_sk = item.i_item_sk    and item.i_manufact_id = 144    and dt.d_moy=11  group by dt.d_year       ,item.i_brand       ,item.i_brand_id  order by dt.d_year          ,sum_agg desc          ,brand_id  limit 100;  "], ["with year_total as (  select c_customer_id customer_id        ,c_first_name customer_first_name        ,c_last_name customer_last_name        ,c_preferred_cust_flag customer_preferred_cust_flag        ,c_birth_country customer_birth_country        ,c_login customer_login        ,c_email_address customer_email_address        ,d_year dyear        ,sum(((ss_ext_list_price-ss_ext_wholesale_cost-ss_ext_discount_amt)+ss_ext_sales_price)/2) year_total        ,'s' sale_type  from customer      ,store_sales      ,date_dim  where c_customer_sk = ss_customer_sk    and ss_sold_date_sk = d_date_sk  group by c_customer_id          ,c_first_name          ,c_last_name          ,c_preferred_cust_flag          ,c_birth_country          ,c_login          ,c_email_address          ,d_year  union all  select c_customer_id customer_id        ,c_first_name customer_first_name        ,c_last_name customer_last_name        ,c_preferred_cust_flag customer_preferred_cust_flag        ,c_birth_country customer_birth_country        ,c_login customer_login        ,c_email_address customer_email_address        ,d_year dyear        ,sum((((cs_ext_list_price-cs_ext_wholesale_cost-cs_ext_discount_amt)+cs_ext_sales_price)/2) ) year_total        ,'c' sale_type  from customer      ,catalog_sales      ,date_dim  where c_customer_sk = cs_bill_customer_sk    and cs_sold_date_sk = d_date_sk  group by c_customer_id          ,c_first_name          ,c_last_name          ,c_preferred_cust_flag          ,c_birth_country          ,c_login          ,c_email_address          ,d_year union all  select c_customer_id customer_id        ,c_first_name customer_first_name        ,c_last_name customer_last_name        ,c_preferred_cust_flag customer_preferred_cust_flag        ,c_birth_country customer_birth_country        ,c_login customer_login        ,c_email_address customer_email_address        ,d_year dyear        ,sum((((ws_ext_list_price-ws_ext_wholesale_cost-ws_ext_discount_amt)+ws_ext_sales_price)/2) ) year_total        ,'w' sale_type  from customer      ,web_sales      ,date_dim  where c_customer_sk = ws_bill_customer_sk    and ws_sold_date_sk = d_date_sk  group by c_customer_id          ,c_first_name          ,c_last_name          ,c_preferred_cust_flag          ,c_birth_country          ,c_login          ,c_email_address          ,d_year          )   select                     t_s_secyear.customer_id                  ,t_s_secyear.customer_first_name                  ,t_s_secyear.customer_last_name                  ,t_s_secyear.customer_preferred_cust_flag  from year_total t_s_firstyear      ,year_total t_s_secyear      ,year_total t_c_firstyear      ,year_total t_c_secyear      ,year_total t_w_firstyear      ,year_total t_w_secyear  where t_s_secyear.customer_id = t_s_firstyear.customer_id    and t_s_firstyear.customer_id = t_c_secyear.customer_id    and t_s_firstyear.customer_id = t_c_firstyear.customer_id    and t_s_firstyear.customer_id = t_w_firstyear.customer_id    and t_s_firstyear.customer_id = t_w_secyear.customer_id    and t_s_firstyear.sale_type = 's'    and t_c_firstyear.sale_type = 'c'    and t_w_firstyear.sale_type = 'w'    and t_s_secyear.sale_type = 's'    and t_c_secyear.sale_type = 'c'    and t_w_secyear.sale_type = 'w'    and t_s_firstyear.dyear =  2001    and t_s_secyear.dyear = 2001+1    and t_c_firstyear.dyear =  2001    and t_c_secyear.dyear =  2001+1    and t_w_firstyear.dyear = 2001    and t_w_secyear.dyear = 2001+1    and t_s_firstyear.year_total > 0    and t_c_firstyear.year_total > 0    and t_w_firstyear.year_total > 0    and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end            > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end    and case when t_c_firstyear.year_total > 0 then t_c_secyear.year_total / t_c_firstyear.year_total else null end            > case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end  order by t_s_secyear.customer_id          ,t_s_secyear.customer_first_name          ,t_s_secyear.customer_last_name          ,t_s_secyear.customer_preferred_cust_flag limit 100;  "], ["with ssr as  (select s_store_id,         sum(sales_price) as sales,         sum(profit) as profit,         sum(return_amt) as returns,         sum(net_loss) as profit_loss  from   ( select  ss_store_sk as store_sk,             ss_sold_date_sk  as date_sk,             ss_ext_sales_price as sales_price,             ss_net_profit as profit,             cast(0 as decimal(7,2)) as return_amt,             cast(0 as decimal(7,2)) as net_loss     from store_sales     union all     select sr_store_sk as store_sk,            sr_returned_date_sk as date_sk,            cast(0 as decimal(7,2)) as sales_price,            cast(0 as decimal(7,2)) as profit,            sr_return_amt as return_amt,            sr_net_loss as net_loss     from store_returns    ) salesreturns,      date_dim,      store  where date_sk = d_date_sk        and d_date between cast('2001-08-15' as date)                    and (cast('2001-08-15' as date) +  interval '14 days')        and store_sk = s_store_sk  group by s_store_id)  ,  csr as  (select cp_catalog_page_id,         sum(sales_price) as sales,         sum(profit) as profit,         sum(return_amt) as returns,         sum(net_loss) as profit_loss  from   ( select  cs_catalog_page_sk as page_sk,             cs_sold_date_sk  as date_sk,             cs_ext_sales_price as sales_price,             cs_net_profit as profit,             cast(0 as decimal(7,2)) as return_amt,             cast(0 as decimal(7,2)) as net_loss     from catalog_sales     union all     select cr_catalog_page_sk as page_sk,            cr_returned_date_sk as date_sk,            cast(0 as decimal(7,2)) as sales_price,            cast(0 as decimal(7,2)) as profit,            cr_return_amount as return_amt,            cr_net_loss as net_loss     from catalog_returns    ) salesreturns,      date_dim,      catalog_page  where date_sk = d_date_sk        and d_date between cast('2001-08-15' as date)                   and (cast('2001-08-15' as date) +  interval '14 days')        and page_sk = cp_catalog_page_sk  group by cp_catalog_page_id)  ,  wsr as  (select web_site_id,         sum(sales_price) as sales,         sum(profit) as profit,         sum(return_amt) as returns,         sum(net_loss) as profit_loss  from   ( select  ws_web_site_sk as wsr_web_site_sk,             ws_sold_date_sk  as date_sk,             ws_ext_sales_price as sales_price,             ws_net_profit as profit,             cast(0 as decimal(7,2)) as return_amt,             cast(0 as decimal(7,2)) as net_loss     from web_sales     union all     select ws_web_site_sk as wsr_web_site_sk,            wr_returned_date_sk as date_sk,            cast(0 as decimal(7,2)) as sales_price,            cast(0 as decimal(7,2)) as profit,            wr_return_amt as return_amt,            wr_net_loss as net_loss     from web_returns left outer join web_sales on          ( wr_item_sk = ws_item_sk            and wr_order_number = ws_order_number)    ) salesreturns,      date_dim,      web_site  where date_sk = d_date_sk        and d_date between cast('2001-08-15' as date)                   and (cast('2001-08-15' as date) +  interval '14 days')        and wsr_web_site_sk = web_site_sk  group by web_site_id)   select  channel         , id         , sum(sales) as sales         , sum(returns) as returns         , sum(profit) as profit  from   (select 'store channel' as channel         , 'store' || s_store_id as id         , sales         , returns         , (profit - profit_loss) as profit  from   ssr  union all  select 'catalog channel' as channel         , 'catalog_page' || cp_catalog_page_id as id         , sales         , returns         , (profit - profit_loss) as profit  from  csr  union all  select 'web channel' as channel         , 'web_site' || web_site_id as id         , sales         , returns         , (profit - profit_loss) as profit  from   wsr  ) x  group by rollup (channel, id)  order by channel          ,id  limit 100;  "], ["select  a.ca_state state, count(*) cnt  from customer_address a      ,customer c      ,store_sales s      ,date_dim d      ,item i  where       a.ca_address_sk = c.c_current_addr_sk      and c.c_customer_sk = s.ss_customer_sk      and s.ss_sold_date_sk = d.d_date_sk     and s.ss_item_sk = i.i_item_sk      and d.d_month_seq =          (select distinct (d_month_seq)           from date_dim                where d_year = 2000              and d_moy = 6 )     and i.i_current_price > 1.2 *               (select avg(j.i_current_price)           from item j         where j.i_category = i.i_category)  group by a.ca_state  having count(*) >= 10  order by cnt, a.ca_state   limit 100;  "], ["select  i_item_id,          avg(ss_quantity) agg1,         avg(ss_list_price) agg2,         avg(ss_coupon_amt) agg3,         avg(ss_sales_price) agg4   from store_sales, customer_demographics, date_dim, item, promotion  where ss_sold_date_sk = d_date_sk and        ss_item_sk = i_item_sk and        ss_cdemo_sk = cd_demo_sk and        ss_promo_sk = p_promo_sk and        cd_gender = 'F' and         cd_marital_status = 'D' and        cd_education_status = 'Primary' and        (p_channel_email = 'N' or p_channel_event = 'N') and        d_year = 1999   group by i_item_id  order by i_item_id  limit 100;  "], ["select  s_store_name       ,sum(ss_net_profit)  from store_sales      ,date_dim      ,store,      (select ca_zip      from (       SELECT substr(ca_zip,1,5) ca_zip       FROM customer_address       WHERE substr(ca_zip,1,5) IN (                           '51592','12874','75448','20526','16598','69481',                           '44178','63847','77089','75738','84435',                           '98644','39816','33520','34022','15943',                           '67802','45641','99472','56662','87449',                           '42444','43694','75902','50118','75017',                           '50715','62809','15236','17085','94980',                           '12088','65425','97710','12356','69804',                           '63833','77425','51500','40726','37375',                           '40322','29603','88705','17263','72523',                           '34073','27932','40144','30361','33672',                           '36224','24800','11264','63956','53289',                           '64793','31524','55196','19896','23609',                           '12538','94831','65052','10283','86888',                           '13855','72258','26896','30930','23919',                           '21060','65601','20669','36498','74869',                           '32954','65913','87405','26321','43950',                           '53315','20530','80857','48162','24635',                           '27485','13695','74428','62238','72907',                           '39680','70066','18682','11400','83568',                           '65232','75610','13253','73607','38168',                           '16611','41237','18090','80672','59028',                           '39876','38403','66620','99144','53591',                           '13019','51376','39927','32449','20922',                           '45960','78655','86886','93439','37194',                           '57367','14176','82050','13032','70976',                           '90428','67352','75724','86921','62851',                           '92006','89081','70270','44513','67286',                           '25958','80363','92023','37849','42953',                           '26055','18647','12479','34843','74218',                           '95563','14999','49989','51854','70059',                           '93432','31297','85679','88102','41891',                           '61619','32194','20987','26496','55478',                           '48576','31195','50292','98005','66485',                           '12210','74095','17156','79340','37362',                           '77285','78358','35825','29243','93559',                           '25429','42169','25813','46415','40564',                           '63969','36572','31162','14592','79161',                           '83895','66213','39868','35109','22047',                           '18612','72747','25265','49037','33829',                           '56337','21118','58143','94131','89977',                           '30990','34173','74712','28668','30333',                           '23874','91008','67661','25327','64480',                           '20003','17255','41455','25414','39295',                           '67223','71757','56401','41331','73833',                           '10580','71943','28374','96485','36919',                           '31769','19243','20507','72735','23822',                           '26101','26058','63533','92915','29364',                           '82698','32575','87592','16355','17443',                           '55246','61341','80330','73109','16028',                           '10541','70082','67157','22163','34781',                           '40355','77987','17976','51321','88954',                           '22769','60514','11792','12628','45819',                           '93004','48825','84063','33623','21524',                           '80705','17513','47850','84245','97990',                           '14488','63098','17334','23865','27264',                           '47741','71342','53822','20335','92320',                           '31399','49729','92697','62526','36597',                           '77452','22616','58169','86111','10856',                           '31755','68859','43862','90087','37656',                           '57856','49535','24001','38054','15134',                           '29760','54549','54697','93565','62106',                           '71774','21181','12640','20573','34945',                           '94686','39775','44564','51829','99290',                           '53849','14428','19954','90672','20438',                           '34600','31145','39147','20767','16219',                           '29889','67200','26421','16354','76440',                           '18029','30925','79693','43158','36716',                           '72388','87556','82525','68778','32342',                           '25115','19399','65118','28307','26188',                           '48616','84234','31608','19678','31806',                           '86186','37243','36126','78450','57951',                           '52076','43931','63084','12012','57571',                           '64324','51024','30829','13100','26220',                           '76467','13543','93149','53664','87184',                           '38868','39789','32198','14464','67363',                           '47310','85812','85101','14161','27639',                           '50163','50055','86119','59980','17165',                           '31020','13492','87638','85656','47165',                           '15448','31348','69895','48255','19976',                           '83661','11909','79681','63380')      intersect       select ca_zip       from (SELECT substr(ca_zip,1,5) ca_zip,count(*) cnt             FROM customer_address, customer             WHERE ca_address_sk = c_current_addr_sk and                   c_preferred_cust_flag='Y'             group by ca_zip             having count(*) > 10)A1)A2) V1  where ss_store_sk = s_store_sk   and ss_sold_date_sk = d_date_sk   and d_qoy = 1 and d_year = 1999   and (substr(s_zip,1,2) = substr(V1.ca_zip,1,2))  group by s_store_name  order by s_store_name  limit 100;  "], ["select case when (select count(*)                    from store_sales                    where ss_quantity between 1 and 20) > 313918             then (select avg(ss_ext_list_price)                    from store_sales                    where ss_quantity between 1 and 20)              else (select avg(ss_net_paid_inc_tax)                   from store_sales                   where ss_quantity between 1 and 20) end bucket1 ,        case when (select count(*)                   from store_sales                   where ss_quantity between 21 and 40) > 366449             then (select avg(ss_ext_list_price)                   from store_sales                   where ss_quantity between 21 and 40)              else (select avg(ss_net_paid_inc_tax)                   from store_sales                   where ss_quantity between 21 and 40) end bucket2,        case when (select count(*)                   from store_sales                   where ss_quantity between 41 and 60) > 2069             then (select avg(ss_ext_list_price)                   from store_sales                   where ss_quantity between 41 and 60)             else (select avg(ss_net_paid_inc_tax)                   from store_sales                   where ss_quantity between 41 and 60) end bucket3,        case when (select count(*)                   from store_sales                   where ss_quantity between 61 and 80) > 147810             then (select avg(ss_ext_list_price)                   from store_sales                   where ss_quantity between 61 and 80)             else (select avg(ss_net_paid_inc_tax)                   from store_sales                   where ss_quantity between 61 and 80) end bucket4,        case when (select count(*)                   from store_sales                   where ss_quantity between 81 and 100) > 364248             then (select avg(ss_ext_list_price)                   from store_sales                   where ss_quantity between 81 and 100)             else (select avg(ss_net_paid_inc_tax)                   from store_sales                   where ss_quantity between 81 and 100) end bucket5 from reason where r_reason_sk = 1 ;  "], ["select     cd_gender,   cd_marital_status,   cd_education_status,   count(*) cnt1,   cd_purchase_estimate,   count(*) cnt2,   cd_credit_rating,   count(*) cnt3,   cd_dep_count,   count(*) cnt4,   cd_dep_employed_count,   count(*) cnt5,   cd_dep_college_count,   count(*) cnt6  from   customer c,customer_address ca,customer_demographics  where   c.c_current_addr_sk = ca.ca_address_sk and   ca_county in ('Coosa County','Summit County','Blaine County','Dakota County','Overton County') and   cd_demo_sk = c.c_current_cdemo_sk and    exists (select *           from store_sales,date_dim           where c.c_customer_sk = ss_customer_sk and                 ss_sold_date_sk = d_date_sk and                 d_year = 2001 and                 d_moy between 4 and 4+3) and    (exists (select *             from web_sales,date_dim             where c.c_customer_sk = ws_bill_customer_sk and                   ws_sold_date_sk = d_date_sk and                   d_year = 2001 and                   d_moy between 4 ANd 4+3) or      exists (select *              from catalog_sales,date_dim             where c.c_customer_sk = cs_ship_customer_sk and                   cs_sold_date_sk = d_date_sk and                   d_year = 2001 and                   d_moy between 4 and 4+3))  group by cd_gender,           cd_marital_status,           cd_education_status,           cd_purchase_estimate,           cd_credit_rating,           cd_dep_count,           cd_dep_employed_count,           cd_dep_college_count  order by cd_gender,           cd_marital_status,           cd_education_status,           cd_purchase_estimate,           cd_credit_rating,           cd_dep_count,           cd_dep_employed_count,           cd_dep_college_count limit 100;  "], ["with year_total as (  select c_customer_id customer_id        ,c_first_name customer_first_name        ,c_last_name customer_last_name        ,c_preferred_cust_flag customer_preferred_cust_flag        ,c_birth_country customer_birth_country        ,c_login customer_login        ,c_email_address customer_email_address        ,d_year dyear        ,sum(ss_ext_list_price-ss_ext_discount_amt) year_total        ,'s' sale_type  from customer      ,store_sales      ,date_dim  where c_customer_sk = ss_customer_sk    and ss_sold_date_sk = d_date_sk  group by c_customer_id          ,c_first_name          ,c_last_name          ,c_preferred_cust_flag           ,c_birth_country          ,c_login          ,c_email_address          ,d_year   union all  select c_customer_id customer_id        ,c_first_name customer_first_name        ,c_last_name customer_last_name        ,c_preferred_cust_flag customer_preferred_cust_flag        ,c_birth_country customer_birth_country        ,c_login customer_login        ,c_email_address customer_email_address        ,d_year dyear        ,sum(ws_ext_list_price-ws_ext_discount_amt) year_total        ,'w' sale_type  from customer      ,web_sales      ,date_dim  where c_customer_sk = ws_bill_customer_sk    and ws_sold_date_sk = d_date_sk  group by c_customer_id          ,c_first_name          ,c_last_name          ,c_preferred_cust_flag           ,c_birth_country          ,c_login          ,c_email_address          ,d_year          )   select                     t_s_secyear.customer_id                  ,t_s_secyear.customer_first_name                  ,t_s_secyear.customer_last_name                  ,t_s_secyear.customer_email_address  from year_total t_s_firstyear      ,year_total t_s_secyear      ,year_total t_w_firstyear      ,year_total t_w_secyear  where t_s_secyear.customer_id = t_s_firstyear.customer_id          and t_s_firstyear.customer_id = t_w_secyear.customer_id          and t_s_firstyear.customer_id = t_w_firstyear.customer_id          and t_s_firstyear.sale_type = 's'          and t_w_firstyear.sale_type = 'w'          and t_s_secyear.sale_type = 's'          and t_w_secyear.sale_type = 'w'          and t_s_firstyear.dyear = 1999          and t_s_secyear.dyear = 1999+1          and t_w_firstyear.dyear = 1999          and t_w_secyear.dyear = 1999+1          and t_s_firstyear.year_total > 0          and t_w_firstyear.year_total > 0          and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else 0.0 end              > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else 0.0 end  order by t_s_secyear.customer_id          ,t_s_secyear.customer_first_name          ,t_s_secyear.customer_last_name          ,t_s_secyear.customer_email_address limit 100;  "], ["select  i_item_id       ,i_item_desc        ,i_category        ,i_class        ,i_current_price       ,sum(ws_ext_sales_price) as itemrevenue        ,sum(ws_ext_sales_price)*100/sum(sum(ws_ext_sales_price)) over           (partition by i_class) as revenueratio from     web_sales       ,item       ,date_dim where     ws_item_sk = i_item_sk      and i_category in ('Electronics', 'Sports', 'Books')    and ws_sold_date_sk = d_date_sk     and d_date between cast('2001-04-19' as date)               and (cast('2001-04-19' as date) + interval '30 days') group by      i_item_id         ,i_item_desc          ,i_category         ,i_class         ,i_current_price order by      i_category         ,i_class         ,i_item_id         ,i_item_desc         ,revenueratio limit 100;  "], ["select avg(ss_quantity)        ,avg(ss_ext_sales_price)        ,avg(ss_ext_wholesale_cost)        ,sum(ss_ext_wholesale_cost)  from store_sales      ,store      ,customer_demographics      ,household_demographics      ,customer_address      ,date_dim  where s_store_sk = ss_store_sk  and  ss_sold_date_sk = d_date_sk and d_year = 2001  and((ss_hdemo_sk=hd_demo_sk   and cd_demo_sk = ss_cdemo_sk   and cd_marital_status = 'U'   and cd_education_status = 'College'   and ss_sales_price between 100.00 and 150.00   and hd_dep_count = 3         )or      (ss_hdemo_sk=hd_demo_sk   and cd_demo_sk = ss_cdemo_sk   and cd_marital_status = 'D'   and cd_education_status = 'Unknown'   and ss_sales_price between 50.00 and 100.00      and hd_dep_count = 1      ) or       (ss_hdemo_sk=hd_demo_sk   and cd_demo_sk = ss_cdemo_sk   and cd_marital_status = 'W'   and cd_education_status = '2 yr Degree'   and ss_sales_price between 150.00 and 200.00    and hd_dep_count = 1        ))  and((ss_addr_sk = ca_address_sk   and ca_country = 'United States'   and ca_state in ('KY', 'KS', 'IL')   and ss_net_profit between 100 and 200        ) or      (ss_addr_sk = ca_address_sk   and ca_country = 'United States'   and ca_state in ('IA', 'GA', 'MI')   and ss_net_profit between 150 and 300        ) or      (ss_addr_sk = ca_address_sk   and ca_country = 'United States'   and ca_state in ('AL', 'TN', 'LA')   and ss_net_profit between 50 and 250        )) ;  "], ["with  cross_items as  (select i_item_sk ss_item_sk  from item,  (select iss.i_brand_id brand_id      ,iss.i_class_id class_id      ,iss.i_category_id category_id  from store_sales      ,item iss      ,date_dim d1  where ss_item_sk = iss.i_item_sk    and ss_sold_date_sk = d1.d_date_sk    and d1.d_year between 1998 AND 1998 + 2  intersect   select ics.i_brand_id      ,ics.i_class_id      ,ics.i_category_id  from catalog_sales      ,item ics      ,date_dim d2  where cs_item_sk = ics.i_item_sk    and cs_sold_date_sk = d2.d_date_sk    and d2.d_year between 1998 AND 1998 + 2  intersect  select iws.i_brand_id      ,iws.i_class_id      ,iws.i_category_id  from web_sales      ,item iws      ,date_dim d3  where ws_item_sk = iws.i_item_sk    and ws_sold_date_sk = d3.d_date_sk    and d3.d_year between 1998 AND 1998 + 2) as alias123   where i_brand_id = brand_id       and i_class_id = class_id       and i_category_id = category_id ),  avg_sales as  (select avg(quantity*list_price) average_sales   from (select ss_quantity quantity              ,ss_list_price list_price        from store_sales            ,date_dim        where ss_sold_date_sk = d_date_sk          and d_year between 1998 and 1998 + 2        union all         select cs_quantity quantity               ,cs_list_price list_price        from catalog_sales            ,date_dim        where cs_sold_date_sk = d_date_sk          and d_year between 1998 and 1998 + 2         union all        select ws_quantity quantity              ,ws_list_price list_price        from web_sales            ,date_dim        where ws_sold_date_sk = d_date_sk          and d_year between 1998 and 1998 + 2) x)   select  channel, i_brand_id,i_class_id,i_category_id,sum(sales), sum(number_sales)  from(        select 'store' channel, i_brand_id,i_class_id              ,i_category_id,sum(ss_quantity*ss_list_price) sales              , count(*) number_sales        from store_sales            ,item            ,date_dim        where ss_item_sk in (select ss_item_sk from cross_items)          and ss_item_sk = i_item_sk          and ss_sold_date_sk = d_date_sk          and d_year = 1998+2           and d_moy = 11        group by i_brand_id,i_class_id,i_category_id        having sum(ss_quantity*ss_list_price) > (select average_sales from avg_sales)        union all        select 'catalog' channel, i_brand_id,i_class_id,i_category_id, sum(cs_quantity*cs_list_price) sales, count(*) number_sales        from catalog_sales            ,item            ,date_dim        where cs_item_sk in (select ss_item_sk from cross_items)          and cs_item_sk = i_item_sk          and cs_sold_date_sk = d_date_sk          and d_year = 1998+2           and d_moy = 11        group by i_brand_id,i_class_id,i_category_id        having sum(cs_quantity*cs_list_price) > (select average_sales from avg_sales)        union all        select 'web' channel, i_brand_id,i_class_id,i_category_id, sum(ws_quantity*ws_list_price) sales , count(*) number_sales        from web_sales            ,item            ,date_dim        where ws_item_sk in (select ss_item_sk from cross_items)          and ws_item_sk = i_item_sk          and ws_sold_date_sk = d_date_sk          and d_year = 1998+2          and d_moy = 11        group by i_brand_id,i_class_id,i_category_id        having sum(ws_quantity*ws_list_price) > (select average_sales from avg_sales)  ) y  group by rollup (channel, i_brand_id,i_class_id,i_category_id)  order by channel,i_brand_id,i_class_id,i_category_id  limit 100;  "], ["select  ca_zip        ,sum(cs_sales_price)  from catalog_sales      ,customer      ,customer_address      ,date_dim  where cs_bill_customer_sk = c_customer_sk      and c_current_addr_sk = ca_address_sk       and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475',                                    '85392', '85460', '80348', '81792')         or ca_state in ('CA','WA','GA')         or cs_sales_price > 500)      and cs_sold_date_sk = d_date_sk     and d_qoy = 1 and d_year = 1998  group by ca_zip  order by ca_zip  limit 100;  "], ["select      count(distinct cs_order_number) as \"order count\"   ,sum(cs_ext_ship_cost) as \"total shipping cost\"   ,sum(cs_net_profit) as \"total net profit\" from    catalog_sales cs1   ,date_dim   ,customer_address   ,call_center where     d_date between '2000-2-01' and             (cast('2000-2-01' as date) + interval '60 days') and cs1.cs_ship_date_sk = d_date_sk and cs1.cs_ship_addr_sk = ca_address_sk and ca_state = 'UT' and cs1.cs_call_center_sk = cc_call_center_sk and cc_county in ('Williamson County','Walker County','Ziebach County','Ziebach County',                   'Ziebach County' ) and exists (select *             from catalog_sales cs2             where cs1.cs_order_number = cs2.cs_order_number               and cs1.cs_warehouse_sk <> cs2.cs_warehouse_sk) and not exists(select *                from catalog_returns cr1                where cs1.cs_order_number = cr1.cr_order_number) order by count(distinct cs_order_number) limit 100;  "], ["select  i_item_id        ,i_item_desc        ,s_state        ,count(ss_quantity) as store_sales_quantitycount        ,avg(ss_quantity) as store_sales_quantityave        ,stddev_samp(ss_quantity) as store_sales_quantitystdev        ,stddev_samp(ss_quantity)/avg(ss_quantity) as store_sales_quantitycov        ,count(sr_return_quantity) as store_returns_quantitycount        ,avg(sr_return_quantity) as store_returns_quantityave        ,stddev_samp(sr_return_quantity) as store_returns_quantitystdev        ,stddev_samp(sr_return_quantity)/avg(sr_return_quantity) as store_returns_quantitycov        ,count(cs_quantity) as catalog_sales_quantitycount ,avg(cs_quantity) as catalog_sales_quantityave        ,stddev_samp(cs_quantity) as catalog_sales_quantitystdev        ,stddev_samp(cs_quantity)/avg(cs_quantity) as catalog_sales_quantitycov  from store_sales      ,store_returns      ,catalog_sales      ,date_dim d1      ,date_dim d2      ,date_dim d3      ,store      ,item  where d1.d_quarter_name = '2002Q1'    and d1.d_date_sk = ss_sold_date_sk    and i_item_sk = ss_item_sk    and s_store_sk = ss_store_sk    and ss_customer_sk = sr_customer_sk    and ss_item_sk = sr_item_sk    and ss_ticket_number = sr_ticket_number    and sr_returned_date_sk = d2.d_date_sk    and d2.d_quarter_name in ('2002Q1','2002Q2','2002Q3')    and sr_customer_sk = cs_bill_customer_sk    and sr_item_sk = cs_item_sk    and cs_sold_date_sk = d3.d_date_sk    and d3.d_quarter_name in ('2002Q1','2002Q2','2002Q3')  group by i_item_id          ,i_item_desc          ,s_state  order by i_item_id          ,i_item_desc          ,s_state limit 100;  "], ["select  i_item_id,         ca_country,         ca_state,          ca_county,         avg( cast(cs_quantity as decimal(12,2))) agg1,         avg( cast(cs_list_price as decimal(12,2))) agg2,         avg( cast(cs_coupon_amt as decimal(12,2))) agg3,         avg( cast(cs_sales_price as decimal(12,2))) agg4,         avg( cast(cs_net_profit as decimal(12,2))) agg5,         avg( cast(c_birth_year as decimal(12,2))) agg6,         avg( cast(cd1.cd_dep_count as decimal(12,2))) agg7  from catalog_sales, customer_demographics cd1,        customer_demographics cd2, customer, customer_address, date_dim, item  where cs_sold_date_sk = d_date_sk and        cs_item_sk = i_item_sk and        cs_bill_cdemo_sk = cd1.cd_demo_sk and        cs_bill_customer_sk = c_customer_sk and        cd1.cd_gender = 'F' and         cd1.cd_education_status = '2 yr Degree' and        c_current_cdemo_sk = cd2.cd_demo_sk and        c_current_addr_sk = ca_address_sk and        c_birth_month in (3,5,7,11,8,6) and        d_year = 2001 and        ca_state in ('MN','UT','OH'                    ,'TN','VA','MS','FL')  group by rollup (i_item_id, ca_country, ca_state, ca_county)  order by ca_country,         ca_state,          ca_county,  i_item_id  limit 100;  "], ["select  i_brand_id brand_id, i_brand brand, i_manufact_id, i_manufact,     sum(ss_ext_sales_price) ext_price  from date_dim, store_sales, item,customer,customer_address,store  where d_date_sk = ss_sold_date_sk    and ss_item_sk = i_item_sk    and i_manager_id=33    and d_moy=12    and d_year=2001    and ss_customer_sk = c_customer_sk     and c_current_addr_sk = ca_address_sk    and substr(ca_zip,1,5) <> substr(s_zip,1,5)     and ss_store_sk = s_store_sk   group by i_brand       ,i_brand_id       ,i_manufact_id       ,i_manufact  order by ext_price desc          ,i_brand          ,i_brand_id          ,i_manufact_id          ,i_manufact limit 100 ;  "], ["select  i_item_id        ,i_item_desc         ,i_category         ,i_class         ,i_current_price        ,sum(cs_ext_sales_price) as itemrevenue         ,sum(cs_ext_sales_price)*100/sum(sum(cs_ext_sales_price)) over            (partition by i_class) as revenueratio  from    catalog_sales      ,item       ,date_dim  where cs_item_sk = i_item_sk     and i_category in ('Home', 'Sports', 'Men')    and cs_sold_date_sk = d_date_sk  and d_date between cast('2001-04-19' as date)                and (cast('2001-04-19' as date) + interval '30 days')  group by i_item_id          ,i_item_desc           ,i_category          ,i_class          ,i_current_price  order by i_category          ,i_class          ,i_item_id          ,i_item_desc          ,revenueratio limit 100;  "], ["select  *  from(select w_warehouse_name             ,i_item_id             ,sum(case when (cast(d_date as date) < cast ('2001-04-28' as date))                  then inv_quantity_on_hand                        else 0 end) as inv_before             ,sum(case when (cast(d_date as date) >= cast ('2001-04-28' as date))                       then inv_quantity_on_hand                        else 0 end) as inv_after    from inventory        ,warehouse        ,item        ,date_dim    where i_current_price between 0.99 and 1.49      and i_item_sk          = inv_item_sk      and inv_warehouse_sk   = w_warehouse_sk      and inv_date_sk    = d_date_sk      and d_date between (cast ('2001-04-28' as date) - interval '30 days')                     and (cast ('2001-04-28' as date) + interval '30 days')    group by w_warehouse_name, i_item_id) x  where (case when inv_before > 0               then inv_after / inv_before               else null              end) between 2.0/3.0 and 3.0/2.0  order by w_warehouse_name          ,i_item_id  limit 100;  "], ["select  i_product_name              ,i_brand              ,i_class              ,i_category              ,avg(inv_quantity_on_hand) qoh        from inventory            ,date_dim            ,item        where inv_date_sk=d_date_sk               and inv_item_sk=i_item_sk               and d_month_seq between 1203 and 1203 + 11        group by rollup(i_product_name                        ,i_brand                        ,i_class                        ,i_category) order by qoh, i_product_name, i_brand, i_class, i_category limit 100;  "], ["with frequent_ss_items as   (select substr(i_item_desc,1,30) itemdesc,i_item_sk item_sk,d_date solddate,count(*) cnt   from store_sales       ,date_dim        ,item   where ss_sold_date_sk = d_date_sk     and ss_item_sk = i_item_sk      and d_year in (2000,2000+1,2000+2,2000+3)   group by substr(i_item_desc,1,30),i_item_sk,d_date   having count(*) >4),  max_store_sales as  (select max(csales) tpcds_cmax    from (select c_customer_sk,sum(ss_quantity*ss_sales_price) csales         from store_sales             ,customer             ,date_dim          where ss_customer_sk = c_customer_sk          and ss_sold_date_sk = d_date_sk          and d_year in (2000,2000+1,2000+2,2000+3)          group by c_customer_sk) as alias123 ),  best_ss_customer as  (select c_customer_sk,sum(ss_quantity*ss_sales_price) ssales   from store_sales       ,customer   where ss_customer_sk = c_customer_sk   group by c_customer_sk   having sum(ss_quantity*ss_sales_price) > (95/100.0) * (select   * from  max_store_sales))   select  sum(sales)  from (select cs_quantity*cs_list_price sales        from catalog_sales            ,date_dim         where d_year = 2000           and d_moy = 6           and cs_sold_date_sk = d_date_sk           and cs_item_sk in (select item_sk from frequent_ss_items)          and cs_bill_customer_sk in (select c_customer_sk from best_ss_customer)       union all       select ws_quantity*ws_list_price sales        from web_sales             ,date_dim         where d_year = 2000           and d_moy = 6           and ws_sold_date_sk = d_date_sk           and ws_item_sk in (select item_sk from frequent_ss_items)          and ws_bill_customer_sk in (select c_customer_sk from best_ss_customer)) as alias123    limit 100;  "], ["with ssales as (select c_last_name       ,c_first_name       ,s_store_name       ,ca_state       ,s_state       ,i_color       ,i_current_price       ,i_manager_id       ,i_units       ,i_size       ,sum(ss_net_paid) netpaid from store_sales     ,store_returns     ,store     ,item     ,customer     ,customer_address where ss_ticket_number = sr_ticket_number   and ss_item_sk = sr_item_sk   and ss_customer_sk = c_customer_sk   and ss_item_sk = i_item_sk   and ss_store_sk = s_store_sk   and c_current_addr_sk = ca_address_sk   and c_birth_country <> upper(ca_country)   and s_zip = ca_zip and s_market_id=9 group by c_last_name         ,c_first_name         ,s_store_name         ,ca_state         ,s_state         ,i_color         ,i_current_price         ,i_manager_id         ,i_units         ,i_size) select c_last_name       ,c_first_name       ,s_store_name       ,sum(netpaid) paid from ssales where i_color = 'magenta' group by c_last_name         ,c_first_name         ,s_store_name having sum(netpaid) > (select 0.05*avg(netpaid)                                  from ssales) order by c_last_name         ,c_first_name         ,s_store_name ;  "], ["select    i_item_id  ,i_item_desc  ,s_store_id  ,s_store_name  ,min(ss_net_profit) as store_sales_profit  ,min(sr_net_loss) as store_returns_loss  ,min(cs_net_profit) as catalog_sales_profit  from  store_sales  ,store_returns  ,catalog_sales  ,date_dim d1  ,date_dim d2  ,date_dim d3  ,store  ,item  where  d1.d_moy = 4  and d1.d_year = 2000  and d1.d_date_sk = ss_sold_date_sk  and i_item_sk = ss_item_sk  and s_store_sk = ss_store_sk  and ss_customer_sk = sr_customer_sk  and ss_item_sk = sr_item_sk  and ss_ticket_number = sr_ticket_number  and sr_returned_date_sk = d2.d_date_sk  and d2.d_moy               between 4 and  10  and d2.d_year              = 2000  and sr_customer_sk = cs_bill_customer_sk  and sr_item_sk = cs_item_sk  and cs_sold_date_sk = d3.d_date_sk  and d3.d_moy               between 4 and  10   and d3.d_year              = 2000  group by  i_item_id  ,i_item_desc  ,s_store_id  ,s_store_name  order by  i_item_id  ,i_item_desc  ,s_store_id  ,s_store_name  limit 100;  "], ["select  i_item_id,          avg(cs_quantity) agg1,         avg(cs_list_price) agg2,         avg(cs_coupon_amt) agg3,         avg(cs_sales_price) agg4   from catalog_sales, customer_demographics, date_dim, item, promotion  where cs_sold_date_sk = d_date_sk and        cs_item_sk = i_item_sk and        cs_bill_cdemo_sk = cd_demo_sk and        cs_promo_sk = p_promo_sk and        cd_gender = 'F' and         cd_marital_status = 'M' and        cd_education_status = 'Secondary' and        (p_channel_email = 'N' or p_channel_event = 'N') and        d_year = 1998   group by i_item_id  order by i_item_id  limit 100;  "], ["select  i_item_id,         s_state, grouping(s_state) g_state,         avg(ss_quantity) agg1,         avg(ss_list_price) agg2,         avg(ss_coupon_amt) agg3,         avg(ss_sales_price) agg4  from store_sales, customer_demographics, date_dim, store, item  where ss_sold_date_sk = d_date_sk and        ss_item_sk = i_item_sk and        ss_store_sk = s_store_sk and        ss_cdemo_sk = cd_demo_sk and        cd_gender = 'F' and        cd_marital_status = 'W' and        cd_education_status = 'Advanced Degree' and        d_year = 2001 and        s_state in ('AL','SD', 'TN', 'TN', 'SD', 'SD')  group by rollup (i_item_id, s_state)  order by i_item_id          ,s_state  limit 100;  "], ["select  * from (select avg(ss_list_price) B1_LP             ,count(ss_list_price) B1_CNT             ,count(distinct ss_list_price) B1_CNTD       from store_sales       where ss_quantity between 0 and 5         and (ss_list_price between 184 and 184+10               or ss_coupon_amt between 12774 and 12774+1000              or ss_wholesale_cost between 44 and 44+20)) B1,      (select avg(ss_list_price) B2_LP             ,count(ss_list_price) B2_CNT             ,count(distinct ss_list_price) B2_CNTD       from store_sales       where ss_quantity between 6 and 10         and (ss_list_price between 124 and 124+10           or ss_coupon_amt between 14542 and 14542+1000           or ss_wholesale_cost between 26 and 26+20)) B2,      (select avg(ss_list_price) B3_LP             ,count(ss_list_price) B3_CNT             ,count(distinct ss_list_price) B3_CNTD       from store_sales       where ss_quantity between 11 and 15         and (ss_list_price between 11 and 11+10           or ss_coupon_amt between 542 and 542+1000           or ss_wholesale_cost between 4 and 4+20)) B3,      (select avg(ss_list_price) B4_LP             ,count(ss_list_price) B4_CNT             ,count(distinct ss_list_price) B4_CNTD       from store_sales       where ss_quantity between 16 and 20         and (ss_list_price between 163 and 163+10           or ss_coupon_amt between 6039 and 6039+1000           or ss_wholesale_cost between 17 and 17+20)) B4,      (select avg(ss_list_price) B5_LP             ,count(ss_list_price) B5_CNT             ,count(distinct ss_list_price) B5_CNTD       from store_sales       where ss_quantity between 21 and 25         and (ss_list_price between 188 and 188+10           or ss_coupon_amt between 8433 and 8433+1000           or ss_wholesale_cost between 43 and 43+20)) B5,      (select avg(ss_list_price) B6_LP             ,count(ss_list_price) B6_CNT             ,count(distinct ss_list_price) B6_CNTD       from store_sales       where ss_quantity between 26 and 30         and (ss_list_price between 121 and 121+10           or ss_coupon_amt between 11128 and 11128+1000           or ss_wholesale_cost between 24 and 24+20)) B6 limit 100;  "], ["select         i_item_id     ,i_item_desc     ,s_store_id     ,s_store_name     ,sum(ss_quantity)        as store_sales_quantity     ,sum(sr_return_quantity) as store_returns_quantity     ,sum(cs_quantity)        as catalog_sales_quantity  from     store_sales    ,store_returns    ,catalog_sales    ,date_dim             d1    ,date_dim             d2    ,date_dim             d3    ,store    ,item  where      d1.d_moy               = 4   and d1.d_year              = 2000  and d1.d_date_sk           = ss_sold_date_sk  and i_item_sk              = ss_item_sk  and s_store_sk             = ss_store_sk  and ss_customer_sk         = sr_customer_sk  and ss_item_sk             = sr_item_sk  and ss_ticket_number       = sr_ticket_number  and sr_returned_date_sk    = d2.d_date_sk  and d2.d_moy               between 4 and  4 + 3   and d2.d_year              = 2000  and sr_customer_sk         = cs_bill_customer_sk  and sr_item_sk             = cs_item_sk  and cs_sold_date_sk        = d3.d_date_sk       and d3.d_year              in (2000,2000+1,2000+2)  group by     i_item_id    ,i_item_desc    ,s_store_id    ,s_store_name  order by     i_item_id     ,i_item_desc    ,s_store_id    ,s_store_name  limit 100;  "], ["with customer_total_return as  (select wr_returning_customer_sk as ctr_customer_sk         ,ca_state as ctr_state,     sum(wr_return_amt) as ctr_total_return  from web_returns      ,date_dim      ,customer_address  where wr_returned_date_sk = d_date_sk     and d_year =1999    and wr_returning_addr_sk = ca_address_sk   group by wr_returning_customer_sk          ,ca_state)   select  c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag        ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address        ,c_last_review_date_sk,ctr_total_return  from customer_total_return ctr1      ,customer_address      ,customer  where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2              from customer_total_return ctr2                         where ctr1.ctr_state = ctr2.ctr_state)        and ca_address_sk = c_current_addr_sk        and ca_state = 'GA'        and ctr1.ctr_customer_sk = c_customer_sk  order by c_customer_id,c_salutation,c_first_name,c_last_name,c_preferred_cust_flag                   ,c_birth_day,c_birth_month,c_birth_year,c_birth_country,c_login,c_email_address                   ,c_last_review_date_sk,ctr_total_return limit 100;  "], ["with ss as  (select ca_county,d_qoy, d_year,sum(ss_ext_sales_price) as store_sales  from store_sales,date_dim,customer_address  where ss_sold_date_sk = d_date_sk   and ss_addr_sk=ca_address_sk  group by ca_county,d_qoy, d_year),  ws as  (select ca_county,d_qoy, d_year,sum(ws_ext_sales_price) as web_sales  from web_sales,date_dim,customer_address  where ws_sold_date_sk = d_date_sk   and ws_bill_addr_sk=ca_address_sk  group by ca_county,d_qoy, d_year)  select          ss1.ca_county        ,ss1.d_year        ,ws2.web_sales/ws1.web_sales web_q1_q2_increase        ,ss2.store_sales/ss1.store_sales store_q1_q2_increase        ,ws3.web_sales/ws2.web_sales web_q2_q3_increase        ,ss3.store_sales/ss2.store_sales store_q2_q3_increase  from         ss ss1        ,ss ss2        ,ss ss3        ,ws ws1        ,ws ws2        ,ws ws3  where     ss1.d_qoy = 1     and ss1.d_year = 2000     and ss1.ca_county = ss2.ca_county     and ss2.d_qoy = 2     and ss2.d_year = 2000  and ss2.ca_county = ss3.ca_county     and ss3.d_qoy = 3     and ss3.d_year = 2000     and ss1.ca_county = ws1.ca_county     and ws1.d_qoy = 1     and ws1.d_year = 2000     and ws1.ca_county = ws2.ca_county     and ws2.d_qoy = 2     and ws2.d_year = 2000     and ws1.ca_county = ws3.ca_county     and ws3.d_qoy = 3     and ws3.d_year =2000     and case when ws1.web_sales > 0 then ws2.web_sales/ws1.web_sales else null end         > case when ss1.store_sales > 0 then ss2.store_sales/ss1.store_sales else null end     and case when ws2.web_sales > 0 then ws3.web_sales/ws2.web_sales else null end        > case when ss2.store_sales > 0 then ss3.store_sales/ss2.store_sales else null end  order by web_q2_q3_increase;  "], ["select  sum(cs_ext_discount_amt)  as \"excess discount amount\"  from     catalog_sales     ,item     ,date_dim where i_manufact_id = 913 and i_item_sk = cs_item_sk  and d_date between '1999-01-18' and          (cast('1999-01-18' as date) + interval '90 days') and d_date_sk = cs_sold_date_sk  and cs_ext_discount_amt        > (           select              1.3 * avg(cs_ext_discount_amt)           from              catalog_sales             ,date_dim          where                cs_item_sk = i_item_sk            and d_date between '1999-01-18' and                              (cast('1999-01-18' as date) + interval '90 days')           and d_date_sk = cs_sold_date_sk        )  limit 100;  "], ["with ss as (  select           i_manufact_id,sum(ss_ext_sales_price) total_sales  from   store_sales,    date_dim,          customer_address,          item  where          i_manufact_id in (select   i_manufact_id from  item where i_category in ('Books'))  and     ss_item_sk              = i_item_sk  and     ss_sold_date_sk         = d_date_sk  and     d_year                  = 1999  and     d_moy                   = 3  and     ss_addr_sk              = ca_address_sk  and     ca_gmt_offset           = -5   group by i_manufact_id),  cs as (  select           i_manufact_id,sum(cs_ext_sales_price) total_sales  from   catalog_sales,      date_dim,          customer_address,          item  where          i_manufact_id               in (select   i_manufact_id from  item where i_category in ('Books'))  and     cs_item_sk              = i_item_sk  and     cs_sold_date_sk         = d_date_sk  and     d_year                  = 1999  and     d_moy                   = 3  and     cs_bill_addr_sk         = ca_address_sk  and     ca_gmt_offset           = -5   group by i_manufact_id),  ws as (  select           i_manufact_id,sum(ws_ext_sales_price) total_sales  from     web_sales,      date_dim,          customer_address,          item  where          i_manufact_id               in (select   i_manufact_id from  item where i_category in ('Books'))  and     ws_item_sk              = i_item_sk  and     ws_sold_date_sk         = d_date_sk  and     d_year                  = 1999  and     d_moy                   = 3  and     ws_bill_addr_sk         = ca_address_sk  and     ca_gmt_offset           = -5  group by i_manufact_id)   select  i_manufact_id ,sum(total_sales) total_sales  from  (select * from ss          union all         select * from cs          union all         select * from ws) tmp1  group by i_manufact_id  order by total_sales limit 100;  "], ["select c_last_name        ,c_first_name        ,c_salutation        ,c_preferred_cust_flag        ,ss_ticket_number        ,cnt from    (select ss_ticket_number           ,ss_customer_sk           ,count(*) cnt     from store_sales,date_dim,store,household_demographics     where store_sales.ss_sold_date_sk = date_dim.d_date_sk     and store_sales.ss_store_sk = store.s_store_sk       and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk     and (date_dim.d_dom between 1 and 3 or date_dim.d_dom between 25 and 28)     and (household_demographics.hd_buy_potential = '>10000' or          household_demographics.hd_buy_potential = '0-500')     and household_demographics.hd_vehicle_count > 0     and (case when household_demographics.hd_vehicle_count > 0    then household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count   else null   end)  > 1.2     and date_dim.d_year in (2000,2000+1,2000+2)     and store.s_county in ('Ziebach County','Walker County','Williamson County','Williamson County',                            'Ziebach County','Ziebach County','Ziebach County','Ziebach County')     group by ss_ticket_number,ss_customer_sk) dn,customer     where ss_customer_sk = c_customer_sk       and cnt between 15 and 20     order by c_last_name,c_first_name,c_salutation,c_preferred_cust_flag desc, ss_ticket_number;  "], ["select      ca_state,   cd_gender,   cd_marital_status,   cd_dep_count,   count(*) cnt1,   sum(cd_dep_count),   avg(cd_dep_count),   max(cd_dep_count),   cd_dep_employed_count,   count(*) cnt2,   sum(cd_dep_employed_count),   avg(cd_dep_employed_count),   max(cd_dep_employed_count),   cd_dep_college_count,   count(*) cnt3,   sum(cd_dep_college_count),   avg(cd_dep_college_count),   max(cd_dep_college_count)  from   customer c,customer_address ca,customer_demographics  where   c.c_current_addr_sk = ca.ca_address_sk and   cd_demo_sk = c.c_current_cdemo_sk and    exists (select *           from store_sales,date_dim           where c.c_customer_sk = ss_customer_sk and                 ss_sold_date_sk = d_date_sk and                 d_year = 1999 and                 d_qoy < 4) and    (exists (select *             from web_sales,date_dim             where c.c_customer_sk = ws_bill_customer_sk and                   ws_sold_date_sk = d_date_sk and                   d_year = 1999 and                   d_qoy < 4) or      exists (select *              from catalog_sales,date_dim             where c.c_customer_sk = cs_ship_customer_sk and                   cs_sold_date_sk = d_date_sk and                   d_year = 1999 and                   d_qoy < 4))  group by ca_state,           cd_gender,           cd_marital_status,           cd_dep_count,           cd_dep_employed_count,           cd_dep_college_count  order by ca_state,           cd_gender,           cd_marital_status,           cd_dep_count,           cd_dep_employed_count,           cd_dep_college_count  limit 100;  "], ["select       sum(ss_net_profit)/sum(ss_ext_sales_price) as gross_margin    ,i_category    ,i_class    ,grouping(i_category)+grouping(i_class) as lochierarchy    ,rank() over (      partition by grouping(i_category)+grouping(i_class),    case when grouping(i_class) = 0 then i_category end     order by sum(ss_net_profit)/sum(ss_ext_sales_price) asc) as rank_within_parent  from     store_sales    ,date_dim       d1    ,item    ,store  where     d1.d_year = 2001   and d1.d_date_sk = ss_sold_date_sk  and i_item_sk  = ss_item_sk   and s_store_sk  = ss_store_sk  and s_state in ('SD','AL','TN','TN',                  'SD','SD','SD','SD')  group by rollup(i_category,i_class)  order by    lochierarchy desc   ,case when grouping(i_category)+grouping(i_class) = 0 then i_category end   ,rank_within_parent   limit 100;  "], ["select  i_item_id        ,i_item_desc        ,i_current_price  from item, inventory, date_dim, catalog_sales  where i_current_price between 23 and 23 + 30  and inv_item_sk = i_item_sk  and d_date_sk=inv_date_sk  and d_date between cast('1999-01-02' as date) and (cast('1999-01-02' as date) +  interval '60 days')  and i_manufact_id in (923,797,753,818)  and inv_quantity_on_hand between 100 and 500  and cs_item_sk = i_item_sk  group by i_item_id,i_item_desc,i_current_price  order by i_item_id  limit 100;  "], ["select  count(*) from (     select distinct c_last_name, c_first_name, d_date     from store_sales, date_dim, customer           where store_sales.ss_sold_date_sk = date_dim.d_date_sk       and store_sales.ss_customer_sk = customer.c_customer_sk       and d_month_seq between 1188 and 1188 + 11   intersect     select distinct c_last_name, c_first_name, d_date     from catalog_sales, date_dim, customer           where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk       and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk       and d_month_seq between 1188 and 1188 + 11   intersect     select distinct c_last_name, c_first_name, d_date     from web_sales, date_dim, customer           where web_sales.ws_sold_date_sk = date_dim.d_date_sk       and web_sales.ws_bill_customer_sk = customer.c_customer_sk       and d_month_seq between 1188 and 1188 + 11 ) hot_cust limit 100;  "], ["with inv as (select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy        ,stdev,mean, case mean when 0 then null else stdev/mean end cov  from(select w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy             ,stddev_samp(inv_quantity_on_hand) stdev,avg(inv_quantity_on_hand) mean       from inventory           ,item           ,warehouse           ,date_dim       where inv_item_sk = i_item_sk         and inv_warehouse_sk = w_warehouse_sk         and inv_date_sk = d_date_sk         and d_year =1998       group by w_warehouse_name,w_warehouse_sk,i_item_sk,d_moy) foo  where case mean when 0 then 0 else stdev/mean end > 1) select inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean, inv1.cov         ,inv2.w_warehouse_sk,inv2.i_item_sk,inv2.d_moy,inv2.mean, inv2.cov from inv inv1,inv inv2 where inv1.i_item_sk = inv2.i_item_sk   and inv1.w_warehouse_sk =  inv2.w_warehouse_sk   and inv1.d_moy=1   and inv2.d_moy=1+1 order by inv1.w_warehouse_sk,inv1.i_item_sk,inv1.d_moy,inv1.mean,inv1.cov         ,inv2.d_moy,inv2.mean, inv2.cov ;  "], ["select      w_state   ,i_item_id   ,sum(case when (cast(d_date as date) < cast ('2000-05-20' as date))        then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_before   ,sum(case when (cast(d_date as date) >= cast ('2000-05-20' as date))           then cs_sales_price - coalesce(cr_refunded_cash,0) else 0 end) as sales_after  from    catalog_sales left outer join catalog_returns on        (cs_order_number = cr_order_number          and cs_item_sk = cr_item_sk)   ,warehouse    ,item   ,date_dim  where      i_current_price between 0.99 and 1.49  and i_item_sk          = cs_item_sk  and cs_warehouse_sk    = w_warehouse_sk   and cs_sold_date_sk    = d_date_sk  and d_date between (cast ('2000-05-20' as date) - interval '30 days')                 and (cast ('2000-05-20' as date) + interval '30 days')   group by     w_state,i_item_id  order by w_state,i_item_id limit 100;  "], ["select  distinct(i_product_name)  from item i1  where i_manufact_id between 937 and 937+40     and (select count(*) as item_cnt         from item         where (i_manufact = i1.i_manufact and         ((i_category = 'Women' and          (i_color = 'thistle' or i_color = 'cornflower') and          (i_units = 'Dram' or i_units = 'Box') and         (i_size = 'petite' or i_size = 'medium')         ) or         (i_category = 'Women' and         (i_color = 'ghost' or i_color = 'lemon') and         (i_units = 'Pound' or i_units = 'Unknown') and         (i_size = 'extra large' or i_size = 'N/A')         ) or         (i_category = 'Men' and         (i_color = 'hot' or i_color = 'blue') and         (i_units = 'Tsp' or i_units = 'Bunch') and         (i_size = 'large' or i_size = 'small')         ) or         (i_category = 'Men' and         (i_color = 'bisque' or i_color = 'medium') and         (i_units = 'Case' or i_units = 'Each') and         (i_size = 'petite' or i_size = 'medium')         ))) or        (i_manufact = i1.i_manufact and         ((i_category = 'Women' and          (i_color = 'papaya' or i_color = 'powder') and          (i_units = 'Gross' or i_units = 'Lb') and         (i_size = 'petite' or i_size = 'medium')         ) or         (i_category = 'Women' and         (i_color = 'plum' or i_color = 'dim') and         (i_units = 'Tbl' or i_units = 'Gram') and         (i_size = 'extra large' or i_size = 'N/A')         ) or         (i_category = 'Men' and         (i_color = 'almond' or i_color = 'rosy') and         (i_units = 'Ounce' or i_units = 'Pallet') and         (i_size = 'large' or i_size = 'small')         ) or         (i_category = 'Men' and         (i_color = 'lawn' or i_color = 'steel') and         (i_units = 'Carton' or i_units = 'Dozen') and         (i_size = 'petite' or i_size = 'medium')         )))) > 0  order by i_product_name  limit 100;  "], ["select  dt.d_year     ,item.i_category_id     ,item.i_category    ,sum(ss_ext_sales_price)  from  date_dim dt     ,store_sales    ,item  where dt.d_date_sk = store_sales.ss_sold_date_sk     and store_sales.ss_item_sk = item.i_item_sk     and item.i_manager_id = 1       and dt.d_moy=12     and dt.d_year=2000  group by    dt.d_year       ,item.i_category_id         ,item.i_category  order by       sum(ss_ext_sales_price) desc,dt.d_year         ,item.i_category_id         ,item.i_category limit 100 ;  "], ["select  s_store_name, s_store_id,         sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,         sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,         sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,         sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,         sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,         sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,         sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales  from date_dim, store_sales, store  where d_date_sk = ss_sold_date_sk and        s_store_sk = ss_store_sk and        s_gmt_offset = -6 and        d_year = 2001   group by s_store_name, s_store_id  order by s_store_name, s_store_id,sun_sales,mon_sales,tue_sales,wed_sales,thu_sales,fri_sales,sat_sales  limit 100;  "], ["select  asceding.rnk, i1.i_product_name best_performing, i2.i_product_name worst_performing from(select *      from (select item_sk,rank() over (order by rank_col asc) rnk            from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col                   from store_sales ss1                  where ss_store_sk = 25                  group by ss_item_sk                  having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col                                                   from store_sales                                                   where ss_store_sk = 25                                                     and ss_hdemo_sk is null                                                   group by ss_store_sk))V1)V11      where rnk  < 11) asceding,     (select *      from (select item_sk,rank() over (order by rank_col desc) rnk            from (select ss_item_sk item_sk,avg(ss_net_profit) rank_col                  from store_sales ss1                  where ss_store_sk = 25                  group by ss_item_sk                  having avg(ss_net_profit) > 0.9*(select avg(ss_net_profit) rank_col                                                   from store_sales                                                   where ss_store_sk = 25                                                     and ss_hdemo_sk is null                                                   group by ss_store_sk))V2)V21      where rnk  < 11) descending, item i1, item i2 where asceding.rnk = descending.rnk    and i1.i_item_sk=asceding.item_sk   and i2.i_item_sk=descending.item_sk order by asceding.rnk limit 100;  "], ["select  ca_zip, ca_city, sum(ws_sales_price)  from web_sales, customer, customer_address, date_dim, item  where ws_bill_customer_sk = c_customer_sk     and c_current_addr_sk = ca_address_sk       and ws_item_sk = i_item_sk      and ( substr(ca_zip,1,5) in ('85669', '86197','88274','83405','86475', '85392', '85460', '80348', '81792')            or          i_item_id in (select i_item_id                              from item                              where i_item_sk in (2, 3, 5, 7, 11, 13, 17, 19, 23, 29)                              )         )   and ws_sold_date_sk = d_date_sk     and d_qoy = 2 and d_year = 2001  group by ca_zip, ca_city  order by ca_zip, ca_city  limit 100;  "], ["select  c_last_name        ,c_first_name        ,ca_city        ,bought_city        ,ss_ticket_number        ,amt,profit   from    (select ss_ticket_number           ,ss_customer_sk           ,ca_city bought_city           ,sum(ss_coupon_amt) amt           ,sum(ss_net_profit) profit     from store_sales,date_dim,store,household_demographics,customer_address      where store_sales.ss_sold_date_sk = date_dim.d_date_sk     and store_sales.ss_store_sk = store.s_store_sk       and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk     and store_sales.ss_addr_sk = customer_address.ca_address_sk     and (household_demographics.hd_dep_count = 3 or          household_demographics.hd_vehicle_count= 4)     and date_dim.d_dow in (6,0)     and date_dim.d_year in (1999,1999+1,1999+2)      and store.s_city in ('Riverside','Five Points','Oak Grove','Midway','Fairview')      group by ss_ticket_number,ss_customer_sk,ss_addr_sk,ca_city) dn,customer,customer_address current_addr     where ss_customer_sk = c_customer_sk       and customer.c_current_addr_sk = current_addr.ca_address_sk       and current_addr.ca_city <> bought_city   order by c_last_name           ,c_first_name           ,ca_city           ,bought_city           ,ss_ticket_number   limit 100;  "], ["with v1 as(  select i_category, i_brand,         s_store_name, s_company_name,         d_year, d_moy,         sum(ss_sales_price) sum_sales,         avg(sum(ss_sales_price)) over           (partition by i_category, i_brand,                      s_store_name, s_company_name, d_year)           avg_monthly_sales,         rank() over           (partition by i_category, i_brand,                      s_store_name, s_company_name            order by d_year, d_moy) rn  from item, store_sales, date_dim, store  where ss_item_sk = i_item_sk and        ss_sold_date_sk = d_date_sk and        ss_store_sk = s_store_sk and        (          d_year = 2001 or          ( d_year = 2001-1 and d_moy =12) or          ( d_year = 2001+1 and d_moy =1)        )  group by i_category, i_brand,           s_store_name, s_company_name,           d_year, d_moy),  v2 as(  select v1.i_category         ,v1.d_year, v1.d_moy         ,v1.avg_monthly_sales         ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum  from v1, v1 v1_lag, v1 v1_lead  where v1.i_category = v1_lag.i_category and        v1.i_category = v1_lead.i_category and        v1.i_brand = v1_lag.i_brand and        v1.i_brand = v1_lead.i_brand and        v1.s_store_name = v1_lag.s_store_name and        v1.s_store_name = v1_lead.s_store_name and        v1.s_company_name = v1_lag.s_company_name and        v1.s_company_name = v1_lead.s_company_name and        v1.rn = v1_lag.rn + 1 and        v1.rn = v1_lead.rn - 1)   select  *  from v2  where  d_year = 2001 and             avg_monthly_sales > 0 and         case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1  order by sum_sales - avg_monthly_sales, sum_sales  limit 100;  "], ["select sum (ss_quantity)  from store_sales, store, customer_demographics, customer_address, date_dim  where s_store_sk = ss_store_sk  and  ss_sold_date_sk = d_date_sk and d_year = 2001  and    (   (    cd_demo_sk = ss_cdemo_sk    and     cd_marital_status = 'U'    and     cd_education_status = 'Unknown'    and     ss_sales_price between 100.00 and 150.00      )  or   (   cd_demo_sk = ss_cdemo_sk    and     cd_marital_status = 'D'    and     cd_education_status = '4 yr Degree'    and     ss_sales_price between 50.00 and 100.00      )  or   (   cd_demo_sk = ss_cdemo_sk   and     cd_marital_status = 'M'    and     cd_education_status = 'College'    and     ss_sales_price between 150.00 and 200.00    )  )  and  (   (   ss_addr_sk = ca_address_sk   and   ca_country = 'United States'   and   ca_state in ('IL', 'OK', 'VA')   and ss_net_profit between 0 and 2000     )  or   (ss_addr_sk = ca_address_sk   and   ca_country = 'United States'   and   ca_state in ('IA', 'OH', 'NC')   and ss_net_profit between 150 and 3000    )  or   (ss_addr_sk = ca_address_sk   and   ca_country = 'United States'   and   ca_state in ('KS', 'CO', 'PA')   and ss_net_profit between 50 and 25000    )  ) ;  "], ["select  channel, item, return_ratio, return_rank, currency_rank from  (select  'web' as channel  ,web.item  ,web.return_ratio  ,web.return_rank  ,web.currency_rank  from (     select       item   ,return_ratio   ,currency_ratio     ,rank() over (order by return_ratio) as return_rank     ,rank() over (order by currency_ratio) as currency_rank     from    (   select ws.ws_item_sk as item        ,(cast(sum(coalesce(wr.wr_return_quantity,0)) as decimal(15,4))/        cast(sum(coalesce(ws.ws_quantity,0)) as decimal(15,4) )) as return_ratio        ,(cast(sum(coalesce(wr.wr_return_amt,0)) as decimal(15,4))/         cast(sum(coalesce(ws.ws_net_paid,0)) as decimal(15,4) )) as currency_ratio          from         web_sales ws left outer join web_returns wr            on (ws.ws_order_number = wr.wr_order_number and             ws.ws_item_sk = wr.wr_item_sk)                  ,date_dim       where               wr.wr_return_amt > 10000            and ws.ws_net_profit > 1                          and ws.ws_net_paid > 0                          and ws.ws_quantity > 0                          and ws_sold_date_sk = d_date_sk                          and d_year = 1999                          and d_moy = 12        group by ws.ws_item_sk      ) in_web  ) web  where   (  web.return_rank <= 10  or  web.currency_rank <= 10  )  union  select   'catalog' as channel  ,catalog.item  ,catalog.return_ratio  ,catalog.return_rank  ,catalog.currency_rank  from (     select       item   ,return_ratio   ,currency_ratio     ,rank() over (order by return_ratio) as return_rank     ,rank() over (order by currency_ratio) as currency_rank     from    (   select          cs.cs_item_sk as item       ,(cast(sum(coalesce(cr.cr_return_quantity,0)) as decimal(15,4))/        cast(sum(coalesce(cs.cs_quantity,0)) as decimal(15,4) )) as return_ratio        ,(cast(sum(coalesce(cr.cr_return_amount,0)) as decimal(15,4))/          cast(sum(coalesce(cs.cs_net_paid,0)) as decimal(15,4) )) as currency_ratio          from        catalog_sales cs left outer join catalog_returns cr             on (cs.cs_order_number = cr.cr_order_number and             cs.cs_item_sk = cr.cr_item_sk)                 ,date_dim        where               cr.cr_return_amount > 10000             and cs.cs_net_profit > 1                          and cs.cs_net_paid > 0                          and cs.cs_quantity > 0                          and cs_sold_date_sk = d_date_sk                          and d_year = 1999                          and d_moy = 12                  group by cs.cs_item_sk    ) in_cat  ) catalog  where   (  catalog.return_rank <= 10  or  catalog.currency_rank <=10  )  union  select   'store' as channel  ,store.item  ,store.return_ratio  ,store.return_rank  ,store.currency_rank  from (    select       item   ,return_ratio   ,currency_ratio     ,rank() over (order by return_ratio) as return_rank     ,rank() over (order by currency_ratio) as currency_rank     from    (   select sts.ss_item_sk as item       ,(cast(sum(coalesce(sr.sr_return_quantity,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_quantity,0)) as decimal(15,4) )) as return_ratio       ,(cast(sum(coalesce(sr.sr_return_amt,0)) as decimal(15,4))/cast(sum(coalesce(sts.ss_net_paid,0)) as decimal(15,4) )) as currency_ratio          from        store_sales sts left outer join store_returns sr            on (sts.ss_ticket_number = sr.sr_ticket_number and sts.ss_item_sk = sr.sr_item_sk)                 ,date_dim        where               sr.sr_return_amt > 10000            and sts.ss_net_profit > 1                          and sts.ss_net_paid > 0                           and sts.ss_quantity > 0                          and ss_sold_date_sk = d_date_sk                          and d_year = 1999                          and d_moy = 12        group by sts.ss_item_sk     ) in_store  ) store  where  (  store.return_rank <= 10  or   store.currency_rank <= 10  )  ) as alias123   order by 1,4,5,2  limit 100;  "], ["select      s_store_name   ,s_company_id   ,s_street_number   ,s_street_name   ,s_street_type   ,s_suite_number   ,s_city   ,s_county   ,s_state   ,s_zip   ,sum(case when (sr_returned_date_sk - ss_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\"    ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 30) and                   (sr_returned_date_sk - ss_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\"    ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 60) and                   (sr_returned_date_sk - ss_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\"    ,sum(case when (sr_returned_date_sk - ss_sold_date_sk > 90) and                  (sr_returned_date_sk - ss_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\"    ,sum(case when (sr_returned_date_sk - ss_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\"  from    store_sales   ,store_returns   ,store   ,date_dim d1   ,date_dim d2 where     d2.d_year = 1999 and d2.d_moy  = 10 and ss_ticket_number = sr_ticket_number and ss_item_sk = sr_item_sk and ss_sold_date_sk   = d1.d_date_sk and sr_returned_date_sk   = d2.d_date_sk and ss_customer_sk = sr_customer_sk and ss_store_sk = s_store_sk group by    s_store_name   ,s_company_id   ,s_street_number   ,s_street_name   ,s_street_type   ,s_suite_number   ,s_city   ,s_county   ,s_state   ,s_zip order by s_store_name         ,s_company_id         ,s_street_number         ,s_street_name         ,s_street_type         ,s_suite_number         ,s_city         ,s_county         ,s_state         ,s_zip limit 100;  "], ["WITH web_v1 as ( select   ws_item_sk item_sk, d_date,   sum(sum(ws_sales_price))       over (partition by ws_item_sk order by d_date rows between unbounded preceding and current row) cume_sales from web_sales     ,date_dim where ws_sold_date_sk=d_date_sk   and d_month_seq between 1202 and 1202+11   and ws_item_sk is not NULL group by ws_item_sk, d_date), store_v1 as ( select   ss_item_sk item_sk, d_date,   sum(sum(ss_sales_price))       over (partition by ss_item_sk order by d_date rows between unbounded preceding and current row) cume_sales from store_sales     ,date_dim where ss_sold_date_sk=d_date_sk   and d_month_seq between 1202 and 1202+11   and ss_item_sk is not NULL group by ss_item_sk, d_date)  select  * from (select item_sk      ,d_date      ,web_sales      ,store_sales      ,max(web_sales)          over (partition by item_sk order by d_date rows between unbounded preceding and current row) web_cumulative      ,max(store_sales)          over (partition by item_sk order by d_date rows between unbounded preceding and current row) store_cumulative      from (select case when web.item_sk is not null then web.item_sk else store.item_sk end item_sk                  ,case when web.d_date is not null then web.d_date else store.d_date end d_date                  ,web.cume_sales web_sales                  ,store.cume_sales store_sales            from web_v1 web full outer join store_v1 store on (web.item_sk = store.item_sk                                                           and web.d_date = store.d_date)           )x )y where web_cumulative > store_cumulative order by item_sk         ,d_date limit 100;  "], ["select  dt.d_year      ,item.i_brand_id brand_id   ,item.i_brand brand     ,sum(ss_ext_sales_price) ext_price  from date_dim dt      ,store_sales      ,item  where dt.d_date_sk = store_sales.ss_sold_date_sk     and store_sales.ss_item_sk = item.i_item_sk     and item.i_manager_id = 1     and dt.d_moy=11     and dt.d_year=2002  group by dt.d_year    ,item.i_brand   ,item.i_brand_id  order by dt.d_year    ,ext_price desc     ,brand_id limit 100 ;  "], ["select  * from  (select i_manufact_id, sum(ss_sales_price) sum_sales, avg(sum(ss_sales_price)) over (partition by i_manufact_id) avg_quarterly_sales from item, store_sales, date_dim, store where ss_item_sk = i_item_sk and ss_sold_date_sk = d_date_sk and ss_store_sk = s_store_sk and d_month_seq in (1209,1209+1,1209+2,1209+3,1209+4,1209+5,1209+6,1209+7,1209+8,1209+9,1209+10,1209+11) and ((i_category in ('Books','Children','Electronics') and i_class in ('personal','portable','reference','self-help') and i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',      'exportiunivamalg #9','scholaramalgamalg #9')) or(i_category in ('Women','Music','Men') and i_class in ('accessories','classical','fragrances','pants') and i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',         'importoamalg #1'))) group by i_manufact_id, d_qoy ) tmp1 where case when avg_quarterly_sales > 0   then abs (sum_sales - avg_quarterly_sales)/ avg_quarterly_sales     else null end > 0.1 order by avg_quarterly_sales,    sum_sales,      i_manufact_id limit 100;  "], ["with my_customers as (  select distinct c_customer_sk         , c_current_addr_sk  from            ( select cs_sold_date_sk sold_date_sk,                  cs_bill_customer_sk customer_sk,                  cs_item_sk item_sk           from   catalog_sales           union all           select ws_sold_date_sk sold_date_sk,                  ws_bill_customer_sk customer_sk,                  ws_item_sk item_sk           from   web_sales          ) cs_or_ws_sales,          item,          date_dim,          customer  where   sold_date_sk = d_date_sk          and item_sk = i_item_sk          and i_category = 'Music'          and i_class = 'country'          and c_customer_sk = cs_or_ws_sales.customer_sk          and d_moy = 3          and d_year = 2001  )  , my_revenue as (  select c_customer_sk,         sum(ss_ext_sales_price) as revenue  from   my_customers,         store_sales,         customer_address,         store,         date_dim  where  c_current_addr_sk = ca_address_sk         and ca_county = s_county         and ca_state = s_state         and ss_sold_date_sk = d_date_sk         and c_customer_sk = ss_customer_sk         and d_month_seq between (select distinct d_month_seq+1                                  from   date_dim where d_year = 2001 and d_moy = 3)                            and  (select distinct d_month_seq+3                                  from   date_dim where d_year = 2001 and d_moy = 3)  group by c_customer_sk  )  , segments as  (select cast((revenue/50) as int) as segment   from   my_revenue  )   select  segment, count(*) as num_customers, segment*50 as segment_base  from segments  group by segment  order by segment, num_customers  limit 100;  "], ["select  i_brand_id brand_id, i_brand brand,     sum(ss_ext_sales_price) ext_price  from date_dim, store_sales, item  where d_date_sk = ss_sold_date_sk      and ss_item_sk = i_item_sk      and i_manager_id=44     and d_moy=11    and d_year=2000  group by i_brand, i_brand_id  order by ext_price desc, i_brand_id limit 100 ;  "], ["with ss as (  select i_item_id,sum(ss_ext_sales_price) total_sales  from      store_sales,    date_dim,          customer_address,          item  where i_item_id in (select      i_item_id from item where i_color in ('khaki','purple','metallic'))  and     ss_item_sk              = i_item_sk  and     ss_sold_date_sk         = d_date_sk  and     d_year                  = 2001  and     d_moy                   = 5  and     ss_addr_sk              = ca_address_sk  and     ca_gmt_offset           = -5   group by i_item_id),  cs as (  select i_item_id,sum(cs_ext_sales_price) total_sales  from   catalog_sales,      date_dim,          customer_address,          item  where          i_item_id               in (select   i_item_id from item where i_color in ('khaki','purple','metallic'))  and     cs_item_sk              = i_item_sk  and     cs_sold_date_sk         = d_date_sk  and     d_year                  = 2001  and     d_moy                   = 5  and     cs_bill_addr_sk         = ca_address_sk  and     ca_gmt_offset           = -5   group by i_item_id),  ws as (  select i_item_id,sum(ws_ext_sales_price) total_sales  from   web_sales,      date_dim,          customer_address,          item  where          i_item_id               in (select   i_item_id from item where i_color in ('khaki','purple','metallic'))  and     ws_item_sk              = i_item_sk  and     ws_sold_date_sk         = d_date_sk  and     d_year                  = 2001  and     d_moy                   = 5  and     ws_bill_addr_sk         = ca_address_sk  and     ca_gmt_offset           = -5  group by i_item_id)   select  i_item_id ,sum(total_sales) total_sales  from  (select * from ss          union all         select * from cs          union all         select * from ws) tmp1  group by i_item_id  order by total_sales,           i_item_id  limit 100;  "], ["with v1 as(  select i_category, i_brand,         cc_name,         d_year, d_moy,         sum(cs_sales_price) sum_sales,         avg(sum(cs_sales_price)) over           (partition by i_category, i_brand,                      cc_name, d_year)           avg_monthly_sales,         rank() over           (partition by i_category, i_brand,                      cc_name            order by d_year, d_moy) rn  from item, catalog_sales, date_dim, call_center  where cs_item_sk = i_item_sk and        cs_sold_date_sk = d_date_sk and        cc_call_center_sk= cs_call_center_sk and        (          d_year = 2001 or          ( d_year = 2001-1 and d_moy =12) or          ( d_year = 2001+1 and d_moy =1)        )  group by i_category, i_brand,           cc_name , d_year, d_moy),  v2 as(  select v1.i_category, v1.i_brand         ,v1.d_year, v1.d_moy         ,v1.avg_monthly_sales         ,v1.sum_sales, v1_lag.sum_sales psum, v1_lead.sum_sales nsum  from v1, v1 v1_lag, v1 v1_lead  where v1.i_category = v1_lag.i_category and        v1.i_category = v1_lead.i_category and        v1.i_brand = v1_lag.i_brand and        v1.i_brand = v1_lead.i_brand and        v1. cc_name = v1_lag. cc_name and        v1. cc_name = v1_lead. cc_name and        v1.rn = v1_lag.rn + 1 and        v1.rn = v1_lead.rn - 1)   select  *  from v2  where  d_year = 2001 and         avg_monthly_sales > 0 and         case when avg_monthly_sales > 0 then abs(sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1  order by sum_sales - avg_monthly_sales, nsum  limit 100;  "], ["with ss_items as  (select i_item_id item_id         ,sum(ss_ext_sales_price) ss_item_rev   from store_sales      ,item      ,date_dim  where ss_item_sk = i_item_sk    and d_date in (select d_date                   from date_dim                   where d_week_seq = (select d_week_seq                                        from date_dim                                       where d_date = '1998-01-31'))    and ss_sold_date_sk   = d_date_sk  group by i_item_id),  cs_items as  (select i_item_id item_id         ,sum(cs_ext_sales_price) cs_item_rev   from catalog_sales       ,item       ,date_dim  where cs_item_sk = i_item_sk   and  d_date in (select d_date                   from date_dim                   where d_week_seq = (select d_week_seq                                        from date_dim                                       where d_date = '1998-01-31'))   and  cs_sold_date_sk = d_date_sk  group by i_item_id),  ws_items as  (select i_item_id item_id         ,sum(ws_ext_sales_price) ws_item_rev   from web_sales       ,item       ,date_dim  where ws_item_sk = i_item_sk   and  d_date in (select d_date                   from date_dim                   where d_week_seq =(select d_week_seq                                       from date_dim                                      where d_date = '1998-01-31'))   and ws_sold_date_sk   = d_date_sk  group by i_item_id)   select  ss_items.item_id        ,ss_item_rev        ,ss_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ss_dev        ,cs_item_rev        ,cs_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 cs_dev        ,ws_item_rev        ,ws_item_rev/((ss_item_rev+cs_item_rev+ws_item_rev)/3) * 100 ws_dev        ,(ss_item_rev+cs_item_rev+ws_item_rev)/3 average  from ss_items,cs_items,ws_items  where ss_items.item_id=cs_items.item_id    and ss_items.item_id=ws_items.item_id     and ss_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev    and ss_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev    and cs_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev    and cs_item_rev between 0.9 * ws_item_rev and 1.1 * ws_item_rev    and ws_item_rev between 0.9 * ss_item_rev and 1.1 * ss_item_rev    and ws_item_rev between 0.9 * cs_item_rev and 1.1 * cs_item_rev  order by item_id          ,ss_item_rev  limit 100;  "], ["with wss as   (select d_week_seq,         ss_store_sk,         sum(case when (d_day_name='Sunday') then ss_sales_price else null end) sun_sales,         sum(case when (d_day_name='Monday') then ss_sales_price else null end) mon_sales,         sum(case when (d_day_name='Tuesday') then ss_sales_price else  null end) tue_sales,         sum(case when (d_day_name='Wednesday') then ss_sales_price else null end) wed_sales,         sum(case when (d_day_name='Thursday') then ss_sales_price else null end) thu_sales,         sum(case when (d_day_name='Friday') then ss_sales_price else null end) fri_sales,         sum(case when (d_day_name='Saturday') then ss_sales_price else null end) sat_sales  from store_sales,date_dim  where d_date_sk = ss_sold_date_sk  group by d_week_seq,ss_store_sk  )   select  s_store_name1,s_store_id1,d_week_seq1        ,sun_sales1/sun_sales2,mon_sales1/mon_sales2        ,tue_sales1/tue_sales2,wed_sales1/wed_sales2,thu_sales1/thu_sales2        ,fri_sales1/fri_sales2,sat_sales1/sat_sales2  from  (select s_store_name s_store_name1,wss.d_week_seq d_week_seq1         ,s_store_id s_store_id1,sun_sales sun_sales1         ,mon_sales mon_sales1,tue_sales tue_sales1         ,wed_sales wed_sales1,thu_sales thu_sales1         ,fri_sales fri_sales1,sat_sales sat_sales1   from wss,store,date_dim d   where d.d_week_seq = wss.d_week_seq and         ss_store_sk = s_store_sk and          d_month_seq between 1182 and 1182 + 11) y,  (select s_store_name s_store_name2,wss.d_week_seq d_week_seq2         ,s_store_id s_store_id2,sun_sales sun_sales2         ,mon_sales mon_sales2,tue_sales tue_sales2         ,wed_sales wed_sales2,thu_sales thu_sales2         ,fri_sales fri_sales2,sat_sales sat_sales2   from wss,store,date_dim d   where d.d_week_seq = wss.d_week_seq and         ss_store_sk = s_store_sk and          d_month_seq between 1182+ 12 and 1182 + 23) x  where s_store_id1=s_store_id2    and d_week_seq1=d_week_seq2-52  order by s_store_name1,s_store_id1,d_week_seq1 limit 100;  "], ["with ss as (  select           i_item_id,sum(ss_ext_sales_price) total_sales  from   store_sales,    date_dim,          customer_address,          item  where          i_item_id in (select   i_item_id from  item where i_category in ('Men'))  and     ss_item_sk              = i_item_sk  and     ss_sold_date_sk         = d_date_sk  and     d_year                  = 1998  and     d_moy                   = 8  and     ss_addr_sk              = ca_address_sk  and     ca_gmt_offset           = -5   group by i_item_id),  cs as (  select           i_item_id,sum(cs_ext_sales_price) total_sales  from     catalog_sales,      date_dim,          customer_address,          item  where          i_item_id               in (select   i_item_id from  item where i_category in ('Men'))  and     cs_item_sk              = i_item_sk  and     cs_sold_date_sk         = d_date_sk  and     d_year                  = 1998  and     d_moy                   = 8  and     cs_bill_addr_sk         = ca_address_sk  and     ca_gmt_offset           = -5   group by i_item_id),  ws as (  select           i_item_id,sum(ws_ext_sales_price) total_sales  from   web_sales,      date_dim,          customer_address,          item  where          i_item_id               in (select   i_item_id from  item where i_category in ('Men'))  and     ws_item_sk              = i_item_sk  and     ws_sold_date_sk         = d_date_sk  and     d_year                  = 1998  and     d_moy                   = 8  and     ws_bill_addr_sk         = ca_address_sk  and     ca_gmt_offset           = -5  group by i_item_id)   select      i_item_id ,sum(total_sales) total_sales  from  (select * from ss          union all         select * from cs          union all         select * from ws) tmp1  group by i_item_id  order by i_item_id       ,total_sales  limit 100;  "], ["select  promotions,total,cast(promotions as decimal(15,4))/cast(total as decimal(15,4))*100 from   (select sum(ss_ext_sales_price) promotions    from  store_sales         ,store         ,promotion         ,date_dim         ,customer         ,customer_address          ,item    where ss_sold_date_sk = d_date_sk    and   ss_store_sk = s_store_sk    and   ss_promo_sk = p_promo_sk    and   ss_customer_sk= c_customer_sk    and   ca_address_sk = c_current_addr_sk    and   ss_item_sk = i_item_sk     and   ca_gmt_offset = -6    and   i_category = 'Electronics'    and   (p_channel_dmail = 'Y' or p_channel_email = 'Y' or p_channel_tv = 'Y')    and   s_gmt_offset = -6    and   d_year = 1999    and   d_moy  = 11) promotional_sales,   (select sum(ss_ext_sales_price) total    from  store_sales         ,store         ,date_dim         ,customer         ,customer_address         ,item    where ss_sold_date_sk = d_date_sk    and   ss_store_sk = s_store_sk    and   ss_customer_sk= c_customer_sk    and   ca_address_sk = c_current_addr_sk    and   ss_item_sk = i_item_sk    and   ca_gmt_offset = -6    and   i_category = 'Electronics'    and   s_gmt_offset = -6    and   d_year = 1999    and   d_moy  = 11) all_sales order by promotions, total limit 100;  "], ["select      substr(w_warehouse_name,1,20)   ,sm_type   ,web_name   ,sum(case when (ws_ship_date_sk - ws_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\"    ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 30) and                   (ws_ship_date_sk - ws_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\"    ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 60) and                   (ws_ship_date_sk - ws_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\"    ,sum(case when (ws_ship_date_sk - ws_sold_date_sk > 90) and                  (ws_ship_date_sk - ws_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\"    ,sum(case when (ws_ship_date_sk - ws_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\"  from    web_sales   ,warehouse   ,ship_mode   ,web_site   ,date_dim where     d_month_seq between 1199 and 1199 + 11 and ws_ship_date_sk   = d_date_sk and ws_warehouse_sk   = w_warehouse_sk and ws_ship_mode_sk   = sm_ship_mode_sk and ws_web_site_sk    = web_site_sk group by    substr(w_warehouse_name,1,20)   ,sm_type   ,web_name order by substr(w_warehouse_name,1,20)         ,sm_type        ,web_name limit 100;  "], ["select  *  from (select i_manager_id              ,sum(ss_sales_price) sum_sales              ,avg(sum(ss_sales_price)) over (partition by i_manager_id) avg_monthly_sales       from item           ,store_sales           ,date_dim           ,store       where ss_item_sk = i_item_sk         and ss_sold_date_sk = d_date_sk         and ss_store_sk = s_store_sk         and d_month_seq in (1183,1183+1,1183+2,1183+3,1183+4,1183+5,1183+6,1183+7,1183+8,1183+9,1183+10,1183+11)         and ((    i_category in ('Books','Children','Electronics')               and i_class in ('personal','portable','reference','self-help')               and i_brand in ('scholaramalgamalg #14','scholaramalgamalg #7',                          'exportiunivamalg #9','scholaramalgamalg #9'))            or(    i_category in ('Women','Music','Men')               and i_class in ('accessories','classical','fragrances','pants')               and i_brand in ('amalgimporto #1','edu packscholar #1','exportiimporto #1',                         'importoamalg #1'))) group by i_manager_id, d_moy) tmp1 where case when avg_monthly_sales > 0 then abs (sum_sales - avg_monthly_sales) / avg_monthly_sales else null end > 0.1 order by i_manager_id         ,avg_monthly_sales         ,sum_sales limit 100;  "], ["with cs_ui as  (select cs_item_sk         ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund   from catalog_sales       ,catalog_returns   where cs_item_sk = cr_item_sk     and cs_order_number = cr_order_number   group by cs_item_sk   having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)), cross_sales as  (select i_product_name product_name      ,i_item_sk item_sk      ,s_store_name store_name      ,s_zip store_zip      ,ad1.ca_street_number b_street_number      ,ad1.ca_street_name b_street_name      ,ad1.ca_city b_city      ,ad1.ca_zip b_zip      ,ad2.ca_street_number c_street_number      ,ad2.ca_street_name c_street_name      ,ad2.ca_city c_city      ,ad2.ca_zip c_zip      ,d1.d_year as syear      ,d2.d_year as fsyear      ,d3.d_year s2year      ,count(*) cnt      ,sum(ss_wholesale_cost) s1      ,sum(ss_list_price) s2      ,sum(ss_coupon_amt) s3   FROM   store_sales         ,store_returns         ,cs_ui         ,date_dim d1         ,date_dim d2         ,date_dim d3         ,store         ,customer         ,customer_demographics cd1         ,customer_demographics cd2         ,promotion         ,household_demographics hd1         ,household_demographics hd2         ,customer_address ad1         ,customer_address ad2         ,income_band ib1         ,income_band ib2         ,item   WHERE  ss_store_sk = s_store_sk AND          ss_sold_date_sk = d1.d_date_sk AND          ss_customer_sk = c_customer_sk AND          ss_cdemo_sk= cd1.cd_demo_sk AND          ss_hdemo_sk = hd1.hd_demo_sk AND          ss_addr_sk = ad1.ca_address_sk and          ss_item_sk = i_item_sk and          ss_item_sk = sr_item_sk and          ss_ticket_number = sr_ticket_number and          ss_item_sk = cs_ui.cs_item_sk and          c_current_cdemo_sk = cd2.cd_demo_sk AND          c_current_hdemo_sk = hd2.hd_demo_sk AND          c_current_addr_sk = ad2.ca_address_sk and          c_first_sales_date_sk = d2.d_date_sk and          c_first_shipto_date_sk = d3.d_date_sk and          ss_promo_sk = p_promo_sk and          hd1.hd_income_band_sk = ib1.ib_income_band_sk and          hd2.hd_income_band_sk = ib2.ib_income_band_sk and          cd1.cd_marital_status <> cd2.cd_marital_status and          i_color in ('ivory','chiffon','sky','blue','almond','antique') and          i_current_price between 79 and 79 + 10 and          i_current_price between 79 + 1 and 79 + 15 group by i_product_name        ,i_item_sk        ,s_store_name        ,s_zip        ,ad1.ca_street_number        ,ad1.ca_street_name        ,ad1.ca_city        ,ad1.ca_zip        ,ad2.ca_street_number        ,ad2.ca_street_name        ,ad2.ca_city        ,ad2.ca_zip        ,d1.d_year        ,d2.d_year        ,d3.d_year ) select cs1.product_name      ,cs1.store_name      ,cs1.store_zip      ,cs1.b_street_number      ,cs1.b_street_name      ,cs1.b_city      ,cs1.b_zip      ,cs1.c_street_number      ,cs1.c_street_name      ,cs1.c_city      ,cs1.c_zip      ,cs1.syear      ,cs1.cnt      ,cs1.s1 as s11      ,cs1.s2 as s21      ,cs1.s3 as s31      ,cs2.s1 as s12      ,cs2.s2 as s22      ,cs2.s3 as s32      ,cs2.syear      ,cs2.cnt from cross_sales cs1,cross_sales cs2 where cs1.item_sk=cs2.item_sk and      cs1.syear = 2001 and      cs2.syear = 2001 + 1 and      cs2.cnt <= cs1.cnt and      cs1.store_name = cs2.store_name and      cs1.store_zip = cs2.store_zip order by cs1.product_name        ,cs1.store_name        ,cs2.cnt        ,cs1.s1        ,cs2.s1;  "], ["select     s_store_name,   i_item_desc,    sc.revenue,     i_current_price,    i_wholesale_cost,   i_brand  from store, item,      (select ss_store_sk, avg(revenue) as ave    from        (select  ss_store_sk, ss_item_sk,                sum(ss_sales_price) as revenue         from store_sales, date_dim          where ss_sold_date_sk = d_date_sk and d_month_seq between 1203 and 1203+11          group by ss_store_sk, ss_item_sk) sa    group by ss_store_sk) sb,      (select  ss_store_sk, ss_item_sk, sum(ss_sales_price) as revenue     from store_sales, date_dim      where ss_sold_date_sk = d_date_sk and d_month_seq between 1203 and 1203+11      group by ss_store_sk, ss_item_sk) sc  where sb.ss_store_sk = sc.ss_store_sk and         sc.revenue <= 0.1 * sb.ave and        s_store_sk = sc.ss_store_sk and        i_item_sk = sc.ss_item_sk  order by s_store_name, i_item_desc limit 100;  "], ["select             w_warehouse_name    ,w_warehouse_sq_ft      ,w_city     ,w_county   ,w_state    ,w_country         ,ship_carriers         ,year     ,sum(jan_sales) as jan_sales    ,sum(feb_sales) as feb_sales    ,sum(mar_sales) as mar_sales    ,sum(apr_sales) as apr_sales    ,sum(may_sales) as may_sales    ,sum(jun_sales) as jun_sales    ,sum(jul_sales) as jul_sales    ,sum(aug_sales) as aug_sales    ,sum(sep_sales) as sep_sales    ,sum(oct_sales) as oct_sales    ,sum(nov_sales) as nov_sales    ,sum(dec_sales) as dec_sales    ,sum(jan_sales/w_warehouse_sq_ft) as jan_sales_per_sq_foot      ,sum(feb_sales/w_warehouse_sq_ft) as feb_sales_per_sq_foot      ,sum(mar_sales/w_warehouse_sq_ft) as mar_sales_per_sq_foot      ,sum(apr_sales/w_warehouse_sq_ft) as apr_sales_per_sq_foot      ,sum(may_sales/w_warehouse_sq_ft) as may_sales_per_sq_foot      ,sum(jun_sales/w_warehouse_sq_ft) as jun_sales_per_sq_foot      ,sum(jul_sales/w_warehouse_sq_ft) as jul_sales_per_sq_foot      ,sum(aug_sales/w_warehouse_sq_ft) as aug_sales_per_sq_foot      ,sum(sep_sales/w_warehouse_sq_ft) as sep_sales_per_sq_foot      ,sum(oct_sales/w_warehouse_sq_ft) as oct_sales_per_sq_foot      ,sum(nov_sales/w_warehouse_sq_ft) as nov_sales_per_sq_foot      ,sum(dec_sales/w_warehouse_sq_ft) as dec_sales_per_sq_foot      ,sum(jan_net) as jan_net    ,sum(feb_net) as feb_net    ,sum(mar_net) as mar_net    ,sum(apr_net) as apr_net    ,sum(may_net) as may_net    ,sum(jun_net) as jun_net    ,sum(jul_net) as jul_net    ,sum(aug_net) as aug_net    ,sum(sep_net) as sep_net    ,sum(oct_net) as oct_net    ,sum(nov_net) as nov_net    ,sum(dec_net) as dec_net  from (      select    w_warehouse_name    ,w_warehouse_sq_ft      ,w_city     ,w_county   ,w_state    ,w_country      ,'ALLIANCE' || ',' || 'LATVIAN' as ship_carriers        ,d_year as year     ,sum(case when d_moy = 1        then ws_sales_price* ws_quantity else 0 end) as jan_sales   ,sum(case when d_moy = 2        then ws_sales_price* ws_quantity else 0 end) as feb_sales   ,sum(case when d_moy = 3        then ws_sales_price* ws_quantity else 0 end) as mar_sales   ,sum(case when d_moy = 4        then ws_sales_price* ws_quantity else 0 end) as apr_sales   ,sum(case when d_moy = 5        then ws_sales_price* ws_quantity else 0 end) as may_sales   ,sum(case when d_moy = 6        then ws_sales_price* ws_quantity else 0 end) as jun_sales   ,sum(case when d_moy = 7        then ws_sales_price* ws_quantity else 0 end) as jul_sales   ,sum(case when d_moy = 8        then ws_sales_price* ws_quantity else 0 end) as aug_sales   ,sum(case when d_moy = 9        then ws_sales_price* ws_quantity else 0 end) as sep_sales   ,sum(case when d_moy = 10           then ws_sales_price* ws_quantity else 0 end) as oct_sales   ,sum(case when d_moy = 11       then ws_sales_price* ws_quantity else 0 end) as nov_sales   ,sum(case when d_moy = 12       then ws_sales_price* ws_quantity else 0 end) as dec_sales   ,sum(case when d_moy = 1        then ws_net_profit * ws_quantity else 0 end) as jan_net     ,sum(case when d_moy = 2        then ws_net_profit * ws_quantity else 0 end) as feb_net     ,sum(case when d_moy = 3        then ws_net_profit * ws_quantity else 0 end) as mar_net     ,sum(case when d_moy = 4        then ws_net_profit * ws_quantity else 0 end) as apr_net     ,sum(case when d_moy = 5        then ws_net_profit * ws_quantity else 0 end) as may_net     ,sum(case when d_moy = 6        then ws_net_profit * ws_quantity else 0 end) as jun_net     ,sum(case when d_moy = 7        then ws_net_profit * ws_quantity else 0 end) as jul_net     ,sum(case when d_moy = 8        then ws_net_profit * ws_quantity else 0 end) as aug_net     ,sum(case when d_moy = 9        then ws_net_profit * ws_quantity else 0 end) as sep_net     ,sum(case when d_moy = 10           then ws_net_profit * ws_quantity else 0 end) as oct_net     ,sum(case when d_moy = 11       then ws_net_profit * ws_quantity else 0 end) as nov_net     ,sum(case when d_moy = 12       then ws_net_profit * ws_quantity else 0 end) as dec_net      from           web_sales          ,warehouse          ,date_dim          ,time_dim       ,ship_mode      where             ws_warehouse_sk =  w_warehouse_sk         and ws_sold_date_sk = d_date_sk         and ws_sold_time_sk = t_time_sk   and ws_ship_mode_sk = sm_ship_mode_sk         and d_year = 1998     and t_time between 56917 and 56917+28800    and sm_carrier in ('ALLIANCE','LATVIAN')      group by          w_warehouse_name    ,w_warehouse_sq_ft      ,w_city     ,w_county   ,w_state    ,w_country        ,d_year  union all      select    w_warehouse_name    ,w_warehouse_sq_ft      ,w_city     ,w_county   ,w_state    ,w_country      ,'ALLIANCE' || ',' || 'LATVIAN' as ship_carriers        ,d_year as year     ,sum(case when d_moy = 1        then cs_sales_price* cs_quantity else 0 end) as jan_sales   ,sum(case when d_moy = 2        then cs_sales_price* cs_quantity else 0 end) as feb_sales   ,sum(case when d_moy = 3        then cs_sales_price* cs_quantity else 0 end) as mar_sales   ,sum(case when d_moy = 4        then cs_sales_price* cs_quantity else 0 end) as apr_sales   ,sum(case when d_moy = 5        then cs_sales_price* cs_quantity else 0 end) as may_sales   ,sum(case when d_moy = 6        then cs_sales_price* cs_quantity else 0 end) as jun_sales   ,sum(case when d_moy = 7        then cs_sales_price* cs_quantity else 0 end) as jul_sales   ,sum(case when d_moy = 8        then cs_sales_price* cs_quantity else 0 end) as aug_sales   ,sum(case when d_moy = 9        then cs_sales_price* cs_quantity else 0 end) as sep_sales   ,sum(case when d_moy = 10           then cs_sales_price* cs_quantity else 0 end) as oct_sales   ,sum(case when d_moy = 11       then cs_sales_price* cs_quantity else 0 end) as nov_sales   ,sum(case when d_moy = 12       then cs_sales_price* cs_quantity else 0 end) as dec_sales   ,sum(case when d_moy = 1        then cs_net_paid * cs_quantity else 0 end) as jan_net   ,sum(case when d_moy = 2        then cs_net_paid * cs_quantity else 0 end) as feb_net   ,sum(case when d_moy = 3        then cs_net_paid * cs_quantity else 0 end) as mar_net   ,sum(case when d_moy = 4        then cs_net_paid * cs_quantity else 0 end) as apr_net   ,sum(case when d_moy = 5        then cs_net_paid * cs_quantity else 0 end) as may_net   ,sum(case when d_moy = 6        then cs_net_paid * cs_quantity else 0 end) as jun_net   ,sum(case when d_moy = 7        then cs_net_paid * cs_quantity else 0 end) as jul_net   ,sum(case when d_moy = 8        then cs_net_paid * cs_quantity else 0 end) as aug_net   ,sum(case when d_moy = 9        then cs_net_paid * cs_quantity else 0 end) as sep_net   ,sum(case when d_moy = 10           then cs_net_paid * cs_quantity else 0 end) as oct_net   ,sum(case when d_moy = 11       then cs_net_paid * cs_quantity else 0 end) as nov_net   ,sum(case when d_moy = 12       then cs_net_paid * cs_quantity else 0 end) as dec_net      from           catalog_sales          ,warehouse          ,date_dim          ,time_dim    ,ship_mode      where             cs_warehouse_sk =  w_warehouse_sk         and cs_sold_date_sk = d_date_sk         and cs_sold_time_sk = t_time_sk    and cs_ship_mode_sk = sm_ship_mode_sk         and d_year = 1998     and t_time between 56917 AND 56917+28800    and sm_carrier in ('ALLIANCE','LATVIAN')      group by          w_warehouse_name    ,w_warehouse_sq_ft      ,w_city     ,w_county   ,w_state    ,w_country        ,d_year  ) x  group by          w_warehouse_name      ,w_warehouse_sq_ft      ,w_city     ,w_county   ,w_state    ,w_country      ,ship_carriers        ,year  order by w_warehouse_name  limit 100;  "], ["select  * from (select i_category             ,i_class             ,i_brand             ,i_product_name             ,d_year             ,d_qoy             ,d_moy             ,s_store_id             ,sumsales             ,rank() over (partition by i_category order by sumsales desc) rk       from (select i_category                   ,i_class                   ,i_brand                   ,i_product_name                   ,d_year                   ,d_qoy                   ,d_moy                   ,s_store_id                   ,sum(coalesce(ss_sales_price*ss_quantity,0)) sumsales             from store_sales                 ,date_dim                 ,store                 ,item        where  ss_sold_date_sk=d_date_sk           and ss_item_sk=i_item_sk           and ss_store_sk = s_store_sk           and d_month_seq between 1209 and 1209+11        group by  rollup(i_category, i_class, i_brand, i_product_name, d_year, d_qoy, d_moy,s_store_id))dw1) dw2 where rk <= 100 order by i_category         ,i_class         ,i_brand         ,i_product_name         ,d_year         ,d_qoy         ,d_moy         ,s_store_id         ,sumsales         ,rk limit 100;  "], ["select  c_last_name        ,c_first_name        ,ca_city        ,bought_city        ,ss_ticket_number        ,extended_price        ,extended_tax        ,list_price  from (select ss_ticket_number              ,ss_customer_sk              ,ca_city bought_city              ,sum(ss_ext_sales_price) extended_price               ,sum(ss_ext_list_price) list_price              ,sum(ss_ext_tax) extended_tax         from store_sales            ,date_dim            ,store            ,household_demographics            ,customer_address         where store_sales.ss_sold_date_sk = date_dim.d_date_sk          and store_sales.ss_store_sk = store.s_store_sk           and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk         and store_sales.ss_addr_sk = customer_address.ca_address_sk         and date_dim.d_dom between 1 and 2          and (household_demographics.hd_dep_count = 8 or              household_demographics.hd_vehicle_count= 2)         and date_dim.d_year in (1999,1999+1,1999+2)         and store.s_city in ('Oak Grove','Fairview')        group by ss_ticket_number                ,ss_customer_sk                ,ss_addr_sk,ca_city) dn       ,customer       ,customer_address current_addr  where ss_customer_sk = c_customer_sk    and customer.c_current_addr_sk = current_addr.ca_address_sk    and current_addr.ca_city <> bought_city  order by c_last_name          ,ss_ticket_number  limit 100;  "], ["select     cd_gender,   cd_marital_status,   cd_education_status,   count(*) cnt1,   cd_purchase_estimate,   count(*) cnt2,   cd_credit_rating,   count(*) cnt3  from   customer c,customer_address ca,customer_demographics  where   c.c_current_addr_sk = ca.ca_address_sk and   ca_state in ('TX','ND','OK') and   cd_demo_sk = c.c_current_cdemo_sk and    exists (select *           from store_sales,date_dim           where c.c_customer_sk = ss_customer_sk and                 ss_sold_date_sk = d_date_sk and                 d_year = 2000 and                 d_moy between 3 and 3+2) and    (not exists (select *             from web_sales,date_dim             where c.c_customer_sk = ws_bill_customer_sk and                   ws_sold_date_sk = d_date_sk and                   d_year = 2000 and                   d_moy between 3 and 3+2) and     not exists (select *              from catalog_sales,date_dim             where c.c_customer_sk = cs_ship_customer_sk and                   cs_sold_date_sk = d_date_sk and                   d_year = 2000 and                   d_moy between 3 and 3+2))  group by cd_gender,           cd_marital_status,           cd_education_status,           cd_purchase_estimate,           cd_credit_rating  order by cd_gender,           cd_marital_status,           cd_education_status,           cd_purchase_estimate,           cd_credit_rating  limit 100;  "], ["select       sum(ss_net_profit) as total_sum    ,s_state    ,s_county    ,grouping(s_state)+grouping(s_county) as lochierarchy    ,rank() over (    partition by grouping(s_state)+grouping(s_county),      case when grouping(s_county) = 0 then s_state end       order by sum(ss_net_profit) desc) as rank_within_parent  from     store_sales    ,date_dim       d1    ,store  where     d1.d_month_seq between 1180 and 1180+11  and d1.d_date_sk = ss_sold_date_sk  and s_store_sk  = ss_store_sk  and s_state in              ( select s_state                from  (select s_state as s_state,                  rank() over ( partition by s_state order by sum(ss_net_profit) desc) as ranking                       from   store_sales, store, date_dim                       where  d_month_seq between 1180 and 1180+11                 and d_date_sk = ss_sold_date_sk                 and s_store_sk  = ss_store_sk                       group by s_state                      ) tmp1                 where ranking <= 5              )  group by rollup(s_state,s_county)  order by    lochierarchy desc   ,case when grouping(s_state)+grouping(s_county) = 0 then s_state end   ,rank_within_parent  limit 100;  "], ["select i_brand_id brand_id, i_brand brand,t_hour,t_minute,     sum(ext_price) ext_price  from item, (select ws_ext_sales_price as ext_price,                          ws_sold_date_sk as sold_date_sk,                         ws_item_sk as sold_item_sk,                         ws_sold_time_sk as time_sk                    from web_sales,date_dim                  where d_date_sk = ws_sold_date_sk                    and d_moy=11                    and d_year=2000                  union all                  select cs_ext_sales_price as ext_price,                         cs_sold_date_sk as sold_date_sk,                         cs_item_sk as sold_item_sk,                         cs_sold_time_sk as time_sk                  from catalog_sales,date_dim                  where d_date_sk = cs_sold_date_sk                    and d_moy=11                    and d_year=2000                  union all                  select ss_ext_sales_price as ext_price,                         ss_sold_date_sk as sold_date_sk,                         ss_item_sk as sold_item_sk,                         ss_sold_time_sk as time_sk                  from store_sales,date_dim                  where d_date_sk = ss_sold_date_sk                    and d_moy=11                    and d_year=2000                  ) tmp,time_dim  where    sold_item_sk = i_item_sk    and i_manager_id=1    and time_sk = t_time_sk    and (t_meal_time = 'breakfast' or t_meal_time = 'dinner')  group by i_brand, i_brand_id,t_hour,t_minute  order by ext_price desc, i_brand_id  ;  "], ["select  i_item_desc       ,w_warehouse_name       ,d1.d_week_seq       ,sum(case when p_promo_sk is null then 1 else 0 end) no_promo       ,sum(case when p_promo_sk is not null then 1 else 0 end) promo       ,count(*) total_cnt from catalog_sales join inventory on (cs_item_sk = inv_item_sk) join warehouse on (w_warehouse_sk=inv_warehouse_sk) join item on (i_item_sk = cs_item_sk) join customer_demographics on (cs_bill_cdemo_sk = cd_demo_sk) join household_demographics on (cs_bill_hdemo_sk = hd_demo_sk) join date_dim d1 on (cs_sold_date_sk = d1.d_date_sk) join date_dim d2 on (inv_date_sk = d2.d_date_sk) join date_dim d3 on (cs_ship_date_sk = d3.d_date_sk) left outer join promotion on (cs_promo_sk=p_promo_sk) left outer join catalog_returns on (cr_item_sk = cs_item_sk and cr_order_number = cs_order_number) where d1.d_week_seq = d2.d_week_seq   and inv_quantity_on_hand < cs_quantity    and d3.d_date > d1.d_date + 5   and hd_buy_potential = '501-1000'   and d1.d_year = 1999   and cd_marital_status = 'D' group by i_item_desc,w_warehouse_name,d1.d_week_seq order by total_cnt desc, i_item_desc, w_warehouse_name, d_week_seq limit 100;  "], ["select c_last_name        ,c_first_name        ,c_salutation        ,c_preferred_cust_flag         ,ss_ticket_number        ,cnt from    (select ss_ticket_number           ,ss_customer_sk           ,count(*) cnt     from store_sales,date_dim,store,household_demographics     where store_sales.ss_sold_date_sk = date_dim.d_date_sk     and store_sales.ss_store_sk = store.s_store_sk       and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk     and date_dim.d_dom between 1 and 2      and (household_demographics.hd_buy_potential = '1001-5000' or          household_demographics.hd_buy_potential = 'Unknown')     and household_demographics.hd_vehicle_count > 0     and case when household_demographics.hd_vehicle_count > 0 then               household_demographics.hd_dep_count/ household_demographics.hd_vehicle_count else null end > 1     and date_dim.d_year in (1998,1998+1,1998+2)     and store.s_county in ('Walker County','Williamson County','Ziebach County','Williamson County')     group by ss_ticket_number,ss_customer_sk) dj,customer     where ss_customer_sk = c_customer_sk       and cnt between 1 and 5     order by cnt desc, c_last_name asc;  "], ["with year_total as (  select c_customer_id customer_id        ,c_first_name customer_first_name        ,c_last_name customer_last_name        ,d_year as year        ,max(ss_net_paid) year_total        ,'s' sale_type  from customer      ,store_sales      ,date_dim  where c_customer_sk = ss_customer_sk    and ss_sold_date_sk = d_date_sk    and d_year in (2000,2000+1)  group by c_customer_id          ,c_first_name          ,c_last_name          ,d_year  union all  select c_customer_id customer_id        ,c_first_name customer_first_name        ,c_last_name customer_last_name        ,d_year as year        ,max(ws_net_paid) year_total        ,'w' sale_type  from customer      ,web_sales      ,date_dim  where c_customer_sk = ws_bill_customer_sk    and ws_sold_date_sk = d_date_sk    and d_year in (2000,2000+1)  group by c_customer_id          ,c_first_name          ,c_last_name          ,d_year          )   select          t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name  from year_total t_s_firstyear      ,year_total t_s_secyear      ,year_total t_w_firstyear      ,year_total t_w_secyear  where t_s_secyear.customer_id = t_s_firstyear.customer_id          and t_s_firstyear.customer_id = t_w_secyear.customer_id          and t_s_firstyear.customer_id = t_w_firstyear.customer_id          and t_s_firstyear.sale_type = 's'          and t_w_firstyear.sale_type = 'w'          and t_s_secyear.sale_type = 's'          and t_w_secyear.sale_type = 'w'          and t_s_firstyear.year = 2000          and t_s_secyear.year = 2000+1          and t_w_firstyear.year = 2000          and t_w_secyear.year = 2000+1          and t_s_firstyear.year_total > 0          and t_w_firstyear.year_total > 0          and case when t_w_firstyear.year_total > 0 then t_w_secyear.year_total / t_w_firstyear.year_total else null end            > case when t_s_firstyear.year_total > 0 then t_s_secyear.year_total / t_s_firstyear.year_total else null end  order by 2,1,3 limit 100;  "], ["WITH all_sales AS (  SELECT d_year        ,i_brand_id        ,i_class_id        ,i_category_id        ,i_manufact_id        ,SUM(sales_cnt) AS sales_cnt        ,SUM(sales_amt) AS sales_amt  FROM (SELECT d_year              ,i_brand_id              ,i_class_id              ,i_category_id              ,i_manufact_id              ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt              ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt        FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk                           JOIN date_dim ON d_date_sk=cs_sold_date_sk                           LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number                                                      AND cs_item_sk=cr_item_sk)        WHERE i_category='Women'        UNION        SELECT d_year              ,i_brand_id              ,i_class_id              ,i_category_id              ,i_manufact_id              ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt              ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt        FROM store_sales JOIN item ON i_item_sk=ss_item_sk                         JOIN date_dim ON d_date_sk=ss_sold_date_sk                         LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number                                                  AND ss_item_sk=sr_item_sk)        WHERE i_category='Women'        UNION        SELECT d_year              ,i_brand_id              ,i_class_id              ,i_category_id              ,i_manufact_id              ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt              ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt        FROM web_sales JOIN item ON i_item_sk=ws_item_sk                       JOIN date_dim ON d_date_sk=ws_sold_date_sk                       LEFT JOIN web_returns ON (ws_order_number=wr_order_number                                              AND ws_item_sk=wr_item_sk)        WHERE i_category='Women') sales_detail  GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id)  SELECT  prev_yr.d_year AS prev_year                           ,curr_yr.d_year AS year                           ,curr_yr.i_brand_id                           ,curr_yr.i_class_id                           ,curr_yr.i_category_id                           ,curr_yr.i_manufact_id                           ,prev_yr.sales_cnt AS prev_yr_cnt                           ,curr_yr.sales_cnt AS curr_yr_cnt                           ,curr_yr.sales_cnt-prev_yr.sales_cnt AS sales_cnt_diff                           ,curr_yr.sales_amt-prev_yr.sales_amt AS sales_amt_diff  FROM all_sales curr_yr, all_sales prev_yr  WHERE curr_yr.i_brand_id=prev_yr.i_brand_id    AND curr_yr.i_class_id=prev_yr.i_class_id    AND curr_yr.i_category_id=prev_yr.i_category_id    AND curr_yr.i_manufact_id=prev_yr.i_manufact_id    AND curr_yr.d_year=2000    AND prev_yr.d_year=2000-1    AND CAST(curr_yr.sales_cnt AS DECIMAL(17,2))/CAST(prev_yr.sales_cnt AS DECIMAL(17,2))<0.9  ORDER BY sales_cnt_diff,sales_amt_diff  limit 100;  "], ["select  channel, col_name, d_year, d_qoy, i_category, COUNT(*) sales_cnt, SUM(ext_sales_price) sales_amt FROM (         SELECT 'store' as channel, 'ss_promo_sk' col_name, d_year, d_qoy, i_category, ss_ext_sales_price ext_sales_price          FROM store_sales, item, date_dim          WHERE ss_promo_sk IS NULL            AND ss_sold_date_sk=d_date_sk            AND ss_item_sk=i_item_sk         UNION ALL         SELECT 'web' as channel, 'ws_ship_addr_sk' col_name, d_year, d_qoy, i_category, ws_ext_sales_price ext_sales_price          FROM web_sales, item, date_dim          WHERE ws_ship_addr_sk IS NULL            AND ws_sold_date_sk=d_date_sk            AND ws_item_sk=i_item_sk         UNION ALL         SELECT 'catalog' as channel, 'cs_promo_sk' col_name, d_year, d_qoy, i_category, cs_ext_sales_price ext_sales_price          FROM catalog_sales, item, date_dim          WHERE cs_promo_sk IS NULL            AND cs_sold_date_sk=d_date_sk            AND cs_item_sk=i_item_sk) foo GROUP BY channel, col_name, d_year, d_qoy, i_category ORDER BY channel, col_name, d_year, d_qoy, i_category limit 100;  "], ["with ss as  (select s_store_sk,          sum(ss_ext_sales_price) as sales,          sum(ss_net_profit) as profit  from store_sales,       date_dim,       store  where ss_sold_date_sk = d_date_sk        and d_date between cast('2002-08-03' as date)                    and (cast('2002-08-03' as date) +  interval '30 days')         and ss_store_sk = s_store_sk  group by s_store_sk)  ,  sr as  (select s_store_sk,          sum(sr_return_amt) as returns,          sum(sr_net_loss) as profit_loss  from store_returns,       date_dim,       store  where sr_returned_date_sk = d_date_sk        and d_date between cast('2002-08-03' as date)                   and (cast('2002-08-03' as date) +  interval '30 days')        and sr_store_sk = s_store_sk  group by s_store_sk),   cs as  (select cs_call_center_sk,         sum(cs_ext_sales_price) as sales,         sum(cs_net_profit) as profit  from catalog_sales,       date_dim  where cs_sold_date_sk = d_date_sk        and d_date between cast('2002-08-03' as date)                   and (cast('2002-08-03' as date) +  interval '30 days')  group by cs_call_center_sk   ),   cr as  (select cr_call_center_sk,          sum(cr_return_amount) as returns,          sum(cr_net_loss) as profit_loss  from catalog_returns,       date_dim  where cr_returned_date_sk = d_date_sk        and d_date between cast('2002-08-03' as date)                   and (cast('2002-08-03' as date) +  interval '30 days')  group by cr_call_center_sk  ),   ws as  ( select wp_web_page_sk,         sum(ws_ext_sales_price) as sales,         sum(ws_net_profit) as profit  from web_sales,       date_dim,       web_page  where ws_sold_date_sk = d_date_sk        and d_date between cast('2002-08-03' as date)                   and (cast('2002-08-03' as date) +  interval '30 days')        and ws_web_page_sk = wp_web_page_sk  group by wp_web_page_sk),   wr as  (select wp_web_page_sk,         sum(wr_return_amt) as returns,         sum(wr_net_loss) as profit_loss  from web_returns,       date_dim,       web_page  where wr_returned_date_sk = d_date_sk        and d_date between cast('2002-08-03' as date)                   and (cast('2002-08-03' as date) +  interval '30 days')        and wr_web_page_sk = wp_web_page_sk  group by wp_web_page_sk)   select  channel         , id         , sum(sales) as sales         , sum(returns) as returns         , sum(profit) as profit  from   (select 'store channel' as channel         , ss.s_store_sk as id         , sales         , coalesce(returns, 0) as returns         , (profit - coalesce(profit_loss,0)) as profit  from   ss left join sr         on  ss.s_store_sk = sr.s_store_sk  union all  select 'catalog channel' as channel         , cs_call_center_sk as id         , sales         , returns         , (profit - profit_loss) as profit  from  cs        , cr  union all  select 'web channel' as channel         , ws.wp_web_page_sk as id         , sales         , coalesce(returns, 0) as returns         , (profit - coalesce(profit_loss,0)) as profit  from   ws left join wr         on  ws.wp_web_page_sk = wr.wp_web_page_sk  ) x  group by rollup (channel, id)  order by channel          ,id  limit 100;  "], ["with ws as   (select d_year AS ws_sold_year, ws_item_sk,     ws_bill_customer_sk ws_customer_sk,     sum(ws_quantity) ws_qty,     sum(ws_wholesale_cost) ws_wc,     sum(ws_sales_price) ws_sp    from web_sales    left join web_returns on wr_order_number=ws_order_number and ws_item_sk=wr_item_sk    join date_dim on ws_sold_date_sk = d_date_sk    where wr_order_number is null    group by d_year, ws_item_sk, ws_bill_customer_sk    ), cs as   (select d_year AS cs_sold_year, cs_item_sk,     cs_bill_customer_sk cs_customer_sk,     sum(cs_quantity) cs_qty,     sum(cs_wholesale_cost) cs_wc,     sum(cs_sales_price) cs_sp    from catalog_sales    left join catalog_returns on cr_order_number=cs_order_number and cs_item_sk=cr_item_sk    join date_dim on cs_sold_date_sk = d_date_sk    where cr_order_number is null    group by d_year, cs_item_sk, cs_bill_customer_sk    ), ss as   (select d_year AS ss_sold_year, ss_item_sk,     ss_customer_sk,     sum(ss_quantity) ss_qty,     sum(ss_wholesale_cost) ss_wc,     sum(ss_sales_price) ss_sp    from store_sales    left join store_returns on sr_ticket_number=ss_ticket_number and ss_item_sk=sr_item_sk    join date_dim on ss_sold_date_sk = d_date_sk    where sr_ticket_number is null    group by d_year, ss_item_sk, ss_customer_sk    )  select  ss_customer_sk, round(ss_qty/(coalesce(ws_qty,0)+coalesce(cs_qty,0)),2) ratio, ss_qty store_qty, ss_wc store_wholesale_cost, ss_sp store_sales_price, coalesce(ws_qty,0)+coalesce(cs_qty,0) other_chan_qty, coalesce(ws_wc,0)+coalesce(cs_wc,0) other_chan_wholesale_cost, coalesce(ws_sp,0)+coalesce(cs_sp,0) other_chan_sales_price from ss left join ws on (ws_sold_year=ss_sold_year and ws_item_sk=ss_item_sk and ws_customer_sk=ss_customer_sk) left join cs on (cs_sold_year=ss_sold_year and cs_item_sk=ss_item_sk and cs_customer_sk=ss_customer_sk) where (coalesce(ws_qty,0)>0 or coalesce(cs_qty, 0)>0) and ss_sold_year=2000 order by    ss_customer_sk,   ss_qty desc, ss_wc desc, ss_sp desc,   other_chan_qty,   other_chan_wholesale_cost,   other_chan_sales_price,   ratio limit 100;  "], ["select    c_last_name,c_first_name,substr(s_city,1,30),ss_ticket_number,amt,profit   from    (select ss_ticket_number           ,ss_customer_sk           ,store.s_city           ,sum(ss_coupon_amt) amt           ,sum(ss_net_profit) profit     from store_sales,date_dim,store,household_demographics     where store_sales.ss_sold_date_sk = date_dim.d_date_sk     and store_sales.ss_store_sk = store.s_store_sk       and store_sales.ss_hdemo_sk = household_demographics.hd_demo_sk     and (household_demographics.hd_dep_count = 3 or household_demographics.hd_vehicle_count > 2)     and date_dim.d_dow = 1     and date_dim.d_year in (1999,1999+1,1999+2)      and store.s_number_employees between 200 and 295     group by ss_ticket_number,ss_customer_sk,ss_addr_sk,store.s_city) ms,customer     where ss_customer_sk = c_customer_sk  order by c_last_name,c_first_name,substr(s_city,1,30), profit limit 100;  "], ["with ssr as  (select  s_store_id as store_id,           sum(ss_ext_sales_price) as sales,           sum(coalesce(sr_return_amt, 0)) as returns,           sum(ss_net_profit - coalesce(sr_net_loss, 0)) as profit   from store_sales left outer join store_returns on          (ss_item_sk = sr_item_sk and ss_ticket_number = sr_ticket_number),      date_dim,      store,      item,      promotion  where ss_sold_date_sk = d_date_sk        and d_date between cast('2000-08-29' as date)                    and (cast('2000-08-29' as date) +  interval '30 days')        and ss_store_sk = s_store_sk        and ss_item_sk = i_item_sk        and i_current_price > 50        and ss_promo_sk = p_promo_sk        and p_channel_tv = 'N'  group by s_store_id)  ,  csr as  (select  cp_catalog_page_id as catalog_page_id,           sum(cs_ext_sales_price) as sales,           sum(coalesce(cr_return_amount, 0)) as returns,           sum(cs_net_profit - coalesce(cr_net_loss, 0)) as profit   from catalog_sales left outer join catalog_returns on          (cs_item_sk = cr_item_sk and cs_order_number = cr_order_number),      date_dim,      catalog_page,      item,      promotion  where cs_sold_date_sk = d_date_sk        and d_date between cast('2000-08-29' as date)                   and (cast('2000-08-29' as date) +  interval '30 days')         and cs_catalog_page_sk = cp_catalog_page_sk        and cs_item_sk = i_item_sk        and i_current_price > 50        and cs_promo_sk = p_promo_sk        and p_channel_tv = 'N' group by cp_catalog_page_id)  ,  wsr as  (select  web_site_id,           sum(ws_ext_sales_price) as sales,           sum(coalesce(wr_return_amt, 0)) as returns,           sum(ws_net_profit - coalesce(wr_net_loss, 0)) as profit   from web_sales left outer join web_returns on          (ws_item_sk = wr_item_sk and ws_order_number = wr_order_number),      date_dim,      web_site,      item,      promotion  where ws_sold_date_sk = d_date_sk        and d_date between cast('2000-08-29' as date)                   and (cast('2000-08-29' as date) +  interval '30 days')         and ws_web_site_sk = web_site_sk        and ws_item_sk = i_item_sk        and i_current_price > 50        and ws_promo_sk = p_promo_sk        and p_channel_tv = 'N' group by web_site_id)   select  channel         , id         , sum(sales) as sales         , sum(returns) as returns         , sum(profit) as profit  from   (select 'store channel' as channel         , 'store' || store_id as id         , sales         , returns         , profit  from   ssr  union all  select 'catalog channel' as channel         , 'catalog_page' || catalog_page_id as id         , sales         , returns         , profit  from  csr  union all  select 'web channel' as channel         , 'web_site' || web_site_id as id         , sales         , returns         , profit  from   wsr  ) x  group by rollup (channel, id)  order by channel          ,id  limit 100;  "], ["with customer_total_return as  (select cr_returning_customer_sk as ctr_customer_sk         ,ca_state as ctr_state,     sum(cr_return_amt_inc_tax) as ctr_total_return  from catalog_returns      ,date_dim      ,customer_address  where cr_returned_date_sk = d_date_sk     and d_year =1998    and cr_returning_addr_sk = ca_address_sk   group by cr_returning_customer_sk          ,ca_state )   select  c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name                    ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset                   ,ca_location_type,ctr_total_return  from customer_total_return ctr1      ,customer_address      ,customer  where ctr1.ctr_total_return > (select avg(ctr_total_return)*1.2              from customer_total_return ctr2                         where ctr1.ctr_state = ctr2.ctr_state)        and ca_address_sk = c_current_addr_sk        and ca_state = 'VT'        and ctr1.ctr_customer_sk = c_customer_sk  order by c_customer_id,c_salutation,c_first_name,c_last_name,ca_street_number,ca_street_name                    ,ca_street_type,ca_suite_number,ca_city,ca_county,ca_state,ca_zip,ca_country,ca_gmt_offset                   ,ca_location_type,ctr_total_return  limit 100;  "], ["select  i_item_id        ,i_item_desc        ,i_current_price  from item, inventory, date_dim, store_sales  where i_current_price between 39 and 39+30  and inv_item_sk = i_item_sk  and d_date_sk=inv_date_sk  and d_date between cast('1999-02-04' as date) and (cast('1999-02-04' as date) +  interval '60 days')  and i_manufact_id in (57,24,609,440)  and inv_quantity_on_hand between 100 and 500  and ss_item_sk = i_item_sk  group by i_item_id,i_item_desc,i_current_price  order by i_item_id  limit 100;  "], ["with sr_items as  (select i_item_id item_id,         sum(sr_return_quantity) sr_item_qty  from store_returns,       item,       date_dim  where sr_item_sk = i_item_sk  and   d_date    in     (select d_date  from date_dim   where d_week_seq in         (select d_week_seq      from date_dim     where d_date in ('2000-04-22','2000-10-21','2000-11-08')))  and   sr_returned_date_sk   = d_date_sk  group by i_item_id),  cr_items as  (select i_item_id item_id,         sum(cr_return_quantity) cr_item_qty  from catalog_returns,       item,       date_dim  where cr_item_sk = i_item_sk  and   d_date    in    (select d_date  from date_dim   where d_week_seq in         (select d_week_seq      from date_dim     where d_date in ('2000-04-22','2000-10-21','2000-11-08')))  and   cr_returned_date_sk   = d_date_sk  group by i_item_id),  wr_items as  (select i_item_id item_id,         sum(wr_return_quantity) wr_item_qty  from web_returns,       item,       date_dim  where wr_item_sk = i_item_sk  and   d_date    in    (select d_date  from date_dim   where d_week_seq in         (select d_week_seq      from date_dim       where d_date in ('2000-04-22','2000-10-21','2000-11-08')))  and   wr_returned_date_sk   = d_date_sk  group by i_item_id)   select  sr_items.item_id        ,sr_item_qty        ,sr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 sr_dev        ,cr_item_qty        ,cr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 cr_dev        ,wr_item_qty        ,wr_item_qty/(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 * 100 wr_dev        ,(sr_item_qty+cr_item_qty+wr_item_qty)/3.0 average  from sr_items      ,cr_items      ,wr_items  where sr_items.item_id=cr_items.item_id    and sr_items.item_id=wr_items.item_id   order by sr_items.item_id          ,sr_item_qty  limit 100;  "], ["select  c_customer_id as customer_id        , coalesce(c_last_name,'') || ', ' || coalesce(c_first_name,'') as customername  from customer      ,customer_address      ,customer_demographics      ,household_demographics      ,income_band      ,store_returns  where ca_city          =  'Greenfield'    and c_current_addr_sk = ca_address_sk    and ib_lower_bound   >=  67705    and ib_upper_bound   <=  67705 + 50000    and ib_income_band_sk = hd_income_band_sk    and cd_demo_sk = c_current_cdemo_sk    and hd_demo_sk = c_current_hdemo_sk    and sr_cdemo_sk = cd_demo_sk  order by c_customer_id  limit 100;  "], ["select  substr(r_reason_desc,1,20)        ,avg(ws_quantity)        ,avg(wr_refunded_cash)        ,avg(wr_fee)  from web_sales, web_returns, web_page, customer_demographics cd1,       customer_demographics cd2, customer_address, date_dim, reason   where ws_web_page_sk = wp_web_page_sk    and ws_item_sk = wr_item_sk    and ws_order_number = wr_order_number    and ws_sold_date_sk = d_date_sk and d_year = 2000    and cd1.cd_demo_sk = wr_refunded_cdemo_sk     and cd2.cd_demo_sk = wr_returning_cdemo_sk    and ca_address_sk = wr_refunded_addr_sk    and r_reason_sk = wr_reason_sk    and    (     (      cd1.cd_marital_status = 'D'      and      cd1.cd_marital_status = cd2.cd_marital_status      and      cd1.cd_education_status = '4 yr Degree'      and       cd1.cd_education_status = cd2.cd_education_status      and      ws_sales_price between 100.00 and 150.00     )    or     (      cd1.cd_marital_status = 'U'      and      cd1.cd_marital_status = cd2.cd_marital_status      and      cd1.cd_education_status = 'Primary'       and      cd1.cd_education_status = cd2.cd_education_status      and      ws_sales_price between 50.00 and 100.00     )    or     (      cd1.cd_marital_status = 'M'      and      cd1.cd_marital_status = cd2.cd_marital_status      and      cd1.cd_education_status = '2 yr Degree'      and      cd1.cd_education_status = cd2.cd_education_status      and      ws_sales_price between 150.00 and 200.00     )    )    and    (     (      ca_country = 'United States'      and      ca_state in ('IL', 'GA', 'CA')      and ws_net_profit between 100 and 200       )     or     (      ca_country = 'United States'      and      ca_state in ('TX', 'TN', 'IA')      and ws_net_profit between 150 and 300       )     or     (      ca_country = 'United States'      and      ca_state in ('MN', 'UT', 'IN')      and ws_net_profit between 50 and 250       )    ) group by r_reason_desc order by substr(r_reason_desc,1,20)         ,avg(ws_quantity)         ,avg(wr_refunded_cash)         ,avg(wr_fee) limit 100;  "], ["select        sum(ws_net_paid) as total_sum    ,i_category    ,i_class    ,grouping(i_category)+grouping(i_class) as lochierarchy    ,rank() over (      partition by grouping(i_category)+grouping(i_class),    case when grouping(i_class) = 0 then i_category end     order by sum(ws_net_paid) desc) as rank_within_parent  from     web_sales    ,date_dim       d1    ,item  where     d1.d_month_seq between 1184 and 1184+11  and d1.d_date_sk = ws_sold_date_sk  and i_item_sk  = ws_item_sk  group by rollup(i_category,i_class)  order by    lochierarchy desc,    case when grouping(i_category)+grouping(i_class) = 0 then i_category end,    rank_within_parent  limit 100;  "], ["select count(*)  from ((select distinct c_last_name, c_first_name, d_date        from store_sales, date_dim, customer        where store_sales.ss_sold_date_sk = date_dim.d_date_sk          and store_sales.ss_customer_sk = customer.c_customer_sk          and d_month_seq between 1205 and 1205+11)        except       (select distinct c_last_name, c_first_name, d_date        from catalog_sales, date_dim, customer        where catalog_sales.cs_sold_date_sk = date_dim.d_date_sk          and catalog_sales.cs_bill_customer_sk = customer.c_customer_sk          and d_month_seq between 1205 and 1205+11)        except       (select distinct c_last_name, c_first_name, d_date        from web_sales, date_dim, customer        where web_sales.ws_sold_date_sk = date_dim.d_date_sk          and web_sales.ws_bill_customer_sk = customer.c_customer_sk          and d_month_seq between 1205 and 1205+11) ) cool_cust ;  "], ["select  * from  (select count(*) h8_30_to_9  from store_sales, household_demographics , time_dim, store  where ss_sold_time_sk = time_dim.t_time_sk         and ss_hdemo_sk = household_demographics.hd_demo_sk       and ss_store_sk = s_store_sk      and time_dim.t_hour = 8      and time_dim.t_minute >= 30      and ((household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or           (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2) or           (household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2))       and store.s_store_name = 'ese') s1,  (select count(*) h9_to_9_30   from store_sales, household_demographics , time_dim, store  where ss_sold_time_sk = time_dim.t_time_sk      and ss_hdemo_sk = household_demographics.hd_demo_sk      and ss_store_sk = s_store_sk       and time_dim.t_hour = 9       and time_dim.t_minute < 30      and ((household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or           (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2) or           (household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2))      and store.s_store_name = 'ese') s2,  (select count(*) h9_30_to_10   from store_sales, household_demographics , time_dim, store  where ss_sold_time_sk = time_dim.t_time_sk      and ss_hdemo_sk = household_demographics.hd_demo_sk      and ss_store_sk = s_store_sk      and time_dim.t_hour = 9      and time_dim.t_minute >= 30      and ((household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or           (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2) or           (household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2))      and store.s_store_name = 'ese') s3,  (select count(*) h10_to_10_30  from store_sales, household_demographics , time_dim, store  where ss_sold_time_sk = time_dim.t_time_sk      and ss_hdemo_sk = household_demographics.hd_demo_sk      and ss_store_sk = s_store_sk      and time_dim.t_hour = 10       and time_dim.t_minute < 30      and ((household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or           (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2) or           (household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2))      and store.s_store_name = 'ese') s4,  (select count(*) h10_30_to_11  from store_sales, household_demographics , time_dim, store  where ss_sold_time_sk = time_dim.t_time_sk      and ss_hdemo_sk = household_demographics.hd_demo_sk      and ss_store_sk = s_store_sk      and time_dim.t_hour = 10       and time_dim.t_minute >= 30      and ((household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or           (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2) or           (household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2))      and store.s_store_name = 'ese') s5,  (select count(*) h11_to_11_30  from store_sales, household_demographics , time_dim, store  where ss_sold_time_sk = time_dim.t_time_sk      and ss_hdemo_sk = household_demographics.hd_demo_sk      and ss_store_sk = s_store_sk       and time_dim.t_hour = 11      and time_dim.t_minute < 30      and ((household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or           (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2) or           (household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2))      and store.s_store_name = 'ese') s6,  (select count(*) h11_30_to_12  from store_sales, household_demographics , time_dim, store  where ss_sold_time_sk = time_dim.t_time_sk      and ss_hdemo_sk = household_demographics.hd_demo_sk      and ss_store_sk = s_store_sk      and time_dim.t_hour = 11      and time_dim.t_minute >= 30      and ((household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or           (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2) or           (household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2))      and store.s_store_name = 'ese') s7,  (select count(*) h12_to_12_30  from store_sales, household_demographics , time_dim, store  where ss_sold_time_sk = time_dim.t_time_sk      and ss_hdemo_sk = household_demographics.hd_demo_sk      and ss_store_sk = s_store_sk      and time_dim.t_hour = 12      and time_dim.t_minute < 30      and ((household_demographics.hd_dep_count = 4 and household_demographics.hd_vehicle_count<=4+2) or           (household_demographics.hd_dep_count = 2 and household_demographics.hd_vehicle_count<=2+2) or           (household_demographics.hd_dep_count = 3 and household_demographics.hd_vehicle_count<=3+2))      and store.s_store_name = 'ese') s8 ;  "], ["select  * from( select i_category, i_class, i_brand,        s_store_name, s_company_name,        d_moy,        sum(ss_sales_price) sum_sales,        avg(sum(ss_sales_price)) over          (partition by i_category, i_brand, s_store_name, s_company_name)          avg_monthly_sales from item, store_sales, date_dim, store where ss_item_sk = i_item_sk and       ss_sold_date_sk = d_date_sk and       ss_store_sk = s_store_sk and       d_year in (1999) and         ((i_category in ('Children','Jewelry','Home') and           i_class in ('infants','diamonds','decor')          )       or (i_category in ('Electronics','Sports','Men') and           i_class in ('disk drives','hockey','pants')          )) group by i_category, i_class, i_brand,          s_store_name, s_company_name, d_moy) tmp1 where case when (avg_monthly_sales <> 0) then (abs(sum_sales - avg_monthly_sales) / avg_monthly_sales) else null end > 0.1 order by sum_sales - avg_monthly_sales, s_store_name limit 100;  "], ["select  cast(amc as decimal(15,4))/cast(pmc as decimal(15,4)) am_pm_ratio  from ( select count(*) amc        from web_sales, household_demographics , time_dim, web_page        where ws_sold_time_sk = time_dim.t_time_sk          and ws_ship_hdemo_sk = household_demographics.hd_demo_sk          and ws_web_page_sk = web_page.wp_web_page_sk          and time_dim.t_hour between 7 and 7+1          and household_demographics.hd_dep_count = 0          and web_page.wp_char_count between 5000 and 5200) at,       ( select count(*) pmc        from web_sales, household_demographics , time_dim, web_page        where ws_sold_time_sk = time_dim.t_time_sk          and ws_ship_hdemo_sk = household_demographics.hd_demo_sk          and ws_web_page_sk = web_page.wp_web_page_sk          and time_dim.t_hour between 18 and 18+1          and household_demographics.hd_dep_count = 0          and web_page.wp_char_count between 5000 and 5200) pt  order by am_pm_ratio  limit 100;  "], ["select           cc_call_center_id Call_Center,         cc_name Call_Center_Name,         cc_manager Manager,         sum(cr_net_loss) Returns_Loss from         call_center,         catalog_returns,         date_dim,         customer,         customer_address,         customer_demographics,         household_demographics where         cr_call_center_sk       = cc_call_center_sk and     cr_returned_date_sk     = d_date_sk and     cr_returning_customer_sk= c_customer_sk and     cd_demo_sk              = c_current_cdemo_sk and     hd_demo_sk              = c_current_hdemo_sk and     ca_address_sk           = c_current_addr_sk and     d_year                  = 2002  and     d_moy                   = 12 and     ( (cd_marital_status       = 'M' and cd_education_status     = 'Unknown')         or(cd_marital_status       = 'W' and cd_education_status     = 'Advanced Degree')) and     hd_buy_potential like '1001-5000%' and     ca_gmt_offset           = -7 group by cc_call_center_id,cc_name,cc_manager,cd_marital_status,cd_education_status order by sum(cr_net_loss) desc;  "], ["select      sum(ws_ext_discount_amt)  as \"Excess Discount Amount\"  from      web_sales     ,item     ,date_dim where i_manufact_id = 901 and i_item_sk = ws_item_sk  and d_date between '2001-02-12' and          (cast('2001-02-12' as date) + interval '90 days') and d_date_sk = ws_sold_date_sk  and ws_ext_discount_amt        > (           SELECT              1.3 * avg(ws_ext_discount_amt)           FROM              web_sales             ,date_dim          WHERE                ws_item_sk = i_item_sk            and d_date between '2001-02-12' and                              (cast('2001-02-12' as date) + interval '90 days')           and d_date_sk = ws_sold_date_sk        )  order by sum(ws_ext_discount_amt) limit 100;  "], ["select  ss_customer_sk             ,sum(act_sales) sumsales       from (select ss_item_sk                   ,ss_ticket_number                   ,ss_customer_sk                   ,case when sr_return_quantity is not null then (ss_quantity-sr_return_quantity)*ss_sales_price                                                             else (ss_quantity*ss_sales_price) end act_sales             from store_sales left outer join store_returns on (sr_item_sk = ss_item_sk                                                                and sr_ticket_number = ss_ticket_number)                 ,reason             where sr_reason_sk = r_reason_sk               and r_reason_desc = 'reason 70') t       group by ss_customer_sk       order by sumsales, ss_customer_sk limit 100;  "], ["select      count(distinct ws_order_number) as \"order count\"   ,sum(ws_ext_ship_cost) as \"total shipping cost\"   ,sum(ws_net_profit) as \"total net profit\" from    web_sales ws1   ,date_dim   ,customer_address   ,web_site where     d_date between '2002-2-01' and             (cast('2002-2-01' as date) + interval '60 days') and ws1.ws_ship_date_sk = d_date_sk and ws1.ws_ship_addr_sk = ca_address_sk and ca_state = 'AR' and ws1.ws_web_site_sk = web_site_sk and web_company_name = 'pri' and exists (select *             from web_sales ws2             where ws1.ws_order_number = ws2.ws_order_number               and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk) and not exists(select *                from web_returns wr1                where ws1.ws_order_number = wr1.wr_order_number) order by count(distinct ws_order_number) limit 100;  "], ["with ws_wh as (select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2  from web_sales ws1,web_sales ws2  where ws1.ws_order_number = ws2.ws_order_number    and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk)  select      count(distinct ws_order_number) as \"order count\"   ,sum(ws_ext_ship_cost) as \"total shipping cost\"   ,sum(ws_net_profit) as \"total net profit\" from    web_sales ws1   ,date_dim   ,customer_address   ,web_site where     d_date between '2000-5-01' and             (cast('2000-5-01' as date) + interval '60 days') and ws1.ws_ship_date_sk = d_date_sk and ws1.ws_ship_addr_sk = ca_address_sk and ca_state = 'VA' and ws1.ws_web_site_sk = web_site_sk and web_company_name = 'pri' and ws1.ws_order_number in (select ws_order_number                             from ws_wh) and ws1.ws_order_number in (select wr_order_number                             from web_returns,ws_wh                             where wr_order_number = ws_wh.ws_order_number) order by count(distinct ws_order_number) limit 100;  "], ["select  count(*)  from store_sales     ,household_demographics      ,time_dim, store where ss_sold_time_sk = time_dim.t_time_sk        and ss_hdemo_sk = household_demographics.hd_demo_sk      and ss_store_sk = s_store_sk     and time_dim.t_hour = 20     and time_dim.t_minute >= 30     and household_demographics.hd_dep_count = 5     and store.s_store_name = 'ese' order by count(*) limit 100;  "], ["with ssci as ( select ss_customer_sk customer_sk       ,ss_item_sk item_sk from store_sales,date_dim where ss_sold_date_sk = d_date_sk   and d_month_seq between 1209 and 1209 + 11 group by ss_customer_sk         ,ss_item_sk), csci as(  select cs_bill_customer_sk customer_sk       ,cs_item_sk item_sk from catalog_sales,date_dim where cs_sold_date_sk = d_date_sk   and d_month_seq between 1209 and 1209 + 11 group by cs_bill_customer_sk         ,cs_item_sk)  select  sum(case when ssci.customer_sk is not null and csci.customer_sk is null then 1 else 0 end) store_only       ,sum(case when ssci.customer_sk is null and csci.customer_sk is not null then 1 else 0 end) catalog_only       ,sum(case when ssci.customer_sk is not null and csci.customer_sk is not null then 1 else 0 end) store_and_catalog from ssci full outer join csci on (ssci.customer_sk=csci.customer_sk                                and ssci.item_sk = csci.item_sk) limit 100;  "], ["select i_item_id       ,i_item_desc        ,i_category        ,i_class        ,i_current_price       ,sum(ss_ext_sales_price) as itemrevenue        ,sum(ss_ext_sales_price)*100/sum(sum(ss_ext_sales_price)) over           (partition by i_class) as revenueratio from      store_sales         ,item       ,date_dim where     ss_item_sk = i_item_sk      and i_category in ('Books', 'Sports', 'Electronics')    and ss_sold_date_sk = d_date_sk     and d_date between cast('2000-05-07' as date)               and (cast('2000-05-07' as date) + interval '30 days') group by      i_item_id         ,i_item_desc          ,i_category         ,i_class         ,i_current_price order by      i_category         ,i_class         ,i_item_id         ,i_item_desc         ,revenueratio;  "], ["select      substr(w_warehouse_name,1,20)   ,sm_type   ,cc_name   ,sum(case when (cs_ship_date_sk - cs_sold_date_sk <= 30 ) then 1 else 0 end)  as \"30 days\"    ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 30) and                   (cs_ship_date_sk - cs_sold_date_sk <= 60) then 1 else 0 end )  as \"31-60 days\"    ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 60) and                   (cs_ship_date_sk - cs_sold_date_sk <= 90) then 1 else 0 end)  as \"61-90 days\"    ,sum(case when (cs_ship_date_sk - cs_sold_date_sk > 90) and                  (cs_ship_date_sk - cs_sold_date_sk <= 120) then 1 else 0 end)  as \"91-120 days\"    ,sum(case when (cs_ship_date_sk - cs_sold_date_sk  > 120) then 1 else 0 end)  as \">120 days\"  from    catalog_sales   ,warehouse   ,ship_mode   ,call_center   ,date_dim where     d_month_seq between 1177 and 1177 + 11 and cs_ship_date_sk   = d_date_sk and cs_warehouse_sk   = w_warehouse_sk and cs_ship_mode_sk   = sm_ship_mode_sk and cs_call_center_sk = cc_call_center_sk group by    substr(w_warehouse_name,1,20)   ,sm_type   ,cc_name order by substr(w_warehouse_name,1,20)         ,sm_type         ,cc_name limit 100;  "], ]
    # JOB
    if WORKLOAD_SHORT == "job":
        wl = [["SELECT MIN(mi_idx.info) AS rating,        MIN(t.title) AS movie_title FROM info_type AS it,      keyword AS k,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE it.info ='rating'   AND k.keyword LIKE '%sequel%'   AND mi_idx.info > '5.0'   AND t.production_year > 2005   AND t.id = mi_idx.movie_id   AND t.id = mk.movie_id   AND mk.movie_id = mi_idx.movie_id   AND k.id = mk.keyword_id   AND it.id = mi_idx.info_type_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(n.name) AS writer,        MIN(t.title) AS complete_gore_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      cast_info AS ci,      info_type AS it1,      info_type AS it2,      keyword AS k,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE cct1.kind IN ('cast',                     'crew')   AND cct2.kind ='complete+verified'   AND ci.note IN ('(writer)',                   '(head writer)',                   '(written by)',                   '(story)',                   '(story editor)')   AND it1.info = 'genres'   AND it2.info = 'votes'   AND k.keyword IN ('murder',                     'violence',                     'blood',                     'gore',                     'death',                     'female-nudity',                     'hospital')   AND mi.info IN ('Horror',                   'Thriller')   AND n.gender = 'm'   AND t.production_year > 2000   AND (t.title LIKE '%Freddy%'        OR t.title LIKE '%Jason%'        OR t.title LIKE 'Saw%')   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND t.id = cc.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND ci.movie_id = mk.movie_id   AND ci.movie_id = cc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mk.movie_id   AND mi.movie_id = cc.movie_id   AND mi_idx.movie_id = mk.movie_id   AND mi_idx.movie_id = cc.movie_id   AND mk.movie_id = cc.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(lt.link) AS link_type,        MIN(t1.title) AS first_movie,        MIN(t2.title) AS second_movie FROM keyword AS k,      link_type AS lt,      movie_keyword AS mk,      movie_link AS ml,      title AS t1,      title AS t2 WHERE k.keyword ='character-name-in-title'   AND mk.keyword_id = k.id   AND t1.id = mk.movie_id   AND ml.movie_id = t1.id   AND ml.linked_movie_id = t2.id   AND lt.id = ml.link_type_id   AND mk.movie_id = t1.id; "], ["SELECT MIN(cn.name) AS from_company,        MIN(mc.note) AS production_note,        MIN(t.title) AS movie_based_on_book FROM company_name AS cn,      company_type AS ct,      keyword AS k,      link_type AS lt,      movie_companies AS mc,      movie_keyword AS mk,      movie_link AS ml,      title AS t WHERE cn.country_code !='[pl]'   AND (cn.name LIKE '20th Century Fox%'        OR cn.name LIKE 'Twentieth Century Fox%')   AND ct.kind != 'production companies'   AND ct.kind IS NOT NULL   AND k.keyword IN ('sequel',                     'revenge',                     'based-on-novel')   AND mc.note IS NOT NULL   AND t.production_year > 1950   AND lt.id = ml.link_type_id   AND ml.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_type_id = ct.id   AND mc.company_id = cn.id   AND ml.movie_id = mk.movie_id   AND ml.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id; "], ["SELECT MIN(cn1.name) AS first_company,        MIN(cn2.name) AS second_company,        MIN(mi_idx1.info) AS first_rating,        MIN(mi_idx2.info) AS second_rating,        MIN(t1.title) AS first_movie,        MIN(t2.title) AS second_movie FROM company_name AS cn1,      company_name AS cn2,      info_type AS it1,      info_type AS it2,      kind_type AS kt1,      kind_type AS kt2,      link_type AS lt,      movie_companies AS mc1,      movie_companies AS mc2,      movie_info_idx AS mi_idx1,      movie_info_idx AS mi_idx2,      movie_link AS ml,      title AS t1,      title AS t2 WHERE cn1.country_code != '[us]'   AND it1.info = 'rating'   AND it2.info = 'rating'   AND kt1.kind IN ('tv series',                    'episode')   AND kt2.kind IN ('tv series',                    'episode')   AND lt.link IN ('sequel',                   'follows',                   'followed by')   AND mi_idx2.info < '3.5'   AND t2.production_year BETWEEN 2000 AND 2010   AND lt.id = ml.link_type_id   AND t1.id = ml.movie_id   AND t2.id = ml.linked_movie_id   AND it1.id = mi_idx1.info_type_id   AND t1.id = mi_idx1.movie_id   AND kt1.id = t1.kind_id   AND cn1.id = mc1.company_id   AND t1.id = mc1.movie_id   AND ml.movie_id = mi_idx1.movie_id   AND ml.movie_id = mc1.movie_id   AND mi_idx1.movie_id = mc1.movie_id   AND it2.id = mi_idx2.info_type_id   AND t2.id = mi_idx2.movie_id   AND kt2.id = t2.kind_id   AND cn2.id = mc2.company_id   AND t2.id = mc2.movie_id   AND ml.linked_movie_id = mi_idx2.movie_id   AND ml.linked_movie_id = mc2.movie_id   AND mi_idx2.movie_id = mc2.movie_id; "], ["SELECT MIN(mi_idx.info) AS rating,        MIN(t.title) AS western_dark_production FROM info_type AS it1,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE it1.info = 'countries'   AND it2.info = 'rating'   AND k.keyword IN ('murder',                     'murder-in-title')   AND kt.kind = 'movie'   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Denish',                   'Norwegian',                   'German',                   'USA',                   'American')   AND mi_idx.info > '6.0'   AND t.production_year > 2010   AND (t.title LIKE '%murder%'        OR t.title LIKE '%Murder%'        OR t.title LIKE '%Mord%')   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mi_idx.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mi_idx.movie_id   AND mi.movie_id = mi_idx.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id; "], ["SELECT MIN(n.name) AS cast_member,        MIN(t.title) AS complete_dynamic_hero_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      char_name AS chn,      cast_info AS ci,      keyword AS k,      kind_type AS kt,      movie_keyword AS mk,      name AS n,      title AS t WHERE cct1.kind = 'cast'   AND cct2.kind LIKE '%complete%'   AND chn.name IS NOT NULL   AND (chn.name LIKE '%man%'        OR chn.name LIKE '%Man%')   AND k.keyword IN ('superhero',                     'marvel-comics',                     'based-on-comic',                     'tv-special',                     'fight',                     'violence',                     'magnet',                     'web',                     'claw',                     'laser')   AND kt.kind = 'movie'   AND t.production_year > 2000   AND kt.id = t.kind_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND t.id = cc.movie_id   AND mk.movie_id = ci.movie_id   AND mk.movie_id = cc.movie_id   AND ci.movie_id = cc.movie_id   AND chn.id = ci.person_role_id   AND n.id = ci.person_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(an1.name) AS actress_pseudonym,        MIN(t.title) AS japanese_movie_dubbed FROM aka_name AS an1,      cast_info AS ci,      company_name AS cn,      movie_companies AS mc,      name AS n1,      role_type AS rt,      title AS t WHERE ci.note ='(voice: English version)'   AND cn.country_code ='[jp]'   AND mc.note LIKE '%(Japan)%'   AND mc.note NOT LIKE '%(USA)%'   AND n1.name LIKE '%Yo%'   AND n1.name NOT LIKE '%Yu%'   AND rt.role ='actress'   AND an1.person_id = n1.id   AND n1.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND ci.role_id = rt.id   AND an1.person_id = ci.person_id   AND ci.movie_id = mc.movie_id; "], ["SELECT MIN(chn.name) AS voiced_char,        MIN(n.name) AS voicing_actress,        MIN(t.title) AS voiced_animation FROM aka_name AS an,      complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      info_type AS it,      info_type AS it3,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      name AS n,      person_info AS pi,      role_type AS rt,      title AS t WHERE cct1.kind ='cast'   AND cct2.kind ='complete+verified'   AND chn.name = 'Queen'   AND ci.note IN ('(voice)',                   '(voice) (uncredited)',                   '(voice: English version)')   AND cn.country_code ='[us]'   AND it.info = 'release dates'   AND it3.info = 'height'   AND k.keyword = 'computer-animation'   AND mi.info LIKE 'USA:%200%'   AND n.gender ='f'   AND n.name LIKE '%An%'   AND rt.role ='actress'   AND t.title = 'Shrek 2'   AND t.production_year BETWEEN 2000 AND 2005   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND t.id = cc.movie_id   AND mc.movie_id = ci.movie_id   AND mc.movie_id = mi.movie_id   AND mc.movie_id = mk.movie_id   AND mc.movie_id = cc.movie_id   AND mi.movie_id = ci.movie_id   AND mi.movie_id = mk.movie_id   AND mi.movie_id = cc.movie_id   AND ci.movie_id = mk.movie_id   AND ci.movie_id = cc.movie_id   AND mk.movie_id = cc.movie_id   AND cn.id = mc.company_id   AND it.id = mi.info_type_id   AND n.id = ci.person_id   AND rt.id = ci.role_id   AND n.id = an.person_id   AND ci.person_id = an.person_id   AND chn.id = ci.person_role_id   AND n.id = pi.person_id   AND ci.person_id = pi.person_id   AND it3.id = pi.info_type_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(chn.name) AS character_name,        MIN(mi_idx.info) AS rating,        MIN(n.name) AS playing_actor,        MIN(t.title) AS complete_hero_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      char_name AS chn,      cast_info AS ci,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE cct1.kind = 'cast'   AND cct2.kind LIKE '%complete%'   AND chn.name IS NOT NULL   AND (chn.name LIKE '%man%'        OR chn.name LIKE '%Man%')   AND it2.info = 'rating'   AND k.keyword IN ('superhero',                     'marvel-comics',                     'based-on-comic',                     'tv-special',                     'fight',                     'violence',                     'magnet',                     'web',                     'claw',                     'laser')   AND kt.kind = 'movie'   AND mi_idx.info > '7.0'   AND t.production_year > 2000   AND kt.id = t.kind_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND t.id = cc.movie_id   AND t.id = mi_idx.movie_id   AND mk.movie_id = ci.movie_id   AND mk.movie_id = cc.movie_id   AND mk.movie_id = mi_idx.movie_id   AND ci.movie_id = cc.movie_id   AND ci.movie_id = mi_idx.movie_id   AND cc.movie_id = mi_idx.movie_id   AND chn.id = ci.person_role_id   AND n.id = ci.person_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id   AND it2.id = mi_idx.info_type_id; "], ["SELECT MIN(an.name) AS cool_actor_pseudonym,        MIN(t.title) AS series_named_after_char FROM aka_name AS an,      cast_info AS ci,      company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      name AS n,      title AS t WHERE cn.country_code ='[us]'   AND k.keyword ='character-name-in-title'   AND an.person_id = n.id   AND n.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND an.person_id = ci.person_id   AND ci.movie_id = mc.movie_id   AND ci.movie_id = mk.movie_id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(t.title) AS movie_title FROM company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      title AS t WHERE cn.country_code ='[us]'   AND k.keyword ='character-name-in-title'   AND cn.id = mc.company_id   AND mc.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(chn.name) AS character,        MIN(t.title) AS russian_mov_with_actor_producer FROM char_name AS chn,      cast_info AS ci,      company_name AS cn,      company_type AS ct,      movie_companies AS mc,      role_type AS rt,      title AS t WHERE ci.note LIKE '%(producer)%'   AND cn.country_code = '[ru]'   AND rt.role = 'actor'   AND t.production_year > 2010   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mc.movie_id   AND chn.id = ci.person_role_id   AND rt.id = ci.role_id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id; "], ["SELECT MIN(cn1.name) AS first_company,        MIN(cn2.name) AS second_company,        MIN(mi_idx1.info) AS first_rating,        MIN(mi_idx2.info) AS second_rating,        MIN(t1.title) AS first_movie,        MIN(t2.title) AS second_movie FROM company_name AS cn1,      company_name AS cn2,      info_type AS it1,      info_type AS it2,      kind_type AS kt1,      kind_type AS kt2,      link_type AS lt,      movie_companies AS mc1,      movie_companies AS mc2,      movie_info_idx AS mi_idx1,      movie_info_idx AS mi_idx2,      movie_link AS ml,      title AS t1,      title AS t2 WHERE cn1.country_code = '[us]'   AND it1.info = 'rating'   AND it2.info = 'rating'   AND kt1.kind IN ('tv series')   AND kt2.kind IN ('tv series')   AND lt.link IN ('sequel',                   'follows',                   'followed by')   AND mi_idx2.info < '3.0'   AND t2.production_year BETWEEN 2005 AND 2008   AND lt.id = ml.link_type_id   AND t1.id = ml.movie_id   AND t2.id = ml.linked_movie_id   AND it1.id = mi_idx1.info_type_id   AND t1.id = mi_idx1.movie_id   AND kt1.id = t1.kind_id   AND cn1.id = mc1.company_id   AND t1.id = mc1.movie_id   AND ml.movie_id = mi_idx1.movie_id   AND ml.movie_id = mc1.movie_id   AND mi_idx1.movie_id = mc1.movie_id   AND it2.id = mi_idx2.info_type_id   AND t2.id = mi_idx2.movie_id   AND kt2.id = t2.kind_id   AND cn2.id = mc2.company_id   AND t2.id = mc2.movie_id   AND ml.linked_movie_id = mi_idx2.movie_id   AND ml.linked_movie_id = mc2.movie_id   AND mi_idx2.movie_id = mc2.movie_id; "], ["SELECT MIN(mc.note) AS production_note,        MIN(t.title) AS movie_title,        MIN(t.production_year) AS movie_year FROM company_type AS ct,      info_type AS it,      movie_companies AS mc,      movie_info_idx AS mi_idx,      title AS t WHERE ct.kind = 'production companies'   AND it.info = 'bottom 10 rank'   AND mc.note NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%'   AND t.production_year BETWEEN 2005 AND 2010   AND ct.id = mc.company_type_id   AND t.id = mc.movie_id   AND t.id = mi_idx.movie_id   AND mc.movie_id = mi_idx.movie_id   AND it.id = mi_idx.info_type_id; "], ["SELECT MIN(t.title) AS american_vhs_movie FROM company_type AS ct,      info_type AS it,      movie_companies AS mc,      movie_info AS mi,      title AS t WHERE ct.kind = 'production companies'   AND mc.note LIKE '%(VHS)%'   AND mc.note LIKE '%(USA)%'   AND mc.note LIKE '%(1994)%'   AND mi.info IN ('USA',                   'America')   AND t.production_year > 2010   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND mc.movie_id = mi.movie_id   AND ct.id = mc.company_type_id   AND it.id = mi.info_type_id; "], ["SELECT MIN(n.name) AS voicing_actress,        MIN(t.title) AS voiced_movie FROM aka_name AS an,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      info_type AS it,      movie_companies AS mc,      movie_info AS mi,      name AS n,      role_type AS rt,      title AS t WHERE ci.note IN ('(voice)',                   '(voice: Japanese version)',                   '(voice) (uncredited)',                   '(voice: English version)')   AND cn.country_code ='[us]'   AND it.info = 'release dates'   AND mc.note IS NOT NULL   AND (mc.note LIKE '%(USA)%'        OR mc.note LIKE '%(worldwide)%')   AND mi.info IS NOT NULL   AND (mi.info LIKE 'Japan:%200%'        OR mi.info LIKE 'USA:%200%')   AND n.gender ='f'   AND n.name LIKE '%Ang%'   AND rt.role ='actress'   AND t.production_year BETWEEN 2005 AND 2009   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND mc.movie_id = ci.movie_id   AND mc.movie_id = mi.movie_id   AND mi.movie_id = ci.movie_id   AND cn.id = mc.company_id   AND it.id = mi.info_type_id   AND n.id = ci.person_id   AND rt.id = ci.role_id   AND n.id = an.person_id   AND ci.person_id = an.person_id   AND chn.id = ci.person_role_id; "], ["SELECT MIN(chn.name) AS uncredited_voiced_character,        MIN(t.title) AS russian_movie FROM char_name AS chn,      cast_info AS ci,      company_name AS cn,      company_type AS ct,      movie_companies AS mc,      role_type AS rt,      title AS t WHERE ci.note LIKE '%(voice)%'   AND ci.note LIKE '%(uncredited)%'   AND cn.country_code = '[ru]'   AND rt.role = 'actor'   AND t.production_year > 2005   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mc.movie_id   AND chn.id = ci.person_role_id   AND rt.id = ci.role_id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(t.title) AS movie_title FROM cast_info AS ci,      info_type AS it1,      info_type AS it2,      movie_info AS mi,      movie_info_idx AS mi_idx,      name AS n,      title AS t WHERE ci.note IN ('(writer)',                   '(head writer)',                   '(written by)',                   '(story)',                   '(story editor)')   AND it1.info = 'genres'   AND it2.info = 'votes'   AND mi.info IN ('Horror',                   'Action',                   'Sci-Fi',                   'Thriller',                   'Crime',                   'War')   AND n.gender = 'm'   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND mi.movie_id = mi_idx.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id; "], ["SELECT MIN(cn.name) AS producing_company,        MIN(lt.link) AS link_type,        MIN(t.title) AS complete_western_sequel FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      company_name AS cn,      company_type AS ct,      keyword AS k,      link_type AS lt,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      movie_link AS ml,      title AS t WHERE cct1.kind IN ('cast',                     'crew')   AND cct2.kind = 'complete'   AND cn.country_code !='[pl]'   AND (cn.name LIKE '%Film%'        OR cn.name LIKE '%Warner%')   AND ct.kind ='production companies'   AND k.keyword ='sequel'   AND lt.link LIKE '%follow%'   AND mc.note IS NULL   AND mi.info IN ('Sweden',                   'Germany',                   'Swedish',                   'German')   AND t.production_year = 1998   AND lt.id = ml.link_type_id   AND ml.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_type_id = ct.id   AND mc.company_id = cn.id   AND mi.movie_id = t.id   AND t.id = cc.movie_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id   AND ml.movie_id = mk.movie_id   AND ml.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id   AND ml.movie_id = mi.movie_id   AND mk.movie_id = mi.movie_id   AND mc.movie_id = mi.movie_id   AND ml.movie_id = cc.movie_id   AND mk.movie_id = cc.movie_id   AND mc.movie_id = cc.movie_id   AND mi.movie_id = cc.movie_id; "], ["SELECT MIN(mi_idx.info) AS rating,        MIN(t.title) AS north_european_dark_production FROM info_type AS it1,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE it1.info = 'countries'   AND it2.info = 'rating'   AND k.keyword IS NOT NULL   AND k.keyword IN ('murder',                     'murder-in-title',                     'blood',                     'violence')   AND kt.kind IN ('movie',                   'episode')   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Danish',                   'Norwegian',                   'German',                   'USA',                   'American')   AND mi_idx.info < '8.5'   AND t.production_year > 2005   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mi_idx.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mi_idx.movie_id   AND mi.movie_id = mi_idx.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id; "], ["SELECT MIN(lt.link) AS link_type,        MIN(t1.title) AS first_movie,        MIN(t2.title) AS second_movie FROM keyword AS k,      link_type AS lt,      movie_keyword AS mk,      movie_link AS ml,      title AS t1,      title AS t2 WHERE k.keyword ='10,000-mile-club'   AND mk.keyword_id = k.id   AND t1.id = mk.movie_id   AND ml.movie_id = t1.id   AND ml.linked_movie_id = t2.id   AND lt.id = ml.link_type_id   AND mk.movie_id = t1.id; "], ["SELECT MIN(at.title) AS aka_title,        MIN(t.title) AS internet_movie_title FROM aka_title AS at,      company_name AS cn,      company_type AS ct,      info_type AS it1,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      title AS t WHERE cn.country_code = '[us]'   AND it1.info = 'release dates'   AND mi.note LIKE '%internet%'   AND t.production_year > 1990   AND t.id = at.movie_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mc.movie_id   AND mk.movie_id = at.movie_id   AND mi.movie_id = mc.movie_id   AND mi.movie_id = at.movie_id   AND mc.movie_id = at.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id; "], ["SELECT MIN(cn.name) AS producing_company,        MIN(miidx.info) AS rating,        MIN(t.title) AS movie_about_winning FROM company_name AS cn,      company_type AS ct,      info_type AS it,      info_type AS it2,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS miidx,      title AS t WHERE cn.country_code ='[us]'   AND ct.kind ='production companies'   AND it.info ='rating'   AND it2.info ='release dates'   AND kt.kind ='movie'   AND t.title != ''   AND (t.title LIKE '%Champion%'        OR t.title LIKE '%Loser%')   AND mi.movie_id = t.id   AND it2.id = mi.info_type_id   AND kt.id = t.kind_id   AND mc.movie_id = t.id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id   AND miidx.movie_id = t.id   AND it.id = miidx.info_type_id   AND mi.movie_id = miidx.movie_id   AND mi.movie_id = mc.movie_id   AND miidx.movie_id = mc.movie_id; "], ["SELECT MIN(chn.name) AS character_name,        MIN(mi_idx.info) AS rating,        MIN(t.title) AS complete_hero_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      char_name AS chn,      cast_info AS ci,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE cct1.kind = 'cast'   AND cct2.kind LIKE '%complete%'   AND chn.name IS NOT NULL   AND (chn.name LIKE '%man%'        OR chn.name LIKE '%Man%')   AND it2.info = 'rating'   AND k.keyword IN ('superhero',                     'marvel-comics',                     'based-on-comic',                     'tv-special',                     'fight',                     'violence',                     'magnet',                     'web',                     'claw',                     'laser')   AND kt.kind = 'movie'   AND t.production_year > 2000   AND kt.id = t.kind_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND t.id = cc.movie_id   AND t.id = mi_idx.movie_id   AND mk.movie_id = ci.movie_id   AND mk.movie_id = cc.movie_id   AND mk.movie_id = mi_idx.movie_id   AND ci.movie_id = cc.movie_id   AND ci.movie_id = mi_idx.movie_id   AND cc.movie_id = mi_idx.movie_id   AND chn.id = ci.person_role_id   AND n.id = ci.person_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id   AND it2.id = mi_idx.info_type_id; "], ["SELECT MIN(kt.kind) AS movie_kind,        MIN(t.title) AS complete_nerdy_internet_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      company_name AS cn,      company_type AS ct,      info_type AS it1,      keyword AS k,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      title AS t WHERE cct1.kind = 'complete+verified'   AND cn.country_code = '[us]'   AND it1.info = 'release dates'   AND k.keyword IN ('nerd',                     'loner',                     'alienation',                     'dignity')   AND kt.kind IN ('movie')   AND mi.note LIKE '%internet%'   AND mi.info LIKE 'USA:% 200%'   AND t.production_year > 2000   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mc.movie_id   AND t.id = cc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mc.movie_id   AND mk.movie_id = cc.movie_id   AND mi.movie_id = mc.movie_id   AND mi.movie_id = cc.movie_id   AND mc.movie_id = cc.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id   AND cct1.id = cc.status_id; "], ["SELECT MIN(cn.name) AS from_company,        MIN(lt.link) AS movie_link_type,        MIN(t.title) AS sequel_movie FROM company_name AS cn,      company_type AS ct,      keyword AS k,      link_type AS lt,      movie_companies AS mc,      movie_keyword AS mk,      movie_link AS ml,      title AS t WHERE cn.country_code !='[pl]'   AND (cn.name LIKE '%Film%'        OR cn.name LIKE '%Warner%')   AND ct.kind ='production companies'   AND k.keyword ='sequel'   AND lt.link LIKE '%follows%'   AND mc.note IS NULL   AND t.production_year = 1998   AND t.title LIKE '%Money%'   AND lt.id = ml.link_type_id   AND ml.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_type_id = ct.id   AND mc.company_id = cn.id   AND ml.movie_id = mk.movie_id   AND ml.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id; "], ["SELECT MIN(an.name) AS alternative_name,        MIN(chn.name) AS voiced_character_name,        MIN(n.name) AS voicing_actress,        MIN(t.title) AS american_movie FROM aka_name AS an,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      movie_companies AS mc,      name AS n,      role_type AS rt,      title AS t WHERE ci.note IN ('(voice)',                   '(voice: Japanese version)',                   '(voice) (uncredited)',                   '(voice: English version)')   AND cn.country_code ='[us]'   AND n.gender ='f'   AND n.name LIKE '%An%'   AND rt.role ='actress'   AND ci.movie_id = t.id   AND t.id = mc.movie_id   AND ci.movie_id = mc.movie_id   AND mc.company_id = cn.id   AND ci.role_id = rt.id   AND n.id = ci.person_id   AND chn.id = ci.person_role_id   AND an.person_id = n.id   AND an.person_id = ci.person_id; "], ["SELECT MIN(n.name) AS of_person,        MIN(t.title) AS biography_movie FROM aka_name AS an,      cast_info AS ci,      info_type AS it,      link_type AS lt,      movie_link AS ml,      name AS n,      person_info AS pi,      title AS t WHERE an.name LIKE '%a%'   AND it.info ='mini biography'   AND lt.link ='features'   AND n.name_pcode_cf LIKE 'D%'   AND n.gender='m'   AND pi.note ='Volker Boehm'   AND t.production_year BETWEEN 1980 AND 1984   AND n.id = an.person_id   AND n.id = pi.person_id   AND ci.person_id = n.id   AND t.id = ci.movie_id   AND ml.linked_movie_id = t.id   AND lt.id = ml.link_type_id   AND it.id = pi.info_type_id   AND pi.person_id = an.person_id   AND pi.person_id = ci.person_id   AND an.person_id = ci.person_id   AND ci.movie_id = ml.linked_movie_id; "], ["SELECT MIN(n.name) AS member_in_charnamed_movie,        MIN(n.name) AS a1 FROM cast_info AS ci,      company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      name AS n,      title AS t WHERE k.keyword ='character-name-in-title'   AND n.name LIKE 'X%'   AND n.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND ci.movie_id = mc.movie_id   AND ci.movie_id = mk.movie_id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(kt.kind) AS movie_kind,        MIN(t.title) AS complete_us_internet_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      company_name AS cn,      company_type AS ct,      info_type AS it1,      keyword AS k,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      title AS t WHERE cct1.kind = 'complete+verified'   AND cn.country_code = '[us]'   AND it1.info = 'release dates'   AND kt.kind IN ('movie')   AND mi.note LIKE '%internet%'   AND mi.info IS NOT NULL   AND (mi.info LIKE 'USA:% 199%'        OR mi.info LIKE 'USA:% 200%')   AND t.production_year > 2000   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mc.movie_id   AND t.id = cc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mc.movie_id   AND mk.movie_id = cc.movie_id   AND mi.movie_id = mc.movie_id   AND mi.movie_id = cc.movie_id   AND mc.movie_id = cc.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id   AND cct1.id = cc.status_id; "], ["SELECT MIN(t.title) AS american_movie FROM company_type AS ct,      info_type AS it,      movie_companies AS mc,      movie_info AS mi,      title AS t WHERE ct.kind = 'production companies'   AND mc.note NOT LIKE '%(TV)%'   AND mc.note LIKE '%(USA)%'   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Denish',                   'Norwegian',                   'German',                   'USA',                   'American')   AND t.production_year > 1990   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND mc.movie_id = mi.movie_id   AND ct.id = mc.company_type_id   AND it.id = mi.info_type_id; "], ["SELECT MIN(chn.name) AS voiced_char,        MIN(n.name) AS voicing_actress,        MIN(t.title) AS voiced_animation FROM aka_name AS an,      complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      info_type AS it,      info_type AS it3,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      name AS n,      person_info AS pi,      role_type AS rt,      title AS t WHERE cct1.kind ='cast'   AND cct2.kind ='complete+verified'   AND ci.note IN ('(voice)',                   '(voice: Japanese version)',                   '(voice) (uncredited)',                   '(voice: English version)')   AND cn.country_code ='[us]'   AND it.info = 'release dates'   AND it3.info = 'trivia'   AND k.keyword = 'computer-animation'   AND mi.info IS NOT NULL   AND (mi.info LIKE 'Japan:%200%'        OR mi.info LIKE 'USA:%200%')   AND n.gender ='f'   AND n.name LIKE '%An%'   AND rt.role ='actress'   AND t.production_year BETWEEN 2000 AND 2010   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND t.id = cc.movie_id   AND mc.movie_id = ci.movie_id   AND mc.movie_id = mi.movie_id   AND mc.movie_id = mk.movie_id   AND mc.movie_id = cc.movie_id   AND mi.movie_id = ci.movie_id   AND mi.movie_id = mk.movie_id   AND mi.movie_id = cc.movie_id   AND ci.movie_id = mk.movie_id   AND ci.movie_id = cc.movie_id   AND mk.movie_id = cc.movie_id   AND cn.id = mc.company_id   AND it.id = mi.info_type_id   AND n.id = ci.person_id   AND rt.id = ci.role_id   AND n.id = an.person_id   AND ci.person_id = an.person_id   AND chn.id = ci.person_role_id   AND n.id = pi.person_id   AND ci.person_id = pi.person_id   AND it3.id = pi.info_type_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(cn.name) AS producing_company,        MIN(miidx.info) AS rating,        MIN(t.title) AS movie FROM company_name AS cn,      company_type AS ct,      info_type AS it,      info_type AS it2,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS miidx,      title AS t WHERE cn.country_code ='[us]'   AND ct.kind ='production companies'   AND it.info ='rating'   AND it2.info ='release dates'   AND kt.kind ='movie'   AND mi.movie_id = t.id   AND it2.id = mi.info_type_id   AND kt.id = t.kind_id   AND mc.movie_id = t.id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id   AND miidx.movie_id = t.id   AND it.id = miidx.info_type_id   AND mi.movie_id = miidx.movie_id   AND mi.movie_id = mc.movie_id   AND miidx.movie_id = mc.movie_id; "], ["SELECT MIN(n.name) AS voicing_actress,        MIN(t.title) AS jap_engl_voiced_movie FROM aka_name AS an,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      info_type AS it,      movie_companies AS mc,      movie_info AS mi,      name AS n,      role_type AS rt,      title AS t WHERE ci.note IN ('(voice)',                   '(voice: Japanese version)',                   '(voice) (uncredited)',                   '(voice: English version)')   AND cn.country_code ='[us]'   AND it.info = 'release dates'   AND mi.info IS NOT NULL   AND (mi.info LIKE 'Japan:%200%'        OR mi.info LIKE 'USA:%200%')   AND n.gender ='f'   AND n.name LIKE '%An%'   AND rt.role ='actress'   AND t.production_year > 2000   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND mc.movie_id = ci.movie_id   AND mc.movie_id = mi.movie_id   AND mi.movie_id = ci.movie_id   AND cn.id = mc.company_id   AND it.id = mi.info_type_id   AND n.id = ci.person_id   AND rt.id = ci.role_id   AND n.id = an.person_id   AND ci.person_id = an.person_id   AND chn.id = ci.person_role_id; "], ["SELECT MIN(k.keyword) AS movie_keyword,        MIN(n.name) AS actor_name,        MIN(t.title) AS marvel_movie FROM cast_info AS ci,      keyword AS k,      movie_keyword AS mk,      name AS n,      title AS t WHERE k.keyword = 'marvel-cinematic-universe'   AND n.name LIKE '%Downey%Robert%'   AND t.production_year > 2010   AND k.id = mk.keyword_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mk.movie_id   AND n.id = ci.person_id; "], ["SELECT MIN(n.name) AS member_in_charnamed_movie,        MIN(n.name) AS a1 FROM cast_info AS ci,      company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      name AS n,      title AS t WHERE k.keyword ='character-name-in-title'   AND n.name LIKE 'Z%'   AND n.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND ci.movie_id = mc.movie_id   AND ci.movie_id = mk.movie_id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(t.title) AS complete_downey_ironman_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      char_name AS chn,      cast_info AS ci,      keyword AS k,      kind_type AS kt,      movie_keyword AS mk,      name AS n,      title AS t WHERE cct1.kind = 'cast'   AND cct2.kind LIKE '%complete%'   AND chn.name NOT LIKE '%Sherlock%'   AND (chn.name LIKE '%Tony%Stark%'        OR chn.name LIKE '%Iron%Man%')   AND k.keyword IN ('superhero',                     'sequel',                     'second-part',                     'marvel-comics',                     'based-on-comic',                     'tv-special',                     'fight',                     'violence')   AND kt.kind = 'movie'   AND n.name LIKE '%Downey%Robert%'   AND t.production_year > 2000   AND kt.id = t.kind_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND t.id = cc.movie_id   AND mk.movie_id = ci.movie_id   AND mk.movie_id = cc.movie_id   AND ci.movie_id = cc.movie_id   AND chn.id = ci.person_role_id   AND n.id = ci.person_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(t.title) AS movie_title FROM cast_info AS ci,      info_type AS it1,      info_type AS it2,      movie_info AS mi,      movie_info_idx AS mi_idx,      name AS n,      title AS t WHERE ci.note IN ('(producer)',                   '(executive producer)')   AND it1.info = 'budget'   AND it2.info = 'votes'   AND n.gender = 'm'   AND n.name LIKE '%Tim%'   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND mi.movie_id = mi_idx.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id; "], ["SELECT MIN(a1.name) AS writer_pseudo_name,        MIN(t.title) AS movie_title FROM aka_name AS a1,      cast_info AS ci,      company_name AS cn,      movie_companies AS mc,      name AS n1,      role_type AS rt,      title AS t WHERE cn.country_code ='[us]'   AND rt.role ='writer'   AND a1.person_id = n1.id   AND n1.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND ci.role_id = rt.id   AND a1.person_id = ci.person_id   AND ci.movie_id = mc.movie_id; "], ["SELECT MIN(cn.name) AS movie_company,        MIN(mi_idx.info) AS rating,        MIN(t.title) AS western_violent_movie FROM company_name AS cn,      company_type AS ct,      info_type AS it1,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE cn.country_code != '[us]'   AND it1.info = 'countries'   AND it2.info = 'rating'   AND k.keyword IN ('murder',                     'murder-in-title',                     'blood',                     'violence')   AND kt.kind IN ('movie',                   'episode')   AND mc.note NOT LIKE '%(USA)%'   AND mc.note LIKE '%(200%)%'   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Danish',                   'Norwegian',                   'German',                   'USA',                   'American')   AND mi_idx.info < '8.5'   AND t.production_year > 2005   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mi_idx.movie_id   AND t.id = mc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mi_idx.movie_id   AND mk.movie_id = mc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mc.movie_id   AND mc.movie_id = mi_idx.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND ct.id = mc.company_type_id   AND cn.id = mc.company_id; "], ["SELECT MIN(cn.name) AS movie_company,        MIN(mi_idx.info) AS rating,        MIN(t.title) AS complete_euro_dark_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      company_name AS cn,      company_type AS ct,      info_type AS it1,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE cct1.kind = 'crew'   AND cct2.kind != 'complete+verified'   AND cn.country_code != '[us]'   AND it1.info = 'countries'   AND it2.info = 'rating'   AND k.keyword IN ('murder',                     'murder-in-title',                     'blood',                     'violence')   AND kt.kind IN ('movie',                   'episode')   AND mc.note NOT LIKE '%(USA)%'   AND mc.note LIKE '%(200%)%'   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Danish',                   'Norwegian',                   'German',                   'USA',                   'American')   AND mi_idx.info < '8.5'   AND t.production_year > 2000   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mi_idx.movie_id   AND t.id = mc.movie_id   AND t.id = cc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mi_idx.movie_id   AND mk.movie_id = mc.movie_id   AND mk.movie_id = cc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mc.movie_id   AND mi.movie_id = cc.movie_id   AND mc.movie_id = mi_idx.movie_id   AND mc.movie_id = cc.movie_id   AND mi_idx.movie_id = cc.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND ct.id = mc.company_type_id   AND cn.id = mc.company_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(cn.name) AS movie_company,        MIN(mi_idx.info) AS rating,        MIN(t.title) AS western_violent_movie FROM company_name AS cn,      company_type AS ct,      info_type AS it1,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE cn.country_code != '[us]'   AND it1.info = 'countries'   AND it2.info = 'rating'   AND k.keyword IN ('murder',                     'murder-in-title',                     'blood',                     'violence')   AND kt.kind IN ('movie',                   'episode')   AND mc.note NOT LIKE '%(USA)%'   AND mc.note LIKE '%(200%)%'   AND mi.info IN ('Germany',                   'German',                   'USA',                   'American')   AND mi_idx.info < '7.0'   AND t.production_year > 2009   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mi_idx.movie_id   AND t.id = mc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mi_idx.movie_id   AND mk.movie_id = mc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mc.movie_id   AND mc.movie_id = mi_idx.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND ct.id = mc.company_type_id   AND cn.id = mc.company_id; "], ["SELECT MIN(n.name) AS member_in_charnamed_movie FROM cast_info AS ci,      company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      name AS n,      title AS t WHERE k.keyword ='character-name-in-title'   AND n.name LIKE '%B%'   AND n.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND ci.movie_id = mc.movie_id   AND ci.movie_id = mk.movie_id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(mc.note) AS production_note,        MIN(t.title) AS movie_title,        MIN(t.production_year) AS movie_year FROM company_type AS ct,      info_type AS it,      movie_companies AS mc,      movie_info_idx AS mi_idx,      title AS t WHERE ct.kind = 'production companies'   AND it.info = 'top 250 rank'   AND mc.note NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%'   AND (mc.note LIKE '%(co-production)%')   AND t.production_year >2010   AND ct.id = mc.company_type_id   AND t.id = mc.movie_id   AND t.id = mi_idx.movie_id   AND mc.movie_id = mi_idx.movie_id   AND it.id = mi_idx.info_type_id; "], ["SELECT MIN(chn.name) AS character_name,        MIN(mi_idx.info) AS rating,        MIN(t.title) AS complete_hero_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      char_name AS chn,      cast_info AS ci,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE cct1.kind = 'cast'   AND cct2.kind LIKE '%complete%'   AND chn.name IS NOT NULL   AND (chn.name LIKE '%man%'        OR chn.name LIKE '%Man%')   AND it2.info = 'rating'   AND k.keyword IN ('superhero',                     'marvel-comics',                     'based-on-comic',                     'fight')   AND kt.kind = 'movie'   AND mi_idx.info > '8.0'   AND t.production_year > 2005   AND kt.id = t.kind_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND t.id = cc.movie_id   AND t.id = mi_idx.movie_id   AND mk.movie_id = ci.movie_id   AND mk.movie_id = cc.movie_id   AND mk.movie_id = mi_idx.movie_id   AND ci.movie_id = cc.movie_id   AND ci.movie_id = mi_idx.movie_id   AND cc.movie_id = mi_idx.movie_id   AND chn.id = ci.person_role_id   AND n.id = ci.person_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id   AND it2.id = mi_idx.info_type_id; "], ["SELECT MIN(t.title) AS movie_title FROM company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      title AS t WHERE cn.country_code ='[sm]'   AND k.keyword ='character-name-in-title'   AND cn.id = mc.company_id   AND mc.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(cn1.name) AS first_company,        MIN(cn2.name) AS second_company,        MIN(mi_idx1.info) AS first_rating,        MIN(mi_idx2.info) AS second_rating,        MIN(t1.title) AS first_movie,        MIN(t2.title) AS second_movie FROM company_name AS cn1,      company_name AS cn2,      info_type AS it1,      info_type AS it2,      kind_type AS kt1,      kind_type AS kt2,      link_type AS lt,      movie_companies AS mc1,      movie_companies AS mc2,      movie_info_idx AS mi_idx1,      movie_info_idx AS mi_idx2,      movie_link AS ml,      title AS t1,      title AS t2 WHERE cn1.country_code = '[nl]'   AND it1.info = 'rating'   AND it2.info = 'rating'   AND kt1.kind IN ('tv series')   AND kt2.kind IN ('tv series')   AND lt.link LIKE '%follow%'   AND mi_idx2.info < '3.0'   AND t2.production_year = 2007   AND lt.id = ml.link_type_id   AND t1.id = ml.movie_id   AND t2.id = ml.linked_movie_id   AND it1.id = mi_idx1.info_type_id   AND t1.id = mi_idx1.movie_id   AND kt1.id = t1.kind_id   AND cn1.id = mc1.company_id   AND t1.id = mc1.movie_id   AND ml.movie_id = mi_idx1.movie_id   AND ml.movie_id = mc1.movie_id   AND mi_idx1.movie_id = mc1.movie_id   AND it2.id = mi_idx2.info_type_id   AND t2.id = mi_idx2.movie_id   AND kt2.id = t2.kind_id   AND cn2.id = mc2.company_id   AND t2.id = mc2.movie_id   AND ml.linked_movie_id = mi_idx2.movie_id   AND ml.linked_movie_id = mc2.movie_id   AND mi_idx2.movie_id = mc2.movie_id; "], ["SELECT MIN(n.name) AS member_in_charnamed_american_movie,        MIN(n.name) AS a1 FROM cast_info AS ci,      company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      name AS n,      title AS t WHERE cn.country_code ='[us]'   AND k.keyword ='character-name-in-title'   AND n.name LIKE 'B%'   AND n.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND ci.movie_id = mc.movie_id   AND ci.movie_id = mk.movie_id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(t.title) AS movie_title FROM company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      title AS t WHERE cn.country_code ='[nl]'   AND k.keyword ='character-name-in-title'   AND cn.id = mc.company_id   AND mc.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(n.name) AS writer,        MIN(t.title) AS violent_liongate_movie FROM cast_info AS ci,      company_name AS cn,      info_type AS it1,      info_type AS it2,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE ci.note IN ('(writer)',                   '(head writer)',                   '(written by)',                   '(story)',                   '(story editor)')   AND cn.name LIKE 'Lionsgate%'   AND it1.info = 'genres'   AND it2.info = 'votes'   AND k.keyword IN ('murder',                     'violence',                     'blood',                     'gore',                     'death',                     'female-nudity',                     'hospital')   AND mi.info IN ('Horror',                   'Action',                   'Sci-Fi',                   'Thriller',                   'Crime',                   'War')   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND t.id = mc.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND ci.movie_id = mk.movie_id   AND ci.movie_id = mc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mk.movie_id   AND mi.movie_id = mc.movie_id   AND mi_idx.movie_id = mk.movie_id   AND mi_idx.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND k.id = mk.keyword_id   AND cn.id = mc.company_id; "], ["SELECT MIN(t.title) AS movie_title FROM keyword AS k,      movie_info AS mi,      movie_keyword AS mk,      title AS t WHERE k.keyword LIKE '%sequel%'   AND mi.info IN ('Bulgaria')   AND t.production_year > 2010   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND mk.movie_id = mi.movie_id   AND k.id = mk.keyword_id; "], ["SELECT MIN(mc.note) AS production_note,        MIN(t.title) AS movie_title,        MIN(t.production_year) AS movie_year FROM company_type AS ct,      info_type AS it,      movie_companies AS mc,      movie_info_idx AS mi_idx,      title AS t WHERE ct.kind = 'production companies'   AND it.info = 'bottom 10 rank'   AND mc.note NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%'   AND t.production_year >2000   AND ct.id = mc.company_type_id   AND t.id = mc.movie_id   AND t.id = mi_idx.movie_id   AND mc.movie_id = mi_idx.movie_id   AND it.id = mi_idx.info_type_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(n.name) AS male_writer,        MIN(t.title) AS violent_movie_title FROM cast_info AS ci,      info_type AS it1,      info_type AS it2,      keyword AS k,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE ci.note IN ('(writer)',                   '(head writer)',                   '(written by)',                   '(story)',                   '(story editor)')   AND it1.info = 'genres'   AND it2.info = 'votes'   AND k.keyword IN ('murder',                     'blood',                     'gore',                     'death',                     'female-nudity')   AND mi.info = 'Horror'   AND n.gender = 'm'   AND t.production_year > 2010   AND t.title LIKE 'Vampire%'   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND ci.movie_id = mk.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mk.movie_id   AND mi_idx.movie_id = mk.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND k.id = mk.keyword_id; "], ["SELECT MIN(n.name) AS of_person,        MIN(t.title) AS biography_movie FROM aka_name AS an,      cast_info AS ci,      info_type AS it,      link_type AS lt,      movie_link AS ml,      name AS n,      person_info AS pi,      title AS t WHERE an.name LIKE '%a%'   AND it.info ='mini biography'   AND lt.link ='features'   AND n.name_pcode_cf BETWEEN 'A' AND 'F'   AND (n.gender='m'        OR (n.gender = 'f'            AND n.name LIKE 'B%'))   AND pi.note ='Volker Boehm'   AND t.production_year BETWEEN 1980 AND 1995   AND n.id = an.person_id   AND n.id = pi.person_id   AND ci.person_id = n.id   AND t.id = ci.movie_id   AND ml.linked_movie_id = t.id   AND lt.id = ml.link_type_id   AND it.id = pi.info_type_id   AND pi.person_id = an.person_id   AND pi.person_id = ci.person_id   AND an.person_id = ci.person_id   AND ci.movie_id = ml.linked_movie_id; "], ["SELECT MIN(t.title) AS complete_downey_ironman_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      char_name AS chn,      cast_info AS ci,      keyword AS k,      kind_type AS kt,      movie_keyword AS mk,      name AS n,      title AS t WHERE cct1.kind = 'cast'   AND cct2.kind LIKE '%complete%'   AND chn.name NOT LIKE '%Sherlock%'   AND (chn.name LIKE '%Tony%Stark%'        OR chn.name LIKE '%Iron%Man%')   AND k.keyword IN ('superhero',                     'sequel',                     'second-part',                     'marvel-comics',                     'based-on-comic',                     'tv-special',                     'fight',                     'violence')   AND kt.kind = 'movie'   AND t.production_year > 1950   AND kt.id = t.kind_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND t.id = cc.movie_id   AND mk.movie_id = ci.movie_id   AND mk.movie_id = cc.movie_id   AND ci.movie_id = cc.movie_id   AND chn.id = ci.person_role_id   AND n.id = ci.person_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(mi.info) AS release_date,        MIN(t.title) AS youtube_movie FROM aka_title AS at,      company_name AS cn,      company_type AS ct,      info_type AS it1,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      title AS t WHERE cn.country_code = '[us]'   AND cn.name = 'YouTube'   AND it1.info = 'release dates'   AND mc.note LIKE '%(200%)%'   AND mc.note LIKE '%(worldwide)%'   AND mi.note LIKE '%internet%'   AND mi.info LIKE 'USA:% 200%'   AND t.production_year BETWEEN 2005 AND 2010   AND t.id = at.movie_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mc.movie_id   AND mk.movie_id = at.movie_id   AND mi.movie_id = mc.movie_id   AND mi.movie_id = at.movie_id   AND mc.movie_id = at.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id; "], ["SELECT MIN(cn.name) AS from_company,        MIN(lt.link) AS movie_link_type,        MIN(t.title) AS non_polish_sequel_movie FROM company_name AS cn,      company_type AS ct,      keyword AS k,      link_type AS lt,      movie_companies AS mc,      movie_keyword AS mk,      movie_link AS ml,      title AS t WHERE cn.country_code !='[pl]'   AND (cn.name LIKE '%Film%'        OR cn.name LIKE '%Warner%')   AND ct.kind ='production companies'   AND k.keyword ='sequel'   AND lt.link LIKE '%follow%'   AND mc.note IS NULL   AND t.production_year BETWEEN 1950 AND 2000   AND lt.id = ml.link_type_id   AND ml.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_type_id = ct.id   AND mc.company_id = cn.id   AND ml.movie_id = mk.movie_id   AND ml.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id; "], ["SELECT MIN(cn.name) AS company_name,        MIN(lt.link) AS link_type,        MIN(t.title) AS western_follow_up FROM company_name AS cn,      company_type AS ct,      keyword AS k,      link_type AS lt,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      movie_link AS ml,      title AS t WHERE cn.country_code !='[pl]'   AND (cn.name LIKE '%Film%'        OR cn.name LIKE '%Warner%')   AND ct.kind ='production companies'   AND k.keyword ='sequel'   AND lt.link LIKE '%follow%'   AND mc.note IS NULL   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Denish',                   'Norwegian',                   'German',                   'English')   AND t.production_year BETWEEN 1950 AND 2010   AND lt.id = ml.link_type_id   AND ml.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_type_id = ct.id   AND mc.company_id = cn.id   AND mi.movie_id = t.id   AND ml.movie_id = mk.movie_id   AND ml.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id   AND ml.movie_id = mi.movie_id   AND mk.movie_id = mi.movie_id   AND mc.movie_id = mi.movie_id; "], ["SELECT MIN(mi_idx.info) AS rating,        MIN(t.title) AS movie_title FROM info_type AS it,      keyword AS k,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE it.info ='rating'   AND k.keyword LIKE '%sequel%'   AND mi_idx.info > '9.0'   AND t.production_year > 2010   AND t.id = mi_idx.movie_id   AND t.id = mk.movie_id   AND mk.movie_id = mi_idx.movie_id   AND k.id = mk.keyword_id   AND it.id = mi_idx.info_type_id; "], ["SELECT MIN(mi.info) AS release_date,        MIN(t.title) AS internet_movie FROM aka_title AS at,      company_name AS cn,      company_type AS ct,      info_type AS it1,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      title AS t WHERE cn.country_code = '[us]'   AND it1.info = 'release dates'   AND mc.note LIKE '%(200%)%'   AND mc.note LIKE '%(worldwide)%'   AND mi.note LIKE '%internet%'   AND mi.info LIKE 'USA:% 200%'   AND t.production_year > 2000   AND t.id = at.movie_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mc.movie_id   AND mk.movie_id = at.movie_id   AND mi.movie_id = mc.movie_id   AND mi.movie_id = at.movie_id   AND mc.movie_id = at.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id; "], ["SELECT MIN(n.name) AS voicing_actress,        MIN(t.title) AS jap_engl_voiced_movie FROM aka_name AS an,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      info_type AS it,      movie_companies AS mc,      movie_info AS mi,      name AS n,      role_type AS rt,      title AS t WHERE ci.note IN ('(voice)',                   '(voice: Japanese version)',                   '(voice) (uncredited)',                   '(voice: English version)')   AND cn.country_code ='[us]'   AND it.info = 'release dates'   AND n.gender ='f'   AND rt.role ='actress'   AND t.production_year > 2000   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND mc.movie_id = ci.movie_id   AND mc.movie_id = mi.movie_id   AND mi.movie_id = ci.movie_id   AND cn.id = mc.company_id   AND it.id = mi.info_type_id   AND n.id = ci.person_id   AND rt.id = ci.role_id   AND n.id = an.person_id   AND ci.person_id = an.person_id   AND chn.id = ci.person_role_id; "], ["SELECT MIN(k.keyword) AS movie_keyword,        MIN(n.name) AS actor_name,        MIN(t.title) AS marvel_movie FROM cast_info AS ci,      keyword AS k,      movie_keyword AS mk,      name AS n,      title AS t WHERE k.keyword = 'marvel-cinematic-universe'   AND n.name LIKE '%Downey%Robert%'   AND t.production_year > 2014   AND k.id = mk.keyword_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mk.movie_id   AND n.id = ci.person_id; "], ["SELECT MIN(mc.note) AS production_note,        MIN(t.title) AS movie_title,        MIN(t.production_year) AS movie_year FROM company_type AS ct,      info_type AS it,      movie_companies AS mc,      movie_info_idx AS mi_idx,      title AS t WHERE ct.kind = 'production companies'   AND it.info = 'top 250 rank'   AND mc.note NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%'   AND (mc.note LIKE '%(co-production)%'        OR mc.note LIKE '%(presents)%')   AND ct.id = mc.company_type_id   AND t.id = mc.movie_id   AND t.id = mi_idx.movie_id   AND mc.movie_id = mi_idx.movie_id   AND it.id = mi_idx.info_type_id; "], ["SELECT MIN(an.name) AS acress_pseudonym,        MIN(t.title) AS japanese_anime_movie FROM aka_name AS an,      cast_info AS ci,      company_name AS cn,      movie_companies AS mc,      name AS n,      role_type AS rt,      title AS t WHERE ci.note ='(voice: English version)'   AND cn.country_code ='[jp]'   AND mc.note LIKE '%(Japan)%'   AND mc.note NOT LIKE '%(USA)%'   AND (mc.note LIKE '%(2006)%'        OR mc.note LIKE '%(2007)%')   AND n.name LIKE '%Yo%'   AND n.name NOT LIKE '%Yu%'   AND rt.role ='actress'   AND t.production_year BETWEEN 2006 AND 2007   AND (t.title LIKE 'One Piece%'        OR t.title LIKE 'Dragon Ball Z%')   AND an.person_id = n.id   AND n.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND ci.role_id = rt.id   AND an.person_id = ci.person_id   AND ci.movie_id = mc.movie_id; "], ["SELECT MIN(cn.name) AS producing_company,        MIN(lt.link) AS link_type,        MIN(t.title) AS complete_western_sequel FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      company_name AS cn,      company_type AS ct,      keyword AS k,      link_type AS lt,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      movie_link AS ml,      title AS t WHERE cct1.kind IN ('cast',                     'crew')   AND cct2.kind = 'complete'   AND cn.country_code !='[pl]'   AND (cn.name LIKE '%Film%'        OR cn.name LIKE '%Warner%')   AND ct.kind ='production companies'   AND k.keyword ='sequel'   AND lt.link LIKE '%follow%'   AND mc.note IS NULL   AND mi.info IN ('Sweden',                   'Germany',                   'Swedish',                   'German')   AND t.production_year BETWEEN 1950 AND 2000   AND lt.id = ml.link_type_id   AND ml.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_type_id = ct.id   AND mc.company_id = cn.id   AND mi.movie_id = t.id   AND t.id = cc.movie_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id   AND ml.movie_id = mk.movie_id   AND ml.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id   AND ml.movie_id = mi.movie_id   AND mk.movie_id = mi.movie_id   AND mc.movie_id = mi.movie_id   AND ml.movie_id = cc.movie_id   AND mk.movie_id = cc.movie_id   AND mc.movie_id = cc.movie_id   AND mi.movie_id = cc.movie_id; "], ["SELECT MIN(chn.name) AS voiced_char_name,        MIN(n.name) AS voicing_actress_name,        MIN(t.title) AS voiced_action_movie_jap_eng FROM aka_name AS an,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      info_type AS it,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      name AS n,      role_type AS rt,      title AS t WHERE ci.note IN ('(voice)',                   '(voice: Japanese version)',                   '(voice) (uncredited)',                   '(voice: English version)')   AND cn.country_code ='[us]'   AND it.info = 'release dates'   AND k.keyword IN ('hero',                     'martial-arts',                     'hand-to-hand-combat')   AND mi.info IS NOT NULL   AND (mi.info LIKE 'Japan:%201%'        OR mi.info LIKE 'USA:%201%')   AND n.gender ='f'   AND n.name LIKE '%An%'   AND rt.role ='actress'   AND t.production_year > 2010   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND mc.movie_id = ci.movie_id   AND mc.movie_id = mi.movie_id   AND mc.movie_id = mk.movie_id   AND mi.movie_id = ci.movie_id   AND mi.movie_id = mk.movie_id   AND ci.movie_id = mk.movie_id   AND cn.id = mc.company_id   AND it.id = mi.info_type_id   AND n.id = ci.person_id   AND rt.id = ci.role_id   AND n.id = an.person_id   AND ci.person_id = an.person_id   AND chn.id = ci.person_role_id   AND k.id = mk.keyword_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(n.name) AS male_writer,        MIN(t.title) AS violent_movie_title FROM cast_info AS ci,      info_type AS it1,      info_type AS it2,      keyword AS k,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE ci.note IN ('(writer)',                   '(head writer)',                   '(written by)',                   '(story)',                   '(story editor)')   AND it1.info = 'genres'   AND it2.info = 'votes'   AND k.keyword IN ('murder',                     'violence',                     'blood',                     'gore',                     'death',                     'female-nudity',                     'hospital')   AND mi.info IN ('Horror',                   'Action',                   'Sci-Fi',                   'Thriller',                   'Crime',                   'War')   AND n.gender = 'm'   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND ci.movie_id = mk.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mk.movie_id   AND mi_idx.movie_id = mk.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND k.id = mk.keyword_id; "], ["SELECT MIN(t.title) AS movie_title FROM company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      title AS t WHERE cn.country_code ='[de]'   AND k.keyword ='character-name-in-title'   AND cn.id = mc.company_id   AND mc.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(mi.info) AS release_date,        MIN(miidx.info) AS rating,        MIN(t.title) AS german_movie FROM company_name AS cn,      company_type AS ct,      info_type AS it,      info_type AS it2,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS miidx,      title AS t WHERE cn.country_code ='[de]'   AND ct.kind ='production companies'   AND it.info ='rating'   AND it2.info ='release dates'   AND kt.kind ='movie'   AND mi.movie_id = t.id   AND it2.id = mi.info_type_id   AND kt.id = t.kind_id   AND mc.movie_id = t.id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id   AND miidx.movie_id = t.id   AND it.id = miidx.info_type_id   AND mi.movie_id = miidx.movie_id   AND mi.movie_id = mc.movie_id   AND miidx.movie_id = mc.movie_id; "], ["SELECT MIN(cn.name) AS movie_company,        MIN(mi_idx.info) AS rating,        MIN(t.title) AS mainstream_movie FROM company_name AS cn,      company_type AS ct,      info_type AS it1,      info_type AS it2,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      title AS t WHERE cn.country_code = '[us]'   AND ct.kind = 'production companies'   AND it1.info = 'genres'   AND it2.info = 'rating'   AND mi.info IN ('Drama',                   'Horror',                   'Western',                   'Family')   AND mi_idx.info > '7.0'   AND t.production_year BETWEEN 2000 AND 2010   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND mi.info_type_id = it1.id   AND mi_idx.info_type_id = it2.id   AND t.id = mc.movie_id   AND ct.id = mc.company_type_id   AND cn.id = mc.company_id   AND mc.movie_id = mi.movie_id   AND mc.movie_id = mi_idx.movie_id   AND mi.movie_id = mi_idx.movie_id; "], ["SELECT MIN(cn.name) AS movie_company,        MIN(mi_idx.info) AS rating,        MIN(t.title) AS western_violent_movie FROM company_name AS cn,      company_type AS ct,      info_type AS it1,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE cn.country_code != '[us]'   AND it1.info = 'countries'   AND it2.info = 'rating'   AND k.keyword IN ('murder',                     'murder-in-title',                     'blood',                     'violence')   AND kt.kind IN ('movie',                   'episode')   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Danish',                   'Norwegian',                   'German',                   'USA',                   'American')   AND mi_idx.info < '8.5'   AND t.production_year > 2005   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mi_idx.movie_id   AND t.id = mc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mi_idx.movie_id   AND mk.movie_id = mc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mc.movie_id   AND mc.movie_id = mi_idx.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND ct.id = mc.company_type_id   AND cn.id = mc.company_id; "], ["SELECT MIN(t.title) AS movie_title FROM keyword AS k,      movie_info AS mi,      movie_keyword AS mk,      title AS t WHERE k.keyword LIKE '%sequel%'   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Denish',                   'Norwegian',                   'German')   AND t.production_year > 2005   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND mk.movie_id = mi.movie_id   AND k.id = mk.keyword_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(n.name) AS writer,        MIN(t.title) AS complete_violent_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      cast_info AS ci,      info_type AS it1,      info_type AS it2,      keyword AS k,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE cct1.kind IN ('cast',                     'crew')   AND cct2.kind ='complete+verified'   AND ci.note IN ('(writer)',                   '(head writer)',                   '(written by)',                   '(story)',                   '(story editor)')   AND it1.info = 'genres'   AND it2.info = 'votes'   AND k.keyword IN ('murder',                     'violence',                     'blood',                     'gore',                     'death',                     'female-nudity',                     'hospital')   AND mi.info IN ('Horror',                   'Thriller')   AND n.gender = 'm'   AND t.production_year > 2000   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND t.id = cc.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND ci.movie_id = mk.movie_id   AND ci.movie_id = cc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mk.movie_id   AND mi.movie_id = cc.movie_id   AND mi_idx.movie_id = mk.movie_id   AND mi_idx.movie_id = cc.movie_id   AND mk.movie_id = cc.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(n.name) AS member_in_charnamed_movie FROM cast_info AS ci,      company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      name AS n,      title AS t WHERE cn.country_code ='[us]'   AND k.keyword ='character-name-in-title'   AND n.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND ci.movie_id = mc.movie_id   AND ci.movie_id = mk.movie_id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(chn.name) AS character,        MIN(t.title) AS movie_with_american_producer FROM char_name AS chn,      cast_info AS ci,      company_name AS cn,      company_type AS ct,      movie_companies AS mc,      role_type AS rt,      title AS t WHERE ci.note LIKE '%(producer)%'   AND cn.country_code = '[us]'   AND t.production_year > 1990   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mc.movie_id   AND chn.id = ci.person_role_id   AND rt.id = ci.role_id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id;"], ["SELECT MIN(n.name) AS voicing_actress,        MIN(t.title) AS kung_fu_panda FROM aka_name AS an,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      info_type AS it,      movie_companies AS mc,      movie_info AS mi,      name AS n,      role_type AS rt,      title AS t WHERE ci.note = '(voice)'   AND cn.country_code ='[us]'   AND it.info = 'release dates'   AND mc.note LIKE '%(200%)%'   AND (mc.note LIKE '%(USA)%'        OR mc.note LIKE '%(worldwide)%')   AND mi.info IS NOT NULL   AND (mi.info LIKE 'Japan:%2007%'        OR mi.info LIKE 'USA:%2008%')   AND n.gender ='f'   AND n.name LIKE '%Angel%'   AND rt.role ='actress'   AND t.production_year BETWEEN 2007 AND 2008   AND t.title LIKE '%Kung%Fu%Panda%'   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND mc.movie_id = ci.movie_id   AND mc.movie_id = mi.movie_id   AND mi.movie_id = ci.movie_id   AND cn.id = mc.company_id   AND it.id = mi.info_type_id   AND n.id = ci.person_id   AND rt.id = ci.role_id   AND n.id = an.person_id   AND ci.person_id = an.person_id   AND chn.id = ci.person_role_id; "], ["SELECT MIN(an.name) AS alternative_name,        MIN(chn.name) AS character_name,        MIN(t.title) AS movie FROM aka_name AS an,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      movie_companies AS mc,      name AS n,      role_type AS rt,      title AS t WHERE ci.note IN ('(voice)',                   '(voice: Japanese version)',                   '(voice) (uncredited)',                   '(voice: English version)')   AND cn.country_code ='[us]'   AND mc.note IS NOT NULL   AND (mc.note LIKE '%(USA)%'        OR mc.note LIKE '%(worldwide)%')   AND n.gender ='f'   AND n.name LIKE '%Ang%'   AND rt.role ='actress'   AND t.production_year BETWEEN 2005 AND 2015   AND ci.movie_id = t.id   AND t.id = mc.movie_id   AND ci.movie_id = mc.movie_id   AND mc.company_id = cn.id   AND ci.role_id = rt.id   AND n.id = ci.person_id   AND chn.id = ci.person_role_id   AND an.person_id = n.id   AND an.person_id = ci.person_id; "], ["SELECT MIN(cn.name) AS movie_company,        MIN(mi_idx.info) AS rating,        MIN(t.title) AS complete_euro_dark_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      company_name AS cn,      company_type AS ct,      info_type AS it1,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE cct1.kind = 'cast'   AND cct2.kind = 'complete'   AND cn.country_code != '[us]'   AND it1.info = 'countries'   AND it2.info = 'rating'   AND k.keyword IN ('murder',                     'murder-in-title',                     'blood',                     'violence')   AND kt.kind IN ('movie',                   'episode')   AND mc.note NOT LIKE '%(USA)%'   AND mc.note LIKE '%(200%)%'   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Danish',                   'Norwegian',                   'German',                   'USA',                   'American')   AND mi_idx.info < '8.5'   AND t.production_year > 2005   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mi_idx.movie_id   AND t.id = mc.movie_id   AND t.id = cc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mi_idx.movie_id   AND mk.movie_id = mc.movie_id   AND mk.movie_id = cc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mc.movie_id   AND mi.movie_id = cc.movie_id   AND mc.movie_id = mi_idx.movie_id   AND mc.movie_id = cc.movie_id   AND mi_idx.movie_id = cc.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND ct.id = mc.company_type_id   AND cn.id = mc.company_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(cn.name) AS movie_company,        MIN(mi_idx.info) AS rating,        MIN(t.title) AS complete_euro_dark_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      company_name AS cn,      company_type AS ct,      info_type AS it1,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE cct1.kind = 'crew'   AND cct2.kind != 'complete+verified'   AND cn.country_code != '[us]'   AND it1.info = 'countries'   AND it2.info = 'rating'   AND k.keyword IN ('murder',                     'murder-in-title',                     'blood',                     'violence')   AND kt.kind IN ('movie',                   'episode')   AND mc.note NOT LIKE '%(USA)%'   AND mc.note LIKE '%(200%)%'   AND mi.info IN ('Sweden',                   'Germany',                   'Swedish',                   'German')   AND mi_idx.info > '6.5'   AND t.production_year > 2005   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mi_idx.movie_id   AND t.id = mc.movie_id   AND t.id = cc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mi_idx.movie_id   AND mk.movie_id = mc.movie_id   AND mk.movie_id = cc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mc.movie_id   AND mi.movie_id = cc.movie_id   AND mc.movie_id = mi_idx.movie_id   AND mc.movie_id = cc.movie_id   AND mi_idx.movie_id = cc.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND ct.id = mc.company_type_id   AND cn.id = mc.company_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(cn.name) AS producing_company,        MIN(miidx.info) AS rating,        MIN(t.title) AS movie_about_winning FROM company_name AS cn,      company_type AS ct,      info_type AS it,      info_type AS it2,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS miidx,      title AS t WHERE cn.country_code ='[us]'   AND ct.kind ='production companies'   AND it.info ='rating'   AND it2.info ='release dates'   AND kt.kind ='movie'   AND t.title != ''   AND (t.title LIKE 'Champion%'        OR t.title LIKE 'Loser%')   AND mi.movie_id = t.id   AND it2.id = mi.info_type_id   AND kt.id = t.kind_id   AND mc.movie_id = t.id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id   AND miidx.movie_id = t.id   AND it.id = miidx.info_type_id   AND mi.movie_id = miidx.movie_id   AND mi.movie_id = mc.movie_id   AND miidx.movie_id = mc.movie_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(n.name) AS male_writer,        MIN(t.title) AS violent_movie_title FROM cast_info AS ci,      info_type AS it1,      info_type AS it2,      keyword AS k,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE ci.note IN ('(writer)',                   '(head writer)',                   '(written by)',                   '(story)',                   '(story editor)')   AND it1.info = 'genres'   AND it2.info = 'votes'   AND k.keyword IN ('murder',                     'blood',                     'gore',                     'death',                     'female-nudity')   AND mi.info = 'Horror'   AND n.gender = 'm'   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND ci.movie_id = mk.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mk.movie_id   AND mi_idx.movie_id = mk.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND k.id = mk.keyword_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(n.name) AS writer,        MIN(t.title) AS violent_liongate_movie FROM cast_info AS ci,      company_name AS cn,      info_type AS it1,      info_type AS it2,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE ci.note IN ('(writer)',                   '(head writer)',                   '(written by)',                   '(story)',                   '(story editor)')   AND cn.name LIKE 'Lionsgate%'   AND it1.info = 'genres'   AND it2.info = 'votes'   AND k.keyword IN ('murder',                     'violence',                     'blood',                     'gore',                     'death',                     'female-nudity',                     'hospital')   AND mc.note LIKE '%(Blu-ray)%'   AND mi.info IN ('Horror',                   'Thriller')   AND n.gender = 'm'   AND t.production_year > 2000   AND (t.title LIKE '%Freddy%'        OR t.title LIKE '%Jason%'        OR t.title LIKE 'Saw%')   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND t.id = mc.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND ci.movie_id = mk.movie_id   AND ci.movie_id = mc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mk.movie_id   AND mi.movie_id = mc.movie_id   AND mi_idx.movie_id = mk.movie_id   AND mi_idx.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND k.id = mk.keyword_id   AND cn.id = mc.company_id; "], ["SELECT MIN(t.title) AS typical_european_movie FROM company_type AS ct,      info_type AS it,      movie_companies AS mc,      movie_info AS mi,      title AS t WHERE ct.kind = 'production companies'   AND mc.note LIKE '%(theatrical)%'   AND mc.note LIKE '%(France)%'   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Denish',                   'Norwegian',                   'German')   AND t.production_year > 2005   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND mc.movie_id = mi.movie_id   AND ct.id = mc.company_type_id   AND it.id = mi.info_type_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(t.title) AS movie_title FROM cast_info AS ci,      info_type AS it1,      info_type AS it2,      movie_info AS mi,      movie_info_idx AS mi_idx,      name AS n,      title AS t WHERE ci.note IN ('(writer)',                   '(head writer)',                   '(written by)',                   '(story)',                   '(story editor)')   AND it1.info = 'genres'   AND it2.info = 'rating'   AND mi.info IN ('Horror',                   'Thriller')   AND mi.note IS NULL   AND mi_idx.info > '8.0'   AND n.gender IS NOT NULL   AND n.gender = 'f'   AND t.production_year BETWEEN 2008 AND 2014   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND mi.movie_id = mi_idx.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id; "], ["SELECT MIN(chn.name) AS voiced_char_name,        MIN(n.name) AS voicing_actress_name,        MIN(t.title) AS kung_fu_panda FROM aka_name AS an,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      info_type AS it,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      name AS n,      role_type AS rt,      title AS t WHERE ci.note IN ('(voice)',                   '(voice: Japanese version)',                   '(voice) (uncredited)',                   '(voice: English version)')   AND cn.country_code ='[us]'   AND cn.name = 'DreamWorks Animation'   AND it.info = 'release dates'   AND k.keyword IN ('hero',                     'martial-arts',                     'hand-to-hand-combat',                     'computer-animated-movie')   AND mi.info IS NOT NULL   AND (mi.info LIKE 'Japan:%201%'        OR mi.info LIKE 'USA:%201%')   AND n.gender ='f'   AND n.name LIKE '%An%'   AND rt.role ='actress'   AND t.production_year > 2010   AND t.title LIKE 'Kung Fu Panda%'   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND mc.movie_id = ci.movie_id   AND mc.movie_id = mi.movie_id   AND mc.movie_id = mk.movie_id   AND mi.movie_id = ci.movie_id   AND mi.movie_id = mk.movie_id   AND ci.movie_id = mk.movie_id   AND cn.id = mc.company_id   AND it.id = mi.info_type_id   AND n.id = ci.person_id   AND rt.id = ci.role_id   AND n.id = an.person_id   AND ci.person_id = an.person_id   AND chn.id = ci.person_role_id   AND k.id = mk.keyword_id; "], ["SELECT MIN(cn.name) AS movie_company,        MIN(mi_idx.info) AS rating,        MIN(t.title) AS western_violent_movie FROM company_name AS cn,      company_type AS ct,      info_type AS it1,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE cn.country_code != '[us]'   AND it1.info = 'countries'   AND it2.info = 'rating'   AND k.keyword IN ('murder',                     'murder-in-title',                     'blood',                     'violence')   AND kt.kind IN ('movie',                   'episode')   AND mc.note NOT LIKE '%(USA)%'   AND mc.note LIKE '%(200%)%'   AND mi.info IN ('Germany',                   'German',                   'USA',                   'American')   AND mi_idx.info < '7.0'   AND t.production_year > 2008   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mi_idx.movie_id   AND t.id = mc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mi_idx.movie_id   AND mk.movie_id = mc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mc.movie_id   AND mc.movie_id = mi_idx.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND ct.id = mc.company_type_id   AND cn.id = mc.company_id; "], ["SELECT MIN(cn.name) AS company_name,        MIN(lt.link) AS link_type,        MIN(t.title) AS western_follow_up FROM company_name AS cn,      company_type AS ct,      keyword AS k,      link_type AS lt,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      movie_link AS ml,      title AS t WHERE cn.country_code !='[pl]'   AND (cn.name LIKE '%Film%'        OR cn.name LIKE '%Warner%')   AND ct.kind ='production companies'   AND k.keyword ='sequel'   AND lt.link LIKE '%follow%'   AND mc.note IS NULL   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Denish',                   'Norwegian',                   'German')   AND t.production_year BETWEEN 1950 AND 2000   AND lt.id = ml.link_type_id   AND ml.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_type_id = ct.id   AND mc.company_id = cn.id   AND mi.movie_id = t.id   AND ml.movie_id = mk.movie_id   AND ml.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id   AND ml.movie_id = mi.movie_id   AND mk.movie_id = mi.movie_id   AND mc.movie_id = mi.movie_id; "], ["SELECT MIN(cn.name) AS producing_company,        MIN(lt.link) AS link_type,        MIN(t.title) AS complete_western_sequel FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      company_name AS cn,      company_type AS ct,      keyword AS k,      link_type AS lt,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      movie_link AS ml,      title AS t WHERE cct1.kind = 'cast'   AND cct2.kind LIKE 'complete%'   AND cn.country_code !='[pl]'   AND (cn.name LIKE '%Film%'        OR cn.name LIKE '%Warner%')   AND ct.kind ='production companies'   AND k.keyword ='sequel'   AND lt.link LIKE '%follow%'   AND mc.note IS NULL   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Denish',                   'Norwegian',                   'German',                   'English')   AND t.production_year BETWEEN 1950 AND 2010   AND lt.id = ml.link_type_id   AND ml.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_type_id = ct.id   AND mc.company_id = cn.id   AND mi.movie_id = t.id   AND t.id = cc.movie_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id   AND ml.movie_id = mk.movie_id   AND ml.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id   AND ml.movie_id = mi.movie_id   AND mk.movie_id = mi.movie_id   AND mc.movie_id = mi.movie_id   AND ml.movie_id = cc.movie_id   AND mk.movie_id = cc.movie_id   AND mc.movie_id = cc.movie_id   AND mi.movie_id = cc.movie_id; "], ["SELECT MIN(mi_idx.info) AS rating,        MIN(t.title) AS movie_title FROM info_type AS it,      keyword AS k,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE it.info ='rating'   AND k.keyword LIKE '%sequel%'   AND mi_idx.info > '2.0'   AND t.production_year > 1990   AND t.id = mi_idx.movie_id   AND t.id = mk.movie_id   AND mk.movie_id = mi_idx.movie_id   AND k.id = mk.keyword_id   AND it.id = mi_idx.info_type_id; "], ["SELECT MIN(k.keyword) AS movie_keyword,        MIN(n.name) AS actor_name,        MIN(t.title) AS hero_movie FROM cast_info AS ci,      keyword AS k,      movie_keyword AS mk,      name AS n,      title AS t WHERE k.keyword IN ('superhero',                     'sequel',                     'second-part',                     'marvel-comics',                     'based-on-comic',                     'tv-special',                     'fight',                     'violence')   AND n.name LIKE '%Downey%Robert%'   AND t.production_year > 2014   AND k.id = mk.keyword_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mk.movie_id   AND n.id = ci.person_id; "], ["SELECT MIN(cn.name) AS company_name,        MIN(lt.link) AS link_type,        MIN(t.title) AS german_follow_up FROM company_name AS cn,      company_type AS ct,      keyword AS k,      link_type AS lt,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      movie_link AS ml,      title AS t WHERE cn.country_code !='[pl]'   AND (cn.name LIKE '%Film%'        OR cn.name LIKE '%Warner%')   AND ct.kind ='production companies'   AND k.keyword ='sequel'   AND lt.link LIKE '%follow%'   AND mc.note IS NULL   AND mi.info IN ('Germany',                   'German')   AND t.production_year BETWEEN 2000 AND 2010   AND lt.id = ml.link_type_id   AND ml.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_type_id = ct.id   AND mc.company_id = cn.id   AND mi.movie_id = t.id   AND ml.movie_id = mk.movie_id   AND ml.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id   AND ml.movie_id = mi.movie_id   AND mk.movie_id = mi.movie_id   AND mc.movie_id = mi.movie_id; "], ["SELECT MIN(chn.name) AS voiced_char,        MIN(n.name) AS voicing_actress,        MIN(t.title) AS voiced_animation FROM aka_name AS an,      complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      info_type AS it,      info_type AS it3,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      name AS n,      person_info AS pi,      role_type AS rt,      title AS t WHERE cct1.kind ='cast'   AND cct2.kind ='complete+verified'   AND chn.name = 'Queen'   AND ci.note IN ('(voice)',                   '(voice) (uncredited)',                   '(voice: English version)')   AND cn.country_code ='[us]'   AND it.info = 'release dates'   AND it3.info = 'trivia'   AND k.keyword = 'computer-animation'   AND mi.info IS NOT NULL   AND (mi.info LIKE 'Japan:%200%'        OR mi.info LIKE 'USA:%200%')   AND n.gender ='f'   AND n.name LIKE '%An%'   AND rt.role ='actress'   AND t.title = 'Shrek 2'   AND t.production_year BETWEEN 2000 AND 2010   AND t.id = mi.movie_id   AND t.id = mc.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND t.id = cc.movie_id   AND mc.movie_id = ci.movie_id   AND mc.movie_id = mi.movie_id   AND mc.movie_id = mk.movie_id   AND mc.movie_id = cc.movie_id   AND mi.movie_id = ci.movie_id   AND mi.movie_id = mk.movie_id   AND mi.movie_id = cc.movie_id   AND ci.movie_id = mk.movie_id   AND ci.movie_id = cc.movie_id   AND mk.movie_id = cc.movie_id   AND cn.id = mc.company_id   AND it.id = mi.info_type_id   AND n.id = ci.person_id   AND rt.id = ci.role_id   AND n.id = an.person_id   AND ci.person_id = an.person_id   AND chn.id = ci.person_role_id   AND n.id = pi.person_id   AND ci.person_id = pi.person_id   AND it3.id = pi.info_type_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(cn.name) AS from_company,        MIN(mc.note) AS production_note,        MIN(t.title) AS movie_based_on_book FROM company_name AS cn,      company_type AS ct,      keyword AS k,      link_type AS lt,      movie_companies AS mc,      movie_keyword AS mk,      movie_link AS ml,      title AS t WHERE cn.country_code !='[pl]'   AND ct.kind != 'production companies'   AND ct.kind IS NOT NULL   AND k.keyword IN ('sequel',                     'revenge',                     'based-on-novel')   AND mc.note IS NOT NULL   AND t.production_year > 1950   AND lt.id = ml.link_type_id   AND ml.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_type_id = ct.id   AND mc.company_id = cn.id   AND ml.movie_id = mk.movie_id   AND ml.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id; "], ["SELECT MIN(t.title) AS movie_title FROM keyword AS k,      movie_info AS mi,      movie_keyword AS mk,      title AS t WHERE k.keyword LIKE '%sequel%'   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Denish',                   'Norwegian',                   'German',                   'USA',                   'American')   AND t.production_year > 1990   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND mk.movie_id = mi.movie_id   AND k.id = mk.keyword_id; "], ["SELECT MIN(n.name) AS member_in_charnamed_movie FROM cast_info AS ci,      company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      name AS n,      title AS t WHERE k.keyword ='character-name-in-title'   AND n.name LIKE '%Bert%'   AND n.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND ci.movie_id = mc.movie_id   AND ci.movie_id = mk.movie_id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(mi.info) AS release_date,        MIN(t.title) AS modern_american_internet_movie FROM aka_title AS at,      company_name AS cn,      company_type AS ct,      info_type AS it1,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      title AS t WHERE cn.country_code = '[us]'   AND it1.info = 'release dates'   AND mi.note LIKE '%internet%'   AND mi.info IS NOT NULL   AND (mi.info LIKE 'USA:% 199%'        OR mi.info LIKE 'USA:% 200%')   AND t.production_year > 1990   AND t.id = at.movie_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mc.movie_id   AND mk.movie_id = at.movie_id   AND mi.movie_id = mc.movie_id   AND mi.movie_id = at.movie_id   AND mc.movie_id = at.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id; "], ["SELECT MIN(an.name) AS cool_actor_pseudonym,        MIN(t.title) AS series_named_after_char FROM aka_name AS an,      cast_info AS ci,      company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      name AS n,      title AS t WHERE cn.country_code ='[us]'   AND k.keyword ='character-name-in-title'   AND t.episode_nr < 100   AND an.person_id = n.id   AND n.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND an.person_id = ci.person_id   AND ci.movie_id = mc.movie_id   AND ci.movie_id = mk.movie_id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(k.keyword) AS movie_keyword,        MIN(n.name) AS actor_name,        MIN(t.title) AS marvel_movie FROM cast_info AS ci,      keyword AS k,      movie_keyword AS mk,      name AS n,      title AS t WHERE k.keyword = 'marvel-cinematic-universe'   AND n.name LIKE '%Downey%Robert%'   AND t.production_year > 2000   AND k.id = mk.keyword_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mk.movie_id   AND n.id = ci.person_id; "], ["SELECT MIN(kt.kind) AS movie_kind,        MIN(t.title) AS complete_us_internet_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      company_name AS cn,      company_type AS ct,      info_type AS it1,      keyword AS k,      kind_type AS kt,      movie_companies AS mc,      movie_info AS mi,      movie_keyword AS mk,      title AS t WHERE cct1.kind = 'complete+verified'   AND cn.country_code = '[us]'   AND it1.info = 'release dates'   AND kt.kind IN ('movie',                   'tv movie',                   'video movie',                   'video game')   AND mi.note LIKE '%internet%'   AND mi.info IS NOT NULL   AND (mi.info LIKE 'USA:% 199%'        OR mi.info LIKE 'USA:% 200%')   AND t.production_year > 1990   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mc.movie_id   AND t.id = cc.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mc.movie_id   AND mk.movie_id = cc.movie_id   AND mi.movie_id = mc.movie_id   AND mi.movie_id = cc.movie_id   AND mc.movie_id = cc.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND cn.id = mc.company_id   AND ct.id = mc.company_type_id   AND cct1.id = cc.status_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(n.name) AS writer,        MIN(t.title) AS violent_liongate_movie FROM cast_info AS ci,      company_name AS cn,      info_type AS it1,      info_type AS it2,      keyword AS k,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE ci.note IN ('(writer)',                   '(head writer)',                   '(written by)',                   '(story)',                   '(story editor)')   AND cn.name LIKE 'Lionsgate%'   AND it1.info = 'genres'   AND it2.info = 'votes'   AND k.keyword IN ('murder',                     'violence',                     'blood',                     'gore',                     'death',                     'female-nudity',                     'hospital')   AND mi.info IN ('Horror',                   'Thriller')   AND n.gender = 'm'   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND t.id = mc.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND ci.movie_id = mk.movie_id   AND ci.movie_id = mc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mk.movie_id   AND mi.movie_id = mc.movie_id   AND mi_idx.movie_id = mk.movie_id   AND mi_idx.movie_id = mc.movie_id   AND mk.movie_id = mc.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND k.id = mk.keyword_id   AND cn.id = mc.company_id; "], ["SELECT MIN(mi.info) AS budget,        MIN(t.title) AS unsuccsessful_movie FROM company_name AS cn,      company_type AS ct,      info_type AS it1,      info_type AS it2,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      title AS t WHERE cn.country_code ='[us]'   AND ct.kind IS NOT NULL   AND (ct.kind ='production companies'        OR ct.kind = 'distributors')   AND it1.info ='budget'   AND it2.info ='bottom 10 rank'   AND t.production_year >2000   AND (t.title LIKE 'Birdemic%'        OR t.title LIKE '%Movie%')   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND mi.info_type_id = it1.id   AND mi_idx.info_type_id = it2.id   AND t.id = mc.movie_id   AND ct.id = mc.company_type_id   AND cn.id = mc.company_id   AND mc.movie_id = mi.movie_id   AND mc.movie_id = mi_idx.movie_id   AND mi.movie_id = mi_idx.movie_id; "], ["SELECT MIN(an.name) AS cool_actor_pseudonym,        MIN(t.title) AS series_named_after_char FROM aka_name AS an,      cast_info AS ci,      company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      name AS n,      title AS t WHERE cn.country_code ='[us]'   AND k.keyword ='character-name-in-title'   AND t.episode_nr >= 50   AND t.episode_nr < 100   AND an.person_id = n.id   AND n.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND an.person_id = ci.person_id   AND ci.movie_id = mc.movie_id   AND ci.movie_id = mk.movie_id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(an.name) AS alternative_name,        MIN(chn.name) AS voiced_character,        MIN(n.name) AS voicing_actress,        MIN(t.title) AS american_movie FROM aka_name AS an,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      movie_companies AS mc,      name AS n,      role_type AS rt,      title AS t WHERE ci.note = '(voice)'   AND cn.country_code ='[us]'   AND mc.note LIKE '%(200%)%'   AND (mc.note LIKE '%(USA)%'        OR mc.note LIKE '%(worldwide)%')   AND n.gender ='f'   AND n.name LIKE '%Angel%'   AND rt.role ='actress'   AND t.production_year BETWEEN 2007 AND 2010   AND ci.movie_id = t.id   AND t.id = mc.movie_id   AND ci.movie_id = mc.movie_id   AND mc.company_id = cn.id   AND ci.role_id = rt.id   AND n.id = ci.person_id   AND chn.id = ci.person_role_id   AND an.person_id = n.id   AND an.person_id = ci.person_id; "], ["SELECT MIN(k.keyword) AS movie_keyword,        MIN(n.name) AS actor_name,        MIN(t.title) AS hero_movie FROM cast_info AS ci,      keyword AS k,      movie_keyword AS mk,      name AS n,      title AS t WHERE k.keyword IN ('superhero',                     'sequel',                     'second-part',                     'marvel-comics',                     'based-on-comic',                     'tv-special',                     'fight',                     'violence')   AND t.production_year > 2000   AND k.id = mk.keyword_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mk.movie_id   AND n.id = ci.person_id; "], ["SELECT MIN(an1.name) AS costume_designer_pseudo,        MIN(t.title) AS movie_with_costumes FROM aka_name AS an1,      cast_info AS ci,      company_name AS cn,      movie_companies AS mc,      name AS n1,      role_type AS rt,      title AS t WHERE cn.country_code ='[us]'   AND rt.role ='costume designer'   AND an1.person_id = n1.id   AND n1.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND ci.role_id = rt.id   AND an1.person_id = ci.person_id   AND ci.movie_id = mc.movie_id; "], ["SELECT MIN(an.name) AS cool_actor_pseudonym,        MIN(t.title) AS series_named_after_char FROM aka_name AS an,      cast_info AS ci,      company_name AS cn,      keyword AS k,      movie_companies AS mc,      movie_keyword AS mk,      name AS n,      title AS t WHERE cn.country_code ='[us]'   AND k.keyword ='character-name-in-title'   AND t.episode_nr >= 5   AND t.episode_nr < 100   AND an.person_id = n.id   AND n.id = ci.person_id   AND ci.movie_id = t.id   AND t.id = mk.movie_id   AND mk.keyword_id = k.id   AND t.id = mc.movie_id   AND mc.company_id = cn.id   AND an.person_id = ci.person_id   AND ci.movie_id = mc.movie_id   AND ci.movie_id = mk.movie_id   AND mc.movie_id = mk.movie_id; "], ["SELECT MIN(mi.info) AS movie_budget,        MIN(mi_idx.info) AS movie_votes,        MIN(n.name) AS writer,        MIN(t.title) AS complete_violent_movie FROM complete_cast AS cc,      comp_cast_type AS cct1,      comp_cast_type AS cct2,      cast_info AS ci,      info_type AS it1,      info_type AS it2,      keyword AS k,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      name AS n,      title AS t WHERE cct1.kind = 'cast'   AND cct2.kind ='complete+verified'   AND ci.note IN ('(writer)',                   '(head writer)',                   '(written by)',                   '(story)',                   '(story editor)')   AND it1.info = 'genres'   AND it2.info = 'votes'   AND k.keyword IN ('murder',                     'violence',                     'blood',                     'gore',                     'death',                     'female-nudity',                     'hospital')   AND mi.info IN ('Horror',                   'Action',                   'Sci-Fi',                   'Thriller',                   'Crime',                   'War')   AND n.gender = 'm'   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND t.id = ci.movie_id   AND t.id = mk.movie_id   AND t.id = cc.movie_id   AND ci.movie_id = mi.movie_id   AND ci.movie_id = mi_idx.movie_id   AND ci.movie_id = mk.movie_id   AND ci.movie_id = cc.movie_id   AND mi.movie_id = mi_idx.movie_id   AND mi.movie_id = mk.movie_id   AND mi.movie_id = cc.movie_id   AND mi_idx.movie_id = mk.movie_id   AND mi_idx.movie_id = cc.movie_id   AND mk.movie_id = cc.movie_id   AND n.id = ci.person_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id   AND k.id = mk.keyword_id   AND cct1.id = cc.subject_id   AND cct2.id = cc.status_id; "], ["SELECT MIN(cn.name) AS movie_company,        MIN(mi_idx.info) AS rating,        MIN(t.title) AS drama_horror_movie FROM company_name AS cn,      company_type AS ct,      info_type AS it1,      info_type AS it2,      movie_companies AS mc,      movie_info AS mi,      movie_info_idx AS mi_idx,      title AS t WHERE cn.country_code = '[us]'   AND ct.kind = 'production companies'   AND it1.info = 'genres'   AND it2.info = 'rating'   AND mi.info IN ('Drama',                   'Horror')   AND mi_idx.info > '8.0'   AND t.production_year BETWEEN 2005 AND 2008   AND t.id = mi.movie_id   AND t.id = mi_idx.movie_id   AND mi.info_type_id = it1.id   AND mi_idx.info_type_id = it2.id   AND t.id = mc.movie_id   AND ct.id = mc.company_type_id   AND cn.id = mc.company_id   AND mc.movie_id = mi.movie_id   AND mc.movie_id = mi_idx.movie_id   AND mi.movie_id = mi_idx.movie_id; "], ["SELECT MIN(mi_idx.info) AS rating,        MIN(t.title) AS northern_dark_movie FROM info_type AS it1,      info_type AS it2,      keyword AS k,      kind_type AS kt,      movie_info AS mi,      movie_info_idx AS mi_idx,      movie_keyword AS mk,      title AS t WHERE it1.info = 'countries'   AND it2.info = 'rating'   AND k.keyword IN ('murder',                     'murder-in-title',                     'blood',                     'violence')   AND kt.kind = 'movie'   AND mi.info IN ('Sweden',                   'Norway',                   'Germany',                   'Denmark',                   'Swedish',                   'Denish',                   'Norwegian',                   'German',                   'USA',                   'American')   AND mi_idx.info < '8.5'   AND t.production_year > 2010   AND kt.id = t.kind_id   AND t.id = mi.movie_id   AND t.id = mk.movie_id   AND t.id = mi_idx.movie_id   AND mk.movie_id = mi.movie_id   AND mk.movie_id = mi_idx.movie_id   AND mi.movie_id = mi_idx.movie_id   AND k.id = mk.keyword_id   AND it1.id = mi.info_type_id   AND it2.id = mi_idx.info_type_id; "], ["SELECT MIN(k.keyword) AS movie_keyword,        MIN(n.name) AS actor_name,        MIN(t.title) AS hero_movie FROM cast_info AS ci,      keyword AS k,      movie_keyword AS mk,      name AS n,      title AS t WHERE k.keyword IN ('superhero',                     'sequel',                     'second-part',                     'marvel-comics',                     'based-on-comic',                     'tv-special',                     'fight',                     'violence')   AND n.name LIKE '%Downey%Robert%'   AND t.production_year > 2000   AND k.id = mk.keyword_id   AND t.id = mk.movie_id   AND t.id = ci.movie_id   AND ci.movie_id = mk.movie_id   AND n.id = ci.person_id; "], ["SELECT MIN(n.name) AS cast_member_name,        MIN(pi.info) AS cast_member_info FROM aka_name AS an,      cast_info AS ci,      info_type AS it,      link_type AS lt,      movie_link AS ml,      name AS n,      person_info AS pi,      title AS t WHERE an.name IS NOT NULL   AND (an.name LIKE '%a%'        OR an.name LIKE 'A%')   AND it.info ='mini biography'   AND lt.link IN ('references',                   'referenced in',                   'features',                   'featured in')   AND n.name_pcode_cf BETWEEN 'A' AND 'F'   AND (n.gender='m'        OR (n.gender = 'f'            AND n.name LIKE 'A%'))   AND pi.note IS NOT NULL   AND t.production_year BETWEEN 1980 AND 2010   AND n.id = an.person_id   AND n.id = pi.person_id   AND ci.person_id = n.id   AND t.id = ci.movie_id   AND ml.linked_movie_id = t.id   AND lt.id = ml.link_type_id   AND it.id = pi.info_type_id   AND pi.person_id = an.person_id   AND pi.person_id = ci.person_id   AND an.person_id = ci.person_id   AND ci.movie_id = ml.linked_movie_id; "], ["SELECT MIN(an.name) AS alternative_name,        MIN(chn.name) AS voiced_char_name,        MIN(n.name) AS voicing_actress,        MIN(t.title) AS american_movie FROM aka_name AS an,      char_name AS chn,      cast_info AS ci,      company_name AS cn,      movie_companies AS mc,      name AS n,      role_type AS rt,      title AS t WHERE ci.note IN ('(voice)',                   '(voice: Japanese version)',                   '(voice) (uncredited)',                   '(voice: English version)')   AND cn.country_code ='[us]'   AND n.gender ='f'   AND rt.role ='actress'   AND ci.movie_id = t.id   AND t.id = mc.movie_id   AND ci.movie_id = mc.movie_id   AND mc.company_id = cn.id   AND ci.role_id = rt.id   AND n.id = ci.person_id   AND chn.id = ci.person_role_id   AND an.person_id = n.id   AND an.person_id = ci.person_id; "], ]
    
    workload = []
    for idx, x in enumerate(wl):
        if (idx + 1) in query_ids:
            workload.append(x[0])

    print('=====load candidate =====')
    cf = open(f'cands_paper_{WORKLOAD_SHORT}.pickle', 'rb')
    index_candidates = pickle.load(cf)
    print(index_candidates)
    
    if is_fixcount:
        agent = model.DQN(workload[:], index_candidates, 'hypo', conf, is_dnn, is_ps, is_double, a)
        _indexes = agent.train(False, __x)
        indexes = []
        for _i, _idx in enumerate(_indexes):
            if _idx == 1.0:
                indexes.append(index_candidates[_i])
        return indexes
    else:
        agent = model2.DQN(workload, index_candidates, 'hypo', conf, storage_budget_bytes, frequencies, WORKLOAD_SHORT)
        _indexes, storages, best_perf, time, time_of_min, relative_cost = agent.train(False, __x)
        indexes = []
        if _indexes is not None:
            for _i, _idx in enumerate(_indexes):
                if _idx == 1.0:
                    indexes.append(index_candidates[_i])
        return indexes, best_perf, time, time_of_min, relative_cost


def get_perf(f_indexes, _frequencies):
    # _frequencies = [1659, 1301, 1190, 1741, 1688, 1242, 1999, 1808, 1433, 1083, 1796, 1266, 1046, 1353]
    frequencies = np.array(_frequencies) / np.array(_frequencies).sum()
    wf = open('workload.pickle', 'rb')
    workload = pickle.load(wf)
    pg_client = pg.PGHypo()
    pg_client.delete_indexes()
    cost1 = (np.array(pg_client.get_queries_cost(workload))*frequencies).sum()
    print(cost1)
    for f_index in f_indexes:
        pg_client.execute_create_hypo(f_index)
    cost2 = (np.array(pg_client.get_queries_cost(workload))*frequencies).sum()
    print(cost2)
    pg_client.delete_indexes()
    print((cost1-cost2)/cost1)


conf21 = {'LR': 0.002, 'EPISILO': 0.97, 'Q_ITERATION': 200, 'U_ITERATION': 5, 'BATCH_SIZE': 64, 'GAMMA': 0.95,
          'EPISODES': 800, 'LEARNING_START': 1000, 'MEMORY_CAPACITY': 20000}

conf = {'LR': 0.1, 'EPISILO': 0.9, 'Q_ITERATION': 9, 'U_ITERATION': 3, 'BATCH_SIZE': 8, 'GAMMA': 0.9,
        'EPISODES': 800, 'LEARNING_START': 400, 'MEMORY_CAPACITY': 800}
# conf = {'LR': 0.1, 'EPISILO': 0.9, 'Q_ITERATION': 9, 'U_ITERATION': 3, 'BATCH_SIZE': 8, 'GAMMA': 0.9,
        # 'EPISODES': 25, 'LEARNING_START': 5, 'MEMORY_CAPACITY': 800}


# is_fixcount == True, constraint is the index number
# is_fixcount == False, constraint is the index storage unit
def entry(is_fixcount, constraint, storage_budget_bytes, frequencies, query_ids):
    if is_fixcount:
        print(One_Run_DQN(is_fixcount, conf21, constraint, False, True, True, 0))
    else:
        return One_Run_DQN(is_fixcount, conf, constraint, False, False, False, 0, storage_budget_bytes, frequencies, query_ids)

RESULT_FILE = f"results_{WORKLOAD_SHORT}.pickle"

if os.path.exists(RESULT_FILE):
    with open(RESULT_FILE, 'rb') as handle:
        results = pickle.load(handle)
else:
    results = {}

# The pickle file below contains the workloads that were evaluated in our paper.
with open (f"{WORKLOAD_SHORT}_stress_test_workload_dump.pickle", 'rb') as handle:
    workloads = pickle.load(handle)
for idx, wl in enumerate(workloads):
    if str(wl) in results:
        print(f"===== Skipping workload #{idx} ===== ")
        print()
        continue
    print(f"===== Evaluating workload #{idx} ===== ")
    print(wl)
    query_ids = []
    frequencies = []
    for query in wl.queries:
        query_ids.append(query.nr)
        frequencies.append(query.frequency)
    frequencies_sorted = [x for _, x in sorted(zip(query_ids, frequencies))]
    _, best_perf, time, time_of_min, relative_cost = entry(False, 4, wl.budget * 1000 * 1000, frequencies_sorted, query_ids)

    results[str(wl)] = (best_perf, time, time_of_min, relative_cost)
    with open(RESULT_FILE, 'wb') as handle:
        pickle.dump(results, handle, protocol=0)

    print()
